C51 COMPILER V9.60.0.0   RTC_DS1307                                                        03/20/2023 07:32:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RTC_DS1307
OBJECT MODULE PLACED IN .\Objects\RTC_DS1307.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE RTC_DS1307.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\RTC_DS1307.lst) 
                    -TABS(2) OBJECT(.\Objects\RTC_DS1307.obj)

line level    source

   1          #include<reg52.h> 
   2          //#include "LCD8bit.h"
   3          #include "I2C.h"
*** WARNING C280 IN LINE 28 OF delay.h: 'i': unreferenced local variable
   4          #include "LCD4bit.h"
   5          #include "delay.h"
   6          
   7           
   8          int i;
   9          unsigned char sec[2],min[2],hour[2],dow=0,dom[2],month[2],year[2];
  10          unsigned int a[7];
  11          typedef enum { false, true } bool; 
  12           
  13          
  14           
  15          
  16           
  17          int Dec_To_BCD(int dec){
  18   1            return( (dec/10*16) + (dec%10) );
  19   1          }
  20              
  21          
  22          
  23          
  24          void readAllReg()
  25              {
  26   1      I2CStart(); 
  27   1      I2CSend(0xD0);  
  28   1      I2CSend(0x00);  
  29   1      I2CStart(); 
  30   1      I2CSend(0xD1);
  31   1      for (i = 0; i < 8; i++) {
  32   2      
  33   2        a[i] = I2CRead();
  34   2       
  35   2        if(i == 7)
  36   2          I2CNak();
  37   2        else
  38   2          I2CAck();
  39   2      }
  40   1      I2CStop();  
  41   1            
  42   1          }
  43              
  44          void setTime(int Sec, int Min, int Hour,int Dow, int Dom, int Month, int Year)
  45          {
  46   1      
  47   1      
  48   1      I2CStart(); 
  49   1      I2CSend(0xD0);  
  50   1      I2CSend(0x00);  
  51   1      I2CSend(Dec_To_BCD(Sec)&0x7f);
  52   1      I2CSend(Dec_To_BCD(Min)&0x7f);
  53   1      I2CSend(Dec_To_BCD(Hour)&0x3f);
C51 COMPILER V9.60.0.0   RTC_DS1307                                                        03/20/2023 07:32:00 PAGE 2   

  54   1      I2CSend(Dec_To_BCD(Dow)&0x07);
  55   1      I2CSend(Dec_To_BCD(Dom)&0x3f);
  56   1      I2CSend(Dec_To_BCD(Month)&0x1f);
  57   1      I2CSend(Dec_To_BCD(Year)&0xff);
  58   1      I2CStop();
  59   1      
  60   1      
  61   1      
  62   1      } 
  63          
  64          int readSecReg()
  65          {
  66   1      
  67   1      I2CStart(); 
  68   1      I2CSend(0xD0);  
  69   1      I2CSend(0x00);  
  70   1      I2CStart(); 
  71   1      I2CSend(0xD1);
  72   1      a[0] = I2CRead();
  73   1      I2CNak();
  74   1      I2CStop();
  75   1      return(a[0]);
  76   1      } 
  77          
  78          void displayTime()
  79          {
  80   1      int SEC=0;
  81   1      int AM_PM=0;  
  82   1        
  83   1        Cmd(0x01);
  84   1        Cmd(0x80);
  85   1        readAllReg();
  86   1      
  87   1      a[0]=(a[0]&0x0f)+(((a[0]>>4)&0x07)*10);
  88   1      sec[0]=(a[0]/10)+48;sec[1]=(a[0]%10)+48;
  89   1      a[1]=(a[1]&0x0f)+(((a[1]>>4)&0x07)*10);
  90   1      min[0]=a[1]/10+48;min[1]=a[1]%10+48;
  91   1      a[2]=((a[2]&0x0f))+(((a[2]>>4)&0x03)*10);
  92   1      if(a[2]>12){
  93   2      AM_PM=a[2]-12;  
  94   2      hour[0]=AM_PM/10+48;hour[1]=AM_PM%10+48;}
  95   1      else{
  96   2      hour[0]=a[2]/10+48;hour[1]=a[2]%10+48;}
  97   1      a[3]=(a[3]&0x07);dow=a[3];
  98   1      a[4]=(a[4]&0x0f)+(((a[4]>>4)&0x03)*10);
  99   1      dom[0]=a[4]/10+48;dom[1]=a[4]%10+48;
 100   1      a[5]=(a[5]&0x0f)+(((a[5]>>4)&0x01)*10);
 101   1      month[0]=a[5]/10+48;month[1]=a[5]%10+48;
 102   1      a[6]=(a[6]&0x0f)+(((a[6]>>4)&0x0f)*10);
 103   1      year[0]=a[6]/10+48;year[1]=a[6]%10+48;
 104   1      
 105   1      
 106   1      Data(hour[0]);Data(hour[1]);Data(':');
 107   1      Data(min[0]);Data(min[1]);Data(':');
 108   1      Data(sec[0]);Data(sec[1]);Data(' ');
 109   1      if(a[2]<12) Disp("AM"); else Disp("PM");
 110   1      
 111   1      Cmd(0xc0);
 112   1      Data(dom[0]);Data(dom[1]);Data('/');
 113   1      Data(month[0]);Data(month[1]);Data('/');
 114   1      Data(year[0]);Data(year[1]);Data(' ');
 115   1      switch(dow)
C51 COMPILER V9.60.0.0   RTC_DS1307                                                        03/20/2023 07:32:00 PAGE 3   

 116   1            {
 117   2            case 1:Disp("Sunday");break;
 118   2            case 2:Disp("Monday");break;
 119   2            case 3:Disp("Tuesday");break;
 120   2            case 4:Disp("Wednesday");break;
 121   2            case 5:Disp("Thursday");break;
 122   2            case 6:Disp("Friday");break;
 123   2            case 7:Disp("Saturday");break;    
 124   2            }
 125   1          
 126   1      while(a[0]<59)
 127   1      {
 128   2        setCursor(6,0);
 129   2        readSecReg();
 130   2        a[0]=(a[0]&0x0f)+(((a[0]>>4)&0x07)*10);
 131   2        sec[0]=(a[0]/10)+48;sec[1]=(a[0]%10)+48;
 132   2        if(SEC!=a[0]){
 133   3        Data(sec[0]);Data(sec[1]);SEC=a[0];}
 134   2        Delay_ms(100);  
 135   2      }
 136   1      Delay_ms(1000); 
 137   1      
 138   1      
 139   1        
 140   1      }
 141          
 142          
 143          
 144          
 145          
 146          void main()
 147          {
 148   1        initializeLCD();
 149   1      
 150   1      setTime(55,59,11,3,18,7,17); 
 151   1      while(1)
 152   1      {
 153   2        
 154   2      
 155   2      displayTime();
 156   2      
 157   2      
 158   2      } 
 159   1        
 160   1        
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1655    ----
   CONSTANT SIZE    =     63    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     29      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
