

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Wed Dec 27 10:37:45 2023

HI-TECH Software Omniscient Code Generator build 3884
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 3884"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           global __tempreg
    39  0000                     __tempreg	set	112
    40                           global __Lrdata_0, __Hrdata_0
    41  0000                     __Lrdata_0	equ	0x0
    42  0000                     __Hrdata_0	equ	0x1
    43                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    44  0000                     __Lramdata	set	__Lrdata_0
    45  0000                     __Hramdata	set	__Hrdata_0
    46                           	GLOBAL	__databank
    47  0000                     __databank	EQU	0
    48  0000                     _Lcd8_Display_com	equ	??_Lcd8_Display+0
    49                           	global	_Lcd8_Display_com
    50  0000                     _Lcd8_Display_Lcd_i	equ	??_Lcd8_Display+1
    51                           	global	_Lcd8_Display_Lcd_i
    52  0000                     _Lcd8_Display_word	equ	?_Lcd8_Display+0
    53                           	global	_Lcd8_Display_word
    54  0000                     _Lcd8_Display_n	equ	?_Lcd8_Display+1
    55                           	global	_Lcd8_Display_n
    56  0000                     _Lcd8_Write_com	equ	??_Lcd8_Write+0
    57                           	global	_Lcd8_Write_com
    58  0000                     _Lcd8_Write_lr	equ	?_Lcd8_Write+0
    59                           	global	_Lcd8_Write_lr
    60  0000                     _Lcd8_Command_com	equ	??_Lcd8_Command+0
    61                           	global	_Lcd8_Command_com
    62  0000                     _Delay_del	equ	?_Delay+0
    63                           	global	_Delay_del
    64                           ;Data sizes: Strings 102, constant 0, data 0, b
                                 ss 0, persistent 0 stack 12
    65                           	global	_main
    66                           	global	??_main
    67                           	global	?_main
    68                           
    69                           ; *************** function _main **************
                                 *
    70                           ; Defined at:
    71                           ;		line 14 in file "C:\Users\HP\Desktop\pic con
                                 troller\motor display\motordisp1.c"
    72                           ; Parameters:
    73                           ;		None
    74                           ; Auto variables:
    75                           ;		None
    76                           ; Return value:
    77                           ;		type: void 
    78                           ;		size: 0
    79                           ; Registers used:
    80                           ;		wreg, status,2, status,0, pclath, cstack
    81                           ; Tracked objects:
    82                           ;		On entry : BFF/0
    83                           ;		On exit  : 0/0
    84                           ;		Unchanged: 0/0
    85                           ; Data sizes:
    86                           ;		Autos:    0
    87                           ;		Params:   0
    88                           ;		Temp:     0
    89                           ;		Total:    0
    90                           ; This function calls:
    91                           ;		_Lcd8_Init
    92                           ;		_Lcd8_Display
    93                           ;		_Delay
    94                           ; This function is called by:
    95                           ;		Startup code after reset
    96                           ; This function uses a non-reentrant model
    97                           ; 
    98                           	psect	maintext,class=CODE,delta=2
    99                           	file	"C:\Users\HP\Desktop\pic controller\motor
                                  display\motordisp1.c"
   100                           	line	14
   101                           ;motordisp1.c: 13: void main()
   102                           ;motordisp1.c: 14: {
   103                           	
   104  0003                     _main:	
   105                           ; Regs used in _main: [wreg+status,2+status,0+p
                                 clath+cstack]
   106                           	line	15
   107                           ;motordisp1.c: 15: TRISC=0xC0;
   108  0003  30C0               	movlw	(0C0h)
   109  0004  1683               	bsf	status, 5	;RP0=1, select bank1
   110  0005  1303               	bcf	status, 6	;RP2=0, select bank1
   111                           	
   112  0006  0087               	movwf	(135)^080h	;volatile
   113                           	line	16
   114                           ;motordisp1.c: 16: TRISD=0x00;
   115  0007  1003               	clrc
   116                           	
   117  0008  3000               	movlw	0
   118  0009  1803               	btfsc	status,0
   119  000A  3001               	movlw	1
   120  000B  0088               	movwf	(136)^080h	;volatile
   121                           	line	17
   122                           ;motordisp1.c: 17: TRISB=0x00;
   123  000C  1003               	clrc
   124                           	
   125  000D  3000               	movlw	0
   126  000E  1803               	btfsc	status,0
   127  000F  3001               	movlw	1
   128  0010  0086               	movwf	(134)^080h	;volatile
   129                           	line	18
   130                           ;motordisp1.c: 18: RB1=0,RB2=0,RB3=0,RB4=0,RC0=
                                 0,RC1=0,RC2=0,RC3=0;
   131  0011  1283               	bcf	status, 5	;RP0=0, select bank0
   132  0012  1303               	bcf	status, 6	;RP2=0, select bank0
   133  0013  1086               	bcf	(49/8),(49)&7
   134  0014  1106               	bcf	(50/8),(50)&7
   135  0015  1186               	bcf	(51/8),(51)&7
   136  0016  1206               	bcf	(52/8),(52)&7
   137  0017  1007               	bcf	(56/8),(56)&7
   138  0018  1087               	bcf	(57/8),(57)&7
   139  0019  1107               	bcf	(58/8),(58)&7
   140  001A  1187               	bcf	(59/8),(59)&7
   141                           	line	19
   142                           ;motordisp1.c: 19: Lcd8_Init();
   143  001B  120A  118A  27DD   	fcall	_Lcd8_Init
              120A  118A         
   144                           	line	20
   145                           ;motordisp1.c: 20: Lcd8_Display(0x80," Robot   
                                        ",16);
   146  0020  3010               	movlw	low(010h)
   147                           	
   148  0021  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   149  0022  3000               	movlw	high(010h)
   150  0023  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   151  0024  3056               	movlw	((STR_1-__stringbase))&0ffh
   152                           	
   153  0025  00F0               	movwf	(?_Lcd8_Display)
   154  0026  3080               	movlw	(080h)
   155  0027  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   156                           	line	21
   157                           ;motordisp1.c: 21: Lcd8_Display(0xC0," controll
                                 ing    ",16);
   158  002C  3010               	movlw	low(010h)
   159                           	
   160  002D  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   161  002E  3000               	movlw	high(010h)
   162  002F  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   163  0030  3001               	movlw	((STR_2-__stringbase))&0ffh
   164                           	
   165  0031  00F0               	movwf	(?_Lcd8_Display)
   166  0032  30C0               	movlw	(0C0h)
   167  0033  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   168                           	line	22
   169                           ;motordisp1.c: 22: Delay(6500);
   170  0038  3064               	movlw	low(01964h)
   171                           	
   172  0039  00FA               	movwf	(?_Delay)
   173  003A  3019               	movlw	high(01964h)
   174  003B  00FB               	movwf	((?_Delay))+1
   175  003C  120A  118A  26EE   	fcall	_Delay
              120A  118A         
   176                           	line	23
   177                           ;motordisp1.c: 23: while(1){
   178                           	
   179  0041                     l18:	
   180                           	line	24
   181                           ;motordisp1.c: 24: if( RC0 == 1 && RC1 ==0 && R
                                 C2 ==0 && RC3 ==0 )
   182  0041  1283               	bcf	status, 5	;RP0=0, select bank0
   183  0042  1303               	bcf	status, 6	;RP2=0, select bank0
   184  0043  1C07               	btfss	(56/8),(56)&7
   185  0044  2846               	goto	u1361
   186  0045  2847               	goto	u1360
   187  0046                     u1361:
   188  0046  2870               	goto	l20
   189  0047                     u1360:
   190  0047  1887               	btfsc	(57/8),(57)&7
   191  0048  284A               	goto	u1371
   192  0049  284B               	goto	u1370
   193  004A                     u1371:
   194  004A  2870               	goto	l20
   195  004B                     u1370:
   196  004B  1907               	btfsc	(58/8),(58)&7
   197  004C  284E               	goto	u1381
   198  004D  284F               	goto	u1380
   199  004E                     u1381:
   200  004E  2870               	goto	l20
   201  004F                     u1380:
   202  004F  1987               	btfsc	(59/8),(59)&7
   203  0050  2852               	goto	u1391
   204  0051  2853               	goto	u1390
   205  0052                     u1391:
   206  0052  2870               	goto	l20
   207  0053                     u1390:
   208                           	line	26
   209                           ;motordisp1.c: 25: {
   210                           ;motordisp1.c: 26: RB1=0;
   211  0053  1086               	bcf	(49/8),(49)&7
   212                           	line	27
   213                           ;motordisp1.c: 27: RB2=1;
   214  0054  1506               	bsf	(50/8),(50)&7
   215                           	line	28
   216                           ;motordisp1.c: 28: RB3=0;
   217  0055  1186               	bcf	(51/8),(51)&7
   218                           	line	29
   219                           ;motordisp1.c: 29: RB4=1;
   220  0056  1606               	bsf	(52/8),(52)&7
   221                           	line	30
   222                           ;motordisp1.c: 30: Lcd8_Display(0x80," Robot   
                                        ",16);
   223  0057  3010               	movlw	low(010h)
   224                           	
   225  0058  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   226  0059  3000               	movlw	high(010h)
   227  005A  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   228  005B  3056               	movlw	((STR_3-__stringbase))&0ffh
   229                           	
   230  005C  00F0               	movwf	(?_Lcd8_Display)
   231  005D  3080               	movlw	(080h)
   232  005E  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   233                           	line	31
   234                           ;motordisp1.c: 31: Lcd8_Display(0xC0," fordward
                                 ing    ",16);
   235  0063  3010               	movlw	low(010h)
   236                           	
   237  0064  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   238  0065  3000               	movlw	high(010h)
   239  0066  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   240  0067  3012               	movlw	((STR_4-__stringbase))&0ffh
   241                           	
   242  0068  00F0               	movwf	(?_Lcd8_Display)
   243  0069  30C0               	movlw	(0C0h)
   244  006A  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   245                           	line	32
   246                           ;motordisp1.c: 32: }
   247  006F  2913               	goto	l17
   248                           	line	33
   249                           	
   250  0070                     l20:	
   251                           ;motordisp1.c: 33: else if(RC1 == 1 && RC0 ==0 
                                 && RC2 ==0 && RC3 ==0 )
   252  0070  1C87               	btfss	(57/8),(57)&7
   253  0071  2873               	goto	u1401
   254  0072  2874               	goto	u1400
   255  0073                     u1401:
   256  0073  289D               	goto	l22
   257  0074                     u1400:
   258  0074  1807               	btfsc	(56/8),(56)&7
   259  0075  2877               	goto	u1411
   260  0076  2878               	goto	u1410
   261  0077                     u1411:
   262  0077  289D               	goto	l22
   263  0078                     u1410:
   264  0078  1907               	btfsc	(58/8),(58)&7
   265  0079  287B               	goto	u1421
   266  007A  287C               	goto	u1420
   267  007B                     u1421:
   268  007B  289D               	goto	l22
   269  007C                     u1420:
   270  007C  1987               	btfsc	(59/8),(59)&7
   271  007D  287F               	goto	u1431
   272  007E  2880               	goto	u1430
   273  007F                     u1431:
   274  007F  289D               	goto	l22
   275  0080                     u1430:
   276                           	line	34
   277                           ;motordisp1.c: 34: { RB1=1;
   278  0080  1486               	bsf	(49/8),(49)&7
   279                           	line	35
   280                           ;motordisp1.c: 35: RB2=0;
   281  0081  1106               	bcf	(50/8),(50)&7
   282                           	line	36
   283                           ;motordisp1.c: 36: RB3=1;
   284  0082  1586               	bsf	(51/8),(51)&7
   285                           	line	37
   286                           ;motordisp1.c: 37: RB4=0;
   287  0083  1206               	bcf	(52/8),(52)&7
   288                           	line	38
   289                           ;motordisp1.c: 38: Lcd8_Display(0x80," Robot   
                                        ",16);
   290  0084  3010               	movlw	low(010h)
   291                           	
   292  0085  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   293  0086  3000               	movlw	high(010h)
   294  0087  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   295  0088  3056               	movlw	((STR_5-__stringbase))&0ffh
   296                           	
   297  0089  00F0               	movwf	(?_Lcd8_Display)
   298  008A  3080               	movlw	(080h)
   299  008B  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   300                           	line	39
   301                           ;motordisp1.c: 39: Lcd8_Display(0xC0," Reversin
                                 g      ",16);
   302  0090  3010               	movlw	low(010h)
   303                           	
   304  0091  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   305  0092  3000               	movlw	high(010h)
   306  0093  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   307  0094  3023               	movlw	((STR_6-__stringbase))&0ffh
   308                           	
   309  0095  00F0               	movwf	(?_Lcd8_Display)
   310  0096  30C0               	movlw	(0C0h)
   311  0097  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   312                           	line	41
   313                           ;motordisp1.c: 41: }
   314  009C  2913               	goto	l17
   315                           	line	42
   316                           	
   317  009D                     l22:	
   318                           ;motordisp1.c: 42: else if(RC2 == 1 && RC0 ==0 
                                 && RC1 ==0 && RC3 ==0 )
   319  009D  1D07               	btfss	(58/8),(58)&7
   320  009E  28A0               	goto	u1441
   321  009F  28A1               	goto	u1440
   322  00A0                     u1441:
   323  00A0  28CA               	goto	l24
   324  00A1                     u1440:
   325  00A1  1807               	btfsc	(56/8),(56)&7
   326  00A2  28A4               	goto	u1451
   327  00A3  28A5               	goto	u1450
   328  00A4                     u1451:
   329  00A4  28CA               	goto	l24
   330  00A5                     u1450:
   331  00A5  1887               	btfsc	(57/8),(57)&7
   332  00A6  28A8               	goto	u1461
   333  00A7  28A9               	goto	u1460
   334  00A8                     u1461:
   335  00A8  28CA               	goto	l24
   336  00A9                     u1460:
   337  00A9  1987               	btfsc	(59/8),(59)&7
   338  00AA  28AC               	goto	u1471
   339  00AB  28AD               	goto	u1470
   340  00AC                     u1471:
   341  00AC  28CA               	goto	l24
   342  00AD                     u1470:
   343                           	line	44
   344                           ;motordisp1.c: 43: {
   345                           ;motordisp1.c: 44: RB1=0;
   346  00AD  1086               	bcf	(49/8),(49)&7
   347                           	line	45
   348                           ;motordisp1.c: 45: RB2=0;
   349  00AE  1106               	bcf	(50/8),(50)&7
   350                           	line	46
   351                           ;motordisp1.c: 46: RB3=0;
   352  00AF  1186               	bcf	(51/8),(51)&7
   353                           	line	47
   354                           ;motordisp1.c: 47: RB4=1;
   355  00B0  1606               	bsf	(52/8),(52)&7
   356                           	line	48
   357                           ;motordisp1.c: 48: Lcd8_Display(0x80," Robot   
                                        ",16);
   358  00B1  3010               	movlw	low(010h)
   359                           	
   360  00B2  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   361  00B3  3000               	movlw	high(010h)
   362  00B4  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   363  00B5  3056               	movlw	((STR_7-__stringbase))&0ffh
   364                           	
   365  00B6  00F0               	movwf	(?_Lcd8_Display)
   366  00B7  3080               	movlw	(080h)
   367  00B8  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   368                           	line	49
   369                           ;motordisp1.c: 49: Lcd8_Display(0xC0," rightwar
                                 d      ",16);
   370  00BD  3010               	movlw	low(010h)
   371                           	
   372  00BE  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   373  00BF  3000               	movlw	high(010h)
   374  00C0  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   375  00C1  3034               	movlw	((STR_8-__stringbase))&0ffh
   376                           	
   377  00C2  00F0               	movwf	(?_Lcd8_Display)
   378  00C3  30C0               	movlw	(0C0h)
   379  00C4  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   380                           	line	50
   381                           ;motordisp1.c: 50: }
   382  00C9  2913               	goto	l17
   383                           	line	51
   384                           	
   385  00CA                     l24:	
   386                           ;motordisp1.c: 51: else if(RC3 == 1 && RC0 ==0 
                                 && RC2 ==0 && RC1 ==0 )
   387  00CA  1D87               	btfss	(59/8),(59)&7
   388  00CB  28CD               	goto	u1481
   389  00CC  28CE               	goto	u1480
   390  00CD                     u1481:
   391  00CD  28F7               	goto	l26
   392  00CE                     u1480:
   393  00CE  1807               	btfsc	(56/8),(56)&7
   394  00CF  28D1               	goto	u1491
   395  00D0  28D2               	goto	u1490
   396  00D1                     u1491:
   397  00D1  28F7               	goto	l26
   398  00D2                     u1490:
   399  00D2  1907               	btfsc	(58/8),(58)&7
   400  00D3  28D5               	goto	u1501
   401  00D4  28D6               	goto	u1500
   402  00D5                     u1501:
   403  00D5  28F7               	goto	l26
   404  00D6                     u1500:
   405  00D6  1887               	btfsc	(57/8),(57)&7
   406  00D7  28D9               	goto	u1511
   407  00D8  28DA               	goto	u1510
   408  00D9                     u1511:
   409  00D9  28F7               	goto	l26
   410  00DA                     u1510:
   411                           	line	53
   412                           ;motordisp1.c: 52: {
   413                           ;motordisp1.c: 53: RB1=1;
   414  00DA  1486               	bsf	(49/8),(49)&7
   415                           	line	54
   416                           ;motordisp1.c: 54: RB2=0;
   417  00DB  1106               	bcf	(50/8),(50)&7
   418                           	line	55
   419                           ;motordisp1.c: 55: RB3=0;
   420  00DC  1186               	bcf	(51/8),(51)&7
   421                           	line	56
   422                           ;motordisp1.c: 56: RB4=0;
   423  00DD  1206               	bcf	(52/8),(52)&7
   424                           	line	57
   425                           ;motordisp1.c: 57: Lcd8_Display(0x80," Robot   
                                        ",16);
   426  00DE  3010               	movlw	low(010h)
   427                           	
   428  00DF  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   429  00E0  3000               	movlw	high(010h)
   430  00E1  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   431  00E2  3056               	movlw	((STR_9-__stringbase))&0ffh
   432                           	
   433  00E3  00F0               	movwf	(?_Lcd8_Display)
   434  00E4  3080               	movlw	(080h)
   435  00E5  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   436                           	line	58
   437                           ;motordisp1.c: 58: Lcd8_Display(0xC0," leftward
                                        ",16);
   438  00EA  3010               	movlw	low(010h)
   439                           	
   440  00EB  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   441  00EC  3000               	movlw	high(010h)
   442  00ED  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   443  00EE  3045               	movlw	((STR_10-__stringbase))&0ffh
   444                           	
   445  00EF  00F0               	movwf	(?_Lcd8_Display)
   446  00F0  30C0               	movlw	(0C0h)
   447  00F1  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   448                           	line	59
   449                           ;motordisp1.c: 59: }
   450  00F6  2913               	goto	l17
   451                           	line	60
   452                           	
   453  00F7                     l26:	
   454                           	line	62
   455                           ;motordisp1.c: 60: else
   456                           ;motordisp1.c: 61: {
   457                           ;motordisp1.c: 62: RB1=0;
   458  00F7  1086               	bcf	(49/8),(49)&7
   459                           	line	63
   460                           ;motordisp1.c: 63: RB2=0;
   461  00F8  1106               	bcf	(50/8),(50)&7
   462                           	line	64
   463                           ;motordisp1.c: 64: RB3=0;
   464  00F9  1186               	bcf	(51/8),(51)&7
   465                           	line	65
   466                           ;motordisp1.c: 65: RB4=0;
   467  00FA  1206               	bcf	(52/8),(52)&7
   468                           	line	66
   469                           ;motordisp1.c: 66: Lcd8_Display(0x80," Robot   
                                        ",16);
   470  00FB  3010               	movlw	low(010h)
   471                           	
   472  00FC  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   473  00FD  3000               	movlw	high(010h)
   474  00FE  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   475  00FF  3056               	movlw	((STR_11-__stringbase))&0ffh
   476                           	
   477  0100  00F0               	movwf	(?_Lcd8_Display)
   478  0101  3080               	movlw	(080h)
   479  0102  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   480                           	line	67
   481                           ;motordisp1.c: 67: Lcd8_Display(0xC0," controll
                                 ing    ",16);
   482  0107  3010               	movlw	low(010h)
   483                           	
   484  0108  00F1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   485  0109  3000               	movlw	high(010h)
   486  010A  00F2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   487  010B  3001               	movlw	((STR_12-__stringbase))&0ffh
   488                           	
   489  010C  00F0               	movwf	(?_Lcd8_Display)
   490  010D  30C0               	movlw	(0C0h)
   491  010E  120A  118A  2775   	fcall	_Lcd8_Display
              120A  118A         
   492                           	line	68
   493                           	
   494  0113                     l27:	
   495                           	
   496  0113                     l25:	
   497                           	
   498  0113                     l23:	
   499                           	
   500  0113                     l21:	
   501                           	line	69
   502                           	
   503  0113                     l17:	
   504                           	line	23
   505  0113  2841               	goto	l18
   506                           	global	start
   507  0114  120A  118A  2800   	ljmp	start
   508                           ; =============== function _main ends =========
                                 ======
   509                           
   510                           GLOBAL __end_of_main
   511  0117                     	__end_of_main:
   512                           	FNSIZE	_main,0,0
   513                           	psect	maintext
   514                           	line	71
   515                           	signat	_main,88
   516                           	global	_Lcd8_Display
   517                           	global	??_Lcd8_Display
   518                           	global	?_Lcd8_Display
   519                           
   520                           ; *************** function _Lcd8_Display ******
                                 *********
   521                           ; Defined at:
   522                           ;		line 51 in file "C:\Users\HP\Desktop\pic con
                                 troller\motor display\pic_lcd8.h"
   523                           ; Parameters:
   524                           ;		com         	reg:   wr	type: unsigned char 
   525                           ;		word        	offs:   0	type: PTR const unsig
                                 ned char ; Largest target is 17
   526                           ;		 -> STR_12(17), STR_11(17), STR_10(17), STR_
                                 9(17), 
   527                           ;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(1
                                 7), 
   528                           ;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(1
                                 7), 
   529                           ;		n           	offs:   1	type: unsigned int 
   530                           ; Auto variables:
   531                           ;		com         	       	type: unsigned char 
   532                           ;		Lcd_i       	       	type: unsigned char 
   533                           ; Return value:
   534                           ;		type: void 
   535                           ;		size: 0
   536                           ; Registers used:
   537                           ;		wreg, status,2, status,0, pclath, cstack
   538                           ; Tracked objects:
   539                           ;		On entry : 0/0
   540                           ;		On exit  : 0/0
   541                           ;		Unchanged: 0/0
   542                           ; Data sizes:
   543                           ;		Autos:    2
   544                           ;		Params:   3
   545                           ;		Temp:     2
   546                           ;		Total:    7
   547                           ; This function calls:
   548                           ;		_Lcd8_Write
   549                           ; This function is called by:
   550                           ;		_main
   551                           ; This function uses a non-reentrant model
   552                           ; 
   553                           	psect	text43,local,class=CODE,delta=2
   554                           	file	"C:\Users\HP\Desktop\pic controller\motor
                                  display\pic_lcd8.h"
   555                           	line	51
   556                           ;pic_lcd8.h: 50: void Lcd8_Display(unsigned cha
                                 r com,const unsigned char *word,unsigned int n)
   557                           ;pic_lcd8.h: 51: {
   558                           	
   559  0775                     _Lcd8_Display:	
   560                           ; Regs used in _Lcd8_Display: [wreg+status,2+st
                                 atus,0+pclath+cstack]
   561                           ;_Lcd8_Display_com stored from wreg
   562                           	line	54
   563                           	
   564  0775  00F3               	movwf	(_Lcd8_Display_com)
   565                           ;pic_lcd8.h: 52: unsigned char Lcd_i;
   566                           ;pic_lcd8.h: 54: for(Lcd_i=0;Lcd_i<n;Lcd_i++)
   567  0776  1003               	clrc
   568                           	
   569  0777  3000               	movlw	0
   570  0778  1803               	btfsc	status,0
   571  0779  3001               	movlw	1
   572  077A  00F4               	movwf	(_Lcd8_Display_Lcd_i)
   573  077B  2F8F               	goto	l8
   574                           	line	55
   575                           	
   576  077C                     l5:	
   577                           	line	56
   578                           ;pic_lcd8.h: 55: {
   579                           ;pic_lcd8.h: 56: Lcd8_Write(com+Lcd_i,word[Lcd_
                                 i]);
   580                           	
   581                           	
   582  077C  0870               	movf	(_Lcd8_Display_word),w
   583                           	
   584  077D  0774               	addwf	(_Lcd8_Display_Lcd_i),w
   585  077E  120A  118A  2709   	fcall	stringdir
              120A  118A         
   586                           	
   587  0783  00F7               	movwf	(?_Lcd8_Write)
   588                           	
   589  0784  0874               	movf	(_Lcd8_Display_Lcd_i),w
   590                           	
   591                           	
   592  0785  0773               	addwf	(_Lcd8_Display_com),w
   593  0786  120A  118A  279D   	fcall	_Lcd8_Write
              120A  118A         
   594                           	line	54
   595  078B  3001               	movlw	(01h)
   596  078C  00F5               	movwf	(??_Lcd8_Display+2+0)
   597                           	
   598  078D  0875               	movf	(??_Lcd8_Display+2+0),w
   599  078E  07F4               	addwf	(_Lcd8_Display_Lcd_i),f
   600                           	
   601  078F                     l8:	
   602                           	
   603                           	
   604  078F  0874               	movf	(_Lcd8_Display_Lcd_i),w
   605                           	
   606  0790  00F5               	movwf	(??_Lcd8_Display+2+0)
   607  0791  01F6               	clrf	(??_Lcd8_Display+2+0+1)
   608  0792  0872               	movf	(_Lcd8_Display_n+1),w
   609  0793  0276               	subwf	1+(??_Lcd8_Display+2+0),w
   610  0794  1D03               	skipz
   611  0795  2F98               	goto	u1525
   612  0796  0871               	movf	(_Lcd8_Display_n),w
   613  0797  0275               	subwf	0+(??_Lcd8_Display+2+0),w
   614  0798                     u1525:
   615  0798  1C03               	skipc
   616  0799  2F9B               	goto	u1521
   617  079A  2F9C               	goto	u1520
   618  079B                     u1521:
   619  079B  2F7C               	goto	l5
   620  079C                     u1520:
   621                           	
   622  079C                     l6:	
   623                           	line	58
   624                           ;pic_lcd8.h: 57: }
   625                           ;pic_lcd8.h: 58: }
   626  079C                     l4:	
   627  079C  0008               	return
   628                           ; =============== function _Lcd8_Display ends =
                                 ==============
   629                           
   630                           GLOBAL __end_of_Lcd8_Display
   631  079D                     	__end_of_Lcd8_Display:
   632                           	FNSIZE	_Lcd8_Display,4,3
   633                           	signat	_Lcd8_Display,12408
   634                           	global	_Lcd8_Init
   635                           	global	??_Lcd8_Init
   636                           	global	?_Lcd8_Init
   637                           
   638                           ; *************** function _Lcd8_Init *********
                                 ******
   639                           ; Defined at:
   640                           ;		line 21 in file "C:\Users\HP\Desktop\pic con
                                 troller\motor display\pic_lcd8.h"
   641                           ; Parameters:
   642                           ;		None
   643                           ; Auto variables:
   644                           ;		None
   645                           ; Return value:
   646                           ;		type: void 
   647                           ;		size: 0
   648                           ; Registers used:
   649                           ;		wreg, status,2, status,0, pclath, cstack
   650                           ; Tracked objects:
   651                           ;		On entry : BFF/0
   652                           ;		On exit  : 0/0
   653                           ;		Unchanged: 0/0
   654                           ; Data sizes:
   655                           ;		Autos:    0
   656                           ;		Params:   0
   657                           ;		Temp:     0
   658                           ;		Total:    0
   659                           ; This function calls:
   660                           ;		_Lcd8_Command
   661                           ; This function is called by:
   662                           ;		_main
   663                           ; This function uses a non-reentrant model
   664                           ; 
   665                           	psect	text44,local,class=CODE,delta=2
   666                           	file	"C:\Users\HP\Desktop\pic controller\motor
                                  display\pic_lcd8.h"
   667                           	line	21
   668                           ;pic168xa.h: 19: volatile unsigned char INDF @ 
                                 0x00;
   669                           ;pic168xa.h: 20: volatile unsigned char TMR0 @ 
                                 0x01;
   670                           ;pic168xa.h: 21: volatile unsigned char PCL @ 0
                                 x02;
   671                           ;pic168xa.h: 22: volatile unsigned char STATUS 
                                 @ 0x03;
   672                           ;pic168xa.h: 23: unsigned char FSR @ 0x04;
   673                           ;pic168xa.h: 24: volatile unsigned char PORTA @
                                  0x05;
   674                           ;pic168xa.h: 25: volatile unsigned char PORTB @
                                  0x06;
   675                           ;pic168xa.h: 26: volatile unsigned char PORTC @
                                  0x07;
   676                           ;pic168xa.h: 28: volatile unsigned char PORTD @
                                  0x08;
   677                           ;pic168xa.h: 29: volatile unsigned char PORTE @
                                  0x09;
   678                           	
   679  07DD                     _Lcd8_Init:	
   680                           ; Regs used in _Lcd8_Init: [wreg+status,2+statu
                                 s,0+pclath+cstack]
   681                           	line	22
   682                           ;pic_lcd8.h: 22: Lcd8_Command(0x38);
   683  07DD  3038               	movlw	(038h)
   684  07DE  120A  118A  27C0   	fcall	_Lcd8_Command
              120A  118A         
   685                           	line	23
   686                           ;pic_lcd8.h: 23: Lcd8_Command(0x06);
   687  07E3  3006               	movlw	(06h)
   688  07E4  120A  118A  27C0   	fcall	_Lcd8_Command
              120A  118A         
   689                           	line	24
   690                           ;pic_lcd8.h: 24: Lcd8_Command(0x0c);
   691  07E9  300C               	movlw	(0Ch)
   692  07EA  120A  118A  27C0   	fcall	_Lcd8_Command
              120A  118A         
   693                           	line	25
   694                           ;pic_lcd8.h: 25: Lcd8_Command(0x01);
   695  07EF  3001               	movlw	(01h)
   696  07F0  120A  118A  27C0   	fcall	_Lcd8_Command
              120A  118A         
   697                           	line	26
   698                           ;pic_lcd8.h: 26: }
   699  07F5                     l1:	
   700  07F5  0008               	return
   701                           ; =============== function _Lcd8_Init ends ====
                                 ===========
   702                           
   703                           GLOBAL __end_of_Lcd8_Init
   704  07F6                     	__end_of_Lcd8_Init:
   705                           	FNSIZE	_Lcd8_Init,0,0
   706                           	signat	_Lcd8_Init,88
   707                           	global	_Lcd8_Write
   708                           	global	??_Lcd8_Write
   709                           	global	?_Lcd8_Write
   710                           
   711                           ; *************** function _Lcd8_Write ********
                                 *******
   712                           ; Defined at:
   713                           ;		line 39 in file "C:\Users\HP\Desktop\pic con
                                 troller\motor display\pic_lcd8.h"
   714                           ; Parameters:
   715                           ;		com         	reg:   wr	type: unsigned char 
   716                           ;		lr          	offs:   0	type: unsigned char 
   717                           ; Auto variables:
   718                           ;		com         	       	type: unsigned char 
   719                           ; Return value:
   720                           ;		type: void 
   721                           ;		size: 0
   722                           ; Registers used:
   723                           ;		wreg, status,2, status,0, pclath, cstack
   724                           ; Tracked objects:
   725                           ;		On entry : 0/0
   726                           ;		On exit  : 0/0
   727                           ;		Unchanged: 0/0
   728                           ; Data sizes:
   729                           ;		Autos:    1
   730                           ;		Params:   1
   731                           ;		Temp:     0
   732                           ;		Total:    2
   733                           ; This function calls:
   734                           ;		_Lcd8_Command
   735                           ;		_Delay
   736                           ; This function is called by:
   737                           ;		_Lcd8_Display
   738                           ; This function uses a non-reentrant model
   739                           ; 
   740                           	psect	text45,local,class=CODE,delta=2
   741                           	file	"C:\Users\HP\Desktop\pic controller\motor
                                  display\pic_lcd8.h"
   742                           	line	39
   743                           ;pic_lcd8.h: 38: void Lcd8_Write(unsigned char 
                                 com,unsigned char lr)
   744                           ;pic_lcd8.h: 39: {
   745                           	
   746  079D                     _Lcd8_Write:	
   747                           ; Regs used in _Lcd8_Write: [wreg+status,2+stat
                                 us,0+pclath+cstack]
   748                           ;_Lcd8_Write_com stored from wreg
   749                           	
   750  079D  00F8               	movwf	(_Lcd8_Write_com)
   751                           	line	40
   752                           ;pic_lcd8.h: 40: Lcd8_Command(com);
   753                           	
   754  079E  0878               	movf	(_Lcd8_Write_com),w
   755                           	
   756  079F  120A  118A  27C0   	fcall	_Lcd8_Command
              120A  118A         
   757                           	line	42
   758                           ;pic_lcd8.h: 42: PORTD=lr;
   759                           	
   760  07A4  0877               	movf	(_Lcd8_Write_lr),w
   761                           	
   762  07A5  1283               	bcf	status, 5	;RP0=0, select bank0
   763  07A6  1303               	bcf	status, 6	;RP2=0, select bank0
   764                           	
   765  07A7  0088               	movwf	(8)	;volatile
   766                           	line	43
   767                           ;pic_lcd8.h: 43: Lcd_en=1;
   768  07A8  1687               	bsf	(61/8),(61)&7
   769                           	line	44
   770                           ;pic_lcd8.h: 44: Lcd_rs=1;
   771  07A9  1607               	bsf	(60/8),(60)&7
   772                           	line	45
   773                           ;pic_lcd8.h: 45: Delay(125);
   774  07AA  307D               	movlw	low(07Dh)
   775                           	
   776  07AB  00FA               	movwf	(?_Delay)
   777  07AC  3000               	movlw	high(07Dh)
   778  07AD  00FB               	movwf	((?_Delay))+1
   779  07AE  120A  118A  26EE   	fcall	_Delay
              120A  118A         
   780                           	line	46
   781                           ;pic_lcd8.h: 46: Lcd_en=0;
   782  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
   783  07B4  1303               	bcf	status, 6	;RP2=0, select bank0
   784  07B5  1287               	bcf	(61/8),(61)&7
   785                           	line	47
   786                           ;pic_lcd8.h: 47: Delay(125);
   787  07B6  307D               	movlw	low(07Dh)
   788                           	
   789  07B7  00FA               	movwf	(?_Delay)
   790  07B8  3000               	movlw	high(07Dh)
   791  07B9  00FB               	movwf	((?_Delay))+1
   792  07BA  120A  118A  26EE   	fcall	_Delay
              120A  118A         
   793                           	line	48
   794                           ;pic_lcd8.h: 48: }
   795  07BF                     l3:	
   796  07BF  0008               	return
   797                           ; =============== function _Lcd8_Write ends ===
                                 ============
   798                           
   799                           GLOBAL __end_of_Lcd8_Write
   800  07C0                     	__end_of_Lcd8_Write:
   801                           	FNSIZE	_Lcd8_Write,1,1
   802                           	signat	_Lcd8_Write,8312
   803                           	global	_Lcd8_Command
   804                           	global	??_Lcd8_Command
   805                           	global	?_Lcd8_Command
   806                           
   807                           ; *************** function _Lcd8_Command ******
                                 *********
   808                           ; Defined at:
   809                           ;		line 29 in file "C:\Users\HP\Desktop\pic con
                                 troller\motor display\pic_lcd8.h"
   810                           ; Parameters:
   811                           ;		com         	reg:   wr	type: unsigned char 
   812                           ; Auto variables:
   813                           ;		com         	       	type: unsigned char 
   814                           ; Return value:
   815                           ;		type: void 
   816                           ;		size: 0
   817                           ; Registers used:
   818                           ;		wreg, status,2, status,0, pclath, cstack
   819                           ; Tracked objects:
   820                           ;		On entry : 0/0
   821                           ;		On exit  : 0/0
   822                           ;		Unchanged: 0/0
   823                           ; Data sizes:
   824                           ;		Autos:    1
   825                           ;		Params:   0
   826                           ;		Temp:     0
   827                           ;		Total:    1
   828                           ; This function calls:
   829                           ;		_Delay
   830                           ; This function is called by:
   831                           ;		_Lcd8_Init
   832                           ;		_Lcd8_Write
   833                           ; This function uses a non-reentrant model
   834                           ; 
   835                           	psect	text46,local,class=CODE,delta=2
   836                           	file	"C:\Users\HP\Desktop\pic controller\motor
                                  display\pic_lcd8.h"
   837                           	line	29
   838                           ;pic_lcd8.h: 28: void Lcd8_Command(unsigned cha
                                 r com)
   839                           ;pic_lcd8.h: 29: {
   840                           	
   841  07C0                     _Lcd8_Command:	
   842                           ; Regs used in _Lcd8_Command: [wreg+status,2+st
                                 atus,0+pclath+cstack]
   843                           ;_Lcd8_Command_com stored from wreg
   844                           	
   845  07C0  00F9               	movwf	(_Lcd8_Command_com)
   846                           	line	30
   847                           ;pic_lcd8.h: 30: PORTD=com;
   848                           	
   849  07C1  0879               	movf	(_Lcd8_Command_com),w
   850                           	
   851  07C2  1283               	bcf	status, 5	;RP0=0, select bank0
   852  07C3  1303               	bcf	status, 6	;RP2=0, select bank0
   853                           	
   854  07C4  0088               	movwf	(8)	;volatile
   855                           	line	31
   856                           ;pic_lcd8.h: 31: Lcd_en=1;
   857  07C5  1687               	bsf	(61/8),(61)&7
   858                           	line	32
   859                           ;pic_lcd8.h: 32: Lcd_rs=0;
   860  07C6  1207               	bcf	(60/8),(60)&7
   861                           	line	33
   862                           ;pic_lcd8.h: 33: Delay(125);
   863  07C7  307D               	movlw	low(07Dh)
   864                           	
   865  07C8  00FA               	movwf	(?_Delay)
   866  07C9  3000               	movlw	high(07Dh)
   867  07CA  00FB               	movwf	((?_Delay))+1
   868  07CB  120A  118A  26EE   	fcall	_Delay
              120A  118A         
   869                           	line	34
   870                           ;pic_lcd8.h: 34: Lcd_en=0;
   871  07D0  1283               	bcf	status, 5	;RP0=0, select bank0
   872  07D1  1303               	bcf	status, 6	;RP2=0, select bank0
   873  07D2  1287               	bcf	(61/8),(61)&7
   874                           	line	35
   875                           ;pic_lcd8.h: 35: Delay(125);
   876  07D3  307D               	movlw	low(07Dh)
   877                           	
   878  07D4  00FA               	movwf	(?_Delay)
   879  07D5  3000               	movlw	high(07Dh)
   880  07D6  00FB               	movwf	((?_Delay))+1
   881  07D7  120A  118A  26EE   	fcall	_Delay
              120A  118A         
   882                           	line	36
   883                           ;pic_lcd8.h: 36: }
   884  07DC                     l2:	
   885  07DC  0008               	return
   886                           ; =============== function _Lcd8_Command ends =
                                 ==============
   887                           
   888                           GLOBAL __end_of_Lcd8_Command
   889  07DD                     	__end_of_Lcd8_Command:
   890                           	FNSIZE	_Lcd8_Command,1,0
   891                           	signat	_Lcd8_Command,4216
   892                           	global	_Delay
   893                           	global	??_Delay
   894                           	global	?_Delay
   895                           
   896                           ; *************** function _Delay *************
                                 **
   897                           ; Defined at:
   898                           ;		line 106 in file "C:\Users\HP\Desktop\pic co
                                 ntroller\motor display\pic_lcd8.h"
   899                           ; Parameters:
   900                           ;		del         	offs:   0	type: unsigned int 
   901                           ; Auto variables:
   902                           ;		None
   903                           ; Return value:
   904                           ;		type: void 
   905                           ;		size: 0
   906                           ; Registers used:
   907                           ;		wreg
   908                           ; Tracked objects:
   909                           ;		On entry : 0/0
   910                           ;		On exit  : 0/0
   911                           ;		Unchanged: 0/0
   912                           ; Data sizes:
   913                           ;		Autos:    0
   914                           ;		Params:   2
   915                           ;		Temp:     0
   916                           ;		Total:    2
   917                           ; This function calls:
   918                           ;		Nothing
   919                           ; This function is called by:
   920                           ;		_Lcd8_Command
   921                           ;		_Lcd8_Write
   922                           ;		_main
   923                           ; This function uses a non-reentrant model
   924                           ; 
   925                           	psect	text47,local,class=CODE,delta=2
   926                           	file	"C:\Users\HP\Desktop\pic controller\motor
                                  display\pic_lcd8.h"
   927                           	line	106
   928                           ;pic_lcd8.h: 105: void Delay(unsigned int del)
   929                           ;pic_lcd8.h: 106: {
   930                           	
   931  06EE                     _Delay:	
   932                           ; Regs used in _Delay: [wreg]
   933                           	line	107
   934                           ;pic_lcd8.h: 107: while(del--);
   935  06EE  2EEF               	goto	l13
   936                           	
   937  06EF                     l13:	
   938                           	
   939  06EF  3001               	movlw	low(01h)
   940  06F0  02FA               	subwf	(_Delay_del),f
   941  06F1  3000               	movlw	high(01h)
   942  06F2  1C03               	skipc
   943  06F3  03FB               	decf	(_Delay_del+1),f
   944  06F4  02FB               	subwf	(_Delay_del+1),f
   945  06F5  30FF               	movlw	high(0FFFFh)
   946  06F6  067B               	xorwf	((_Delay_del+1))&07fh,w
   947  06F7  1D03               	skipz
   948  06F8  2EFB               	goto	u1535
   949  06F9  30FF               	movlw	low(0FFFFh)
   950  06FA  067A               	xorwf	((_Delay_del))&07fh,w
   951  06FB                     u1535:
   952                           
   953  06FB  1D03               	skipz
   954  06FC  2EFE               	goto	u1531
   955  06FD  2EFF               	goto	u1530
   956  06FE                     u1531:
   957  06FE  2EEF               	goto	l13
   958  06FF                     u1530:
   959                           	
   960  06FF                     l15:	
   961                           	line	108
   962                           ;pic_lcd8.h: 108: }
   963  06FF                     l12:	
   964  06FF  0008               	return
   965                           ; =============== function _Delay ends ========
                                 =======
   966                           
   967                           GLOBAL __end_of_Delay
   968  0700                     	__end_of_Delay:
   969                           	FNSIZE	_Delay,0,2
   970                           	signat	_Delay,4216
   971                           	FNCALL	_main,_Lcd8_Init
   972                           	FNCALL	_main,_Lcd8_Display
   973                           	FNCALL	_main,_Delay
   974                           	FNCALL	_Lcd8_Display,_Lcd8_Write
   975                           	FNCALL	_Lcd8_Init,_Lcd8_Command
   976                           	FNCALL	_Lcd8_Write,_Lcd8_Command
   977                           	FNCALL	_Lcd8_Write,_Delay
   978                           	FNCALL	_Lcd8_Command,_Delay
   979                           	FNROOT	_main
   980                           	psect	strings,class=CODE,delta=2,reloc=256
   981                           	global	stringdir,stringtab,__stringbase,string
                                 jmp
   982  0700                     stringtab:
   983  0700  00FE               	movwf	(btemp)&07Fh
   984  0701  1FFE               	btfss	(btemp)&07Fh,7
   985  0702  2F08               	goto	stringcode
   986  0703  1383               	bcf	status,7
   987  0704  187E               	btfsc	btemp&7Fh,0
   988  0705  1783               	bsf	status,7
   989  0706  0800               	movf	indf,w
   990  0707  0008               	return
   991  0708                     stringcode:
   992  0708  0804               	movf	fsr,w
   993  0709                     stringdir:
   994  0709  00FE               movwf btemp&07Fh
   995  070A  3007               movlw high(stringdir)
   996  070B  008A               movwf pclath
   997  070C  087E               movf btemp&07Fh,w
   998  070D                     stringjmp:
   999  070D  0782               	addwf pc
  1000  070E                     __stringbase:
  1001  070E  3400               	retlw	0
  1002                           	global	_ADCON0
  1003                           	global	_ADCON0
  1004  0000                     	_ADCON0	set	0x1F
  1005                           
  1006                           	global	_ADCON1
  1007                           	global	_ADCON1
  1008  0000                     	_ADCON1	set	0x9F
  1009                           
  1010                           	global	_ADRESH
  1011                           	global	_ADRESH
  1012  0000                     	_ADRESH	set	0x1E
  1013                           
  1014                           	global	_ADRESL
  1015                           	global	_ADRESL
  1016  0000                     	_ADRESL	set	0x9E
  1017                           
  1018                           	global	_CCP1CON
  1019                           	global	_CCP1CON
  1020  0000                     	_CCP1CON	set	0x17
  1021                           
  1022                           	global	_CCP2CON
  1023                           	global	_CCP2CON
  1024  0000                     	_CCP2CON	set	0x1D
  1025                           
  1026                           	global	_CCPR1H
  1027                           	global	_CCPR1H
  1028  0000                     	_CCPR1H	set	0x16
  1029                           
  1030                           	global	_CCPR1L
  1031                           	global	_CCPR1L
  1032  0000                     	_CCPR1L	set	0x15
  1033                           
  1034                           	global	_CCPR2H
  1035                           	global	_CCPR2H
  1036  0000                     	_CCPR2H	set	0x1C
  1037                           
  1038                           	global	_CCPR2L
  1039                           	global	_CCPR2L
  1040  0000                     	_CCPR2L	set	0x1B
  1041                           
  1042                           	global	_CMCON
  1043                           	global	_CMCON
  1044  0000                     	_CMCON	set	0x9C
  1045                           
  1046                           	global	_CVRCON
  1047                           	global	_CVRCON
  1048  0000                     	_CVRCON	set	0x9D
  1049                           
  1050                           	global	_EEADR
  1051                           	global	_EEADR
  1052  0000                     	_EEADR	set	0x10D
  1053                           
  1054                           	global	_EEADRH
  1055                           	global	_EEADRH
  1056  0000                     	_EEADRH	set	0x10F
  1057                           
  1058                           	global	_EEADRL
  1059                           	global	_EEADRL
  1060  0000                     	_EEADRL	set	0x10D
  1061                           
  1062                           	global	_EECON1
  1063                           	global	_EECON1
  1064  0000                     	_EECON1	set	0x18C
  1065                           
  1066                           	global	_EECON2
  1067                           	global	_EECON2
  1068  0000                     	_EECON2	set	0x18D
  1069                           
  1070                           	global	_EEDATA
  1071                           	global	_EEDATA
  1072  0000                     	_EEDATA	set	0x10C
  1073                           
  1074                           	global	_EEDATH
  1075                           	global	_EEDATH
  1076  0000                     	_EEDATH	set	0x10E
  1077                           
  1078                           	global	_FSR
  1079                           	global	_FSR
  1080  0000                     	_FSR	set	0x4
  1081                           
  1082                           	global	_INDF
  1083                           	global	_INDF
  1084  0000                     	_INDF	set	0x0
  1085                           
  1086                           	global	_INTCON
  1087                           	global	_INTCON
  1088  0000                     	_INTCON	set	0xB
  1089                           
  1090                           	global	_OPTION
  1091                           	global	_OPTION
  1092  0000                     	_OPTION	set	0x81
  1093                           
  1094                           	global	_PCL
  1095                           	global	_PCL
  1096  0000                     	_PCL	set	0x2
  1097                           
  1098                           	global	_PCLATH
  1099                           	global	_PCLATH
  1100  0000                     	_PCLATH	set	0xA
  1101                           
  1102                           	global	_PCON
  1103                           	global	_PCON
  1104  0000                     	_PCON	set	0x8E
  1105                           
  1106                           	global	_PIE1
  1107                           	global	_PIE1
  1108  0000                     	_PIE1	set	0x8C
  1109                           
  1110                           	global	_PIE2
  1111                           	global	_PIE2
  1112  0000                     	_PIE2	set	0x8D
  1113                           
  1114                           	global	_PIR1
  1115                           	global	_PIR1
  1116  0000                     	_PIR1	set	0xC
  1117                           
  1118                           	global	_PIR2
  1119                           	global	_PIR2
  1120  0000                     	_PIR2	set	0xD
  1121                           
  1122                           	global	_PORTA
  1123                           	global	_PORTA
  1124  0000                     	_PORTA	set	0x5
  1125                           
  1126                           	global	_PORTB
  1127                           	global	_PORTB
  1128  0000                     	_PORTB	set	0x6
  1129                           
  1130                           	global	_PORTC
  1131                           	global	_PORTC
  1132  0000                     	_PORTC	set	0x7
  1133                           
  1134                           	global	_PORTD
  1135  0000                     	_PORTD	set	0x8
  1136                           
  1137                           	global	_PORTE
  1138                           	global	_PORTE
  1139  0000                     	_PORTE	set	0x9
  1140                           
  1141                           	global	_PR2
  1142                           	global	_PR2
  1143  0000                     	_PR2	set	0x92
  1144                           
  1145                           	global	_RCREG
  1146                           	global	_RCREG
  1147  0000                     	_RCREG	set	0x1A
  1148                           
  1149                           	global	_RCSTA
  1150                           	global	_RCSTA
  1151  0000                     	_RCSTA	set	0x18
  1152                           
  1153                           	global	_SPBRG
  1154                           	global	_SPBRG
  1155  0000                     	_SPBRG	set	0x99
  1156                           
  1157                           	global	_SSPADD
  1158                           	global	_SSPADD
  1159  0000                     	_SSPADD	set	0x93
  1160                           
  1161                           	global	_SSPBUF
  1162                           	global	_SSPBUF
  1163  0000                     	_SSPBUF	set	0x13
  1164                           
  1165                           	global	_SSPCON
  1166                           	global	_SSPCON
  1167  0000                     	_SSPCON	set	0x14
  1168                           
  1169                           	global	_SSPCON2
  1170                           	global	_SSPCON2
  1171  0000                     	_SSPCON2	set	0x91
  1172                           
  1173                           	global	_SSPSTAT
  1174                           	global	_SSPSTAT
  1175  0000                     	_SSPSTAT	set	0x94
  1176                           
  1177                           	global	_STATUS
  1178                           	global	_STATUS
  1179  0000                     	_STATUS	set	0x3
  1180                           
  1181                           	global	_T1CON
  1182                           	global	_T1CON
  1183  0000                     	_T1CON	set	0x10
  1184                           
  1185                           	global	_T2CON
  1186                           	global	_T2CON
  1187  0000                     	_T2CON	set	0x12
  1188                           
  1189                           	global	_TMR0
  1190                           	global	_TMR0
  1191  0000                     	_TMR0	set	0x1
  1192                           
  1193                           	global	_TMR1H
  1194                           	global	_TMR1H
  1195  0000                     	_TMR1H	set	0xF
  1196                           
  1197                           	global	_TMR1L
  1198                           	global	_TMR1L
  1199  0000                     	_TMR1L	set	0xE
  1200                           
  1201                           	global	_TMR2
  1202                           	global	_TMR2
  1203  0000                     	_TMR2	set	0x11
  1204                           
  1205                           	global	_TRISA
  1206                           	global	_TRISA
  1207  0000                     	_TRISA	set	0x85
  1208                           
  1209                           	global	_TRISB
  1210  0000                     	_TRISB	set	0x86
  1211                           
  1212                           	global	_TRISC
  1213  0000                     	_TRISC	set	0x87
  1214                           
  1215                           	global	_TRISD
  1216  0000                     	_TRISD	set	0x88
  1217                           
  1218                           	global	_TRISE
  1219                           	global	_TRISE
  1220  0000                     	_TRISE	set	0x89
  1221                           
  1222                           	global	_TXREG
  1223                           	global	_TXREG
  1224  0000                     	_TXREG	set	0x19
  1225                           
  1226                           	global	_TXSTA
  1227                           	global	_TXSTA
  1228  0000                     	_TXSTA	set	0x98
  1229                           
  1230                           	global	_ACKDT
  1231                           	global	_ACKDT
  1232  0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  1233                           
  1234                           	global	_ACKEN
  1235                           	global	_ACKEN
  1236  0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  1237                           
  1238                           	global	_ACKSTAT
  1239                           	global	_ACKSTAT
  1240  0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  1241                           
  1242                           	global	_ADCS0
  1243                           	global	_ADCS0
  1244  0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  1245                           
  1246                           	global	_ADCS1
  1247                           	global	_ADCS1
  1248  0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  1249                           
  1250                           	global	_ADCS2
  1251                           	global	_ADCS2
  1252  0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  1253                           
  1254                           	global	_ADDEN
  1255                           	global	_ADDEN
  1256  0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  1257                           
  1258                           	global	_ADFM
  1259                           	global	_ADFM
  1260  0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  1261                           
  1262                           	global	_ADGO
  1263                           	global	_ADGO
  1264  0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  1265                           
  1266                           	global	_ADIE
  1267                           	global	_ADIE
  1268  0000                     	_ADIE	set	0x466	;byte address: 0x8C
  1269                           
  1270                           	global	_ADIF
  1271                           	global	_ADIF
  1272  0000                     	_ADIF	set	0x66	;byte address: 0xC
  1273                           
  1274                           	global	_ADON
  1275                           	global	_ADON
  1276  0000                     	_ADON	set	0xF8	;byte address: 0x1F
  1277                           
  1278                           	global	_BCLIE
  1279                           	global	_BCLIE
  1280  0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  1281                           
  1282                           	global	_BCLIF
  1283                           	global	_BCLIF
  1284  0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  1285                           
  1286                           	global	_BF
  1287                           	global	_BF
  1288  0000                     	_BF	set	0x4A0	;byte address: 0x94
  1289                           
  1290                           	global	_BOR
  1291                           	global	_BOR
  1292  0000                     	_BOR	set	0x470	;byte address: 0x8E
  1293                           
  1294                           	global	_BRGH
  1295                           	global	_BRGH
  1296  0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  1297                           
  1298                           	global	_C1INV
  1299                           	global	_C1INV
  1300  0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  1301                           
  1302                           	global	_C1OUT
  1303                           	global	_C1OUT
  1304  0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  1305                           
  1306                           	global	_C2INV
  1307                           	global	_C2INV
  1308  0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  1309                           
  1310                           	global	_C2OUT
  1311                           	global	_C2OUT
  1312  0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  1313                           
  1314                           	global	_CARRY
  1315                           	global	_CARRY
  1316  0000                     	_CARRY	set	0x18	;byte address: 0x3
  1317                           
  1318                           	global	_CCP1IE
  1319                           	global	_CCP1IE
  1320  0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  1321                           
  1322                           	global	_CCP1IF
  1323                           	global	_CCP1IF
  1324  0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  1325                           
  1326                           	global	_CCP1M0
  1327                           	global	_CCP1M0
  1328  0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  1329                           
  1330                           	global	_CCP1M1
  1331                           	global	_CCP1M1
  1332  0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  1333                           
  1334                           	global	_CCP1M2
  1335                           	global	_CCP1M2
  1336  0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  1337                           
  1338                           	global	_CCP1M3
  1339                           	global	_CCP1M3
  1340  0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  1341                           
  1342                           	global	_CCP1X
  1343                           	global	_CCP1X
  1344  0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  1345                           
  1346                           	global	_CCP1Y
  1347                           	global	_CCP1Y
  1348  0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  1349                           
  1350                           	global	_CCP2IE
  1351                           	global	_CCP2IE
  1352  0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  1353                           
  1354                           	global	_CCP2IF
  1355                           	global	_CCP2IF
  1356  0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  1357                           
  1358                           	global	_CCP2M0
  1359                           	global	_CCP2M0
  1360  0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  1361                           
  1362                           	global	_CCP2M1
  1363                           	global	_CCP2M1
  1364  0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  1365                           
  1366                           	global	_CCP2M2
  1367                           	global	_CCP2M2
  1368  0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  1369                           
  1370                           	global	_CCP2M3
  1371                           	global	_CCP2M3
  1372  0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  1373                           
  1374                           	global	_CCP2X
  1375                           	global	_CCP2X
  1376  0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  1377                           
  1378                           	global	_CCP2Y
  1379                           	global	_CCP2Y
  1380  0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  1381                           
  1382                           	global	_CHS0
  1383                           	global	_CHS0
  1384  0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  1385                           
  1386                           	global	_CHS1
  1387                           	global	_CHS1
  1388  0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  1389                           
  1390                           	global	_CHS2
  1391                           	global	_CHS2
  1392  0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  1393                           
  1394                           	global	_CIS
  1395                           	global	_CIS
  1396  0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  1397                           
  1398                           	global	_CKE
  1399                           	global	_CKE
  1400  0000                     	_CKE	set	0x4A6	;byte address: 0x94
  1401                           
  1402                           	global	_CKP
  1403                           	global	_CKP
  1404  0000                     	_CKP	set	0xA4	;byte address: 0x14
  1405                           
  1406                           	global	_CM0
  1407                           	global	_CM0
  1408  0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  1409                           
  1410                           	global	_CM1
  1411                           	global	_CM1
  1412  0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  1413                           
  1414                           	global	_CM2
  1415                           	global	_CM2
  1416  0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  1417                           
  1418                           	global	_CMIE
  1419                           	global	_CMIE
  1420  0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  1421                           
  1422                           	global	_CMIF
  1423                           	global	_CMIF
  1424  0000                     	_CMIF	set	0x6E	;byte address: 0xD
  1425                           
  1426                           	global	_CREN
  1427                           	global	_CREN
  1428  0000                     	_CREN	set	0xC4	;byte address: 0x18
  1429                           
  1430                           	global	_CSRC
  1431                           	global	_CSRC
  1432  0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  1433                           
  1434                           	global	_CVR0
  1435                           	global	_CVR0
  1436  0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  1437                           
  1438                           	global	_CVR1
  1439                           	global	_CVR1
  1440  0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  1441                           
  1442                           	global	_CVR2
  1443                           	global	_CVR2
  1444  0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  1445                           
  1446                           	global	_CVR3
  1447                           	global	_CVR3
  1448  0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  1449                           
  1450                           	global	_CVREN
  1451                           	global	_CVREN
  1452  0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  1453                           
  1454                           	global	_CVROE
  1455                           	global	_CVROE
  1456  0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  1457                           
  1458                           	global	_CVRR
  1459                           	global	_CVRR
  1460  0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  1461                           
  1462                           	global	_DA
  1463                           	global	_DA
  1464  0000                     	_DA	set	0x4A5	;byte address: 0x94
  1465                           
  1466                           	global	_DC
  1467                           	global	_DC
  1468  0000                     	_DC	set	0x19	;byte address: 0x3
  1469                           
  1470                           	global	_EEIE
  1471                           	global	_EEIE
  1472  0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  1473                           
  1474                           	global	_EEIF
  1475                           	global	_EEIF
  1476  0000                     	_EEIF	set	0x6C	;byte address: 0xD
  1477                           
  1478                           	global	_EEPGD
  1479                           	global	_EEPGD
  1480  0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  1481                           
  1482                           	global	_FERR
  1483                           	global	_FERR
  1484  0000                     	_FERR	set	0xC2	;byte address: 0x18
  1485                           
  1486                           	global	_GCEN
  1487                           	global	_GCEN
  1488  0000                     	_GCEN	set	0x48F	;byte address: 0x91
  1489                           
  1490                           	global	_GIE
  1491                           	global	_GIE
  1492  0000                     	_GIE	set	0x5F	;byte address: 0xB
  1493                           
  1494                           	global	_GODONE
  1495                           	global	_GODONE
  1496  0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  1497                           
  1498                           	global	_IBF
  1499                           	global	_IBF
  1500  0000                     	_IBF	set	0x44F	;byte address: 0x89
  1501                           
  1502                           	global	_IBOV
  1503                           	global	_IBOV
  1504  0000                     	_IBOV	set	0x44D	;byte address: 0x89
  1505                           
  1506                           	global	_INTE
  1507                           	global	_INTE
  1508  0000                     	_INTE	set	0x5C	;byte address: 0xB
  1509                           
  1510                           	global	_INTEDG
  1511                           	global	_INTEDG
  1512  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  1513                           
  1514                           	global	_INTF
  1515                           	global	_INTF
  1516  0000                     	_INTF	set	0x59	;byte address: 0xB
  1517                           
  1518                           	global	_IRP
  1519                           	global	_IRP
  1520  0000                     	_IRP	set	0x1F	;byte address: 0x3
  1521                           
  1522                           	global	_Lcd_en
  1523  0000                     	_Lcd_en	set	0x3D	;byte address: 0x7
  1524                           
  1525                           	global	_Lcd_rs
  1526  0000                     	_Lcd_rs	set	0x3C	;byte address: 0x7
  1527                           
  1528                           	global	_OBF
  1529                           	global	_OBF
  1530  0000                     	_OBF	set	0x44E	;byte address: 0x89
  1531                           
  1532                           	global	_OERR
  1533                           	global	_OERR
  1534  0000                     	_OERR	set	0xC1	;byte address: 0x18
  1535                           
  1536                           	global	_PCFG0
  1537                           	global	_PCFG0
  1538  0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  1539                           
  1540                           	global	_PCFG1
  1541                           	global	_PCFG1
  1542  0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  1543                           
  1544                           	global	_PCFG2
  1545                           	global	_PCFG2
  1546  0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  1547                           
  1548                           	global	_PCFG3
  1549                           	global	_PCFG3
  1550  0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  1551                           
  1552                           	global	_PD
  1553                           	global	_PD
  1554  0000                     	_PD	set	0x1B	;byte address: 0x3
  1555                           
  1556                           	global	_PEIE
  1557                           	global	_PEIE
  1558  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  1559                           
  1560                           	global	_PEN
  1561                           	global	_PEN
  1562  0000                     	_PEN	set	0x48A	;byte address: 0x91
  1563                           
  1564                           	global	_POR
  1565                           	global	_POR
  1566  0000                     	_POR	set	0x471	;byte address: 0x8E
  1567                           
  1568                           	global	_PS0
  1569                           	global	_PS0
  1570  0000                     	_PS0	set	0x408	;byte address: 0x81
  1571                           
  1572                           	global	_PS1
  1573                           	global	_PS1
  1574  0000                     	_PS1	set	0x409	;byte address: 0x81
  1575                           
  1576                           	global	_PS2
  1577                           	global	_PS2
  1578  0000                     	_PS2	set	0x40A	;byte address: 0x81
  1579                           
  1580                           	global	_PSA
  1581                           	global	_PSA
  1582  0000                     	_PSA	set	0x40B	;byte address: 0x81
  1583                           
  1584                           	global	_PSPIE
  1585                           	global	_PSPIE
  1586  0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  1587                           
  1588                           	global	_PSPIF
  1589                           	global	_PSPIF
  1590  0000                     	_PSPIF	set	0x67	;byte address: 0xC
  1591                           
  1592                           	global	_PSPMODE
  1593                           	global	_PSPMODE
  1594  0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  1595                           
  1596                           	global	_RA0
  1597                           	global	_RA0
  1598  0000                     	_RA0	set	0x28	;byte address: 0x5
  1599                           
  1600                           	global	_RA1
  1601                           	global	_RA1
  1602  0000                     	_RA1	set	0x29	;byte address: 0x5
  1603                           
  1604                           	global	_RA2
  1605                           	global	_RA2
  1606  0000                     	_RA2	set	0x2A	;byte address: 0x5
  1607                           
  1608                           	global	_RA3
  1609                           	global	_RA3
  1610  0000                     	_RA3	set	0x2B	;byte address: 0x5
  1611                           
  1612                           	global	_RA4
  1613                           	global	_RA4
  1614  0000                     	_RA4	set	0x2C	;byte address: 0x5
  1615                           
  1616                           	global	_RA5
  1617                           	global	_RA5
  1618  0000                     	_RA5	set	0x2D	;byte address: 0x5
  1619                           
  1620                           	global	_RB0
  1621                           	global	_RB0
  1622  0000                     	_RB0	set	0x30	;byte address: 0x6
  1623                           
  1624                           	global	_RB1
  1625  0000                     	_RB1	set	0x31	;byte address: 0x6
  1626                           
  1627                           	global	_RB2
  1628  0000                     	_RB2	set	0x32	;byte address: 0x6
  1629                           
  1630                           	global	_RB3
  1631  0000                     	_RB3	set	0x33	;byte address: 0x6
  1632                           
  1633                           	global	_RB4
  1634  0000                     	_RB4	set	0x34	;byte address: 0x6
  1635                           
  1636                           	global	_RB5
  1637                           	global	_RB5
  1638  0000                     	_RB5	set	0x35	;byte address: 0x6
  1639                           
  1640                           	global	_RB6
  1641                           	global	_RB6
  1642  0000                     	_RB6	set	0x36	;byte address: 0x6
  1643                           
  1644                           	global	_RB7
  1645                           	global	_RB7
  1646  0000                     	_RB7	set	0x37	;byte address: 0x6
  1647                           
  1648                           	global	_RBIE
  1649                           	global	_RBIE
  1650  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  1651                           
  1652                           	global	_RBIF
  1653                           	global	_RBIF
  1654  0000                     	_RBIF	set	0x58	;byte address: 0xB
  1655                           
  1656                           	global	_RBPU
  1657                           	global	_RBPU
  1658  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  1659                           
  1660                           	global	_RC0
  1661  0000                     	_RC0	set	0x38	;byte address: 0x7
  1662                           
  1663                           	global	_RC1
  1664  0000                     	_RC1	set	0x39	;byte address: 0x7
  1665                           
  1666                           	global	_RC2
  1667  0000                     	_RC2	set	0x3A	;byte address: 0x7
  1668                           
  1669                           	global	_RC3
  1670  0000                     	_RC3	set	0x3B	;byte address: 0x7
  1671                           
  1672                           	global	_RC4
  1673                           	global	_RC4
  1674  0000                     	_RC4	set	0x3C	;byte address: 0x7
  1675                           
  1676                           	global	_RC5
  1677                           	global	_RC5
  1678  0000                     	_RC5	set	0x3D	;byte address: 0x7
  1679                           
  1680                           	global	_RC6
  1681                           	global	_RC6
  1682  0000                     	_RC6	set	0x3E	;byte address: 0x7
  1683                           
  1684                           	global	_RC7
  1685                           	global	_RC7
  1686  0000                     	_RC7	set	0x3F	;byte address: 0x7
  1687                           
  1688                           	global	_RCEN
  1689                           	global	_RCEN
  1690  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  1691                           
  1692                           	global	_RCIE
  1693                           	global	_RCIE
  1694  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  1695                           
  1696                           	global	_RCIF
  1697                           	global	_RCIF
  1698  0000                     	_RCIF	set	0x65	;byte address: 0xC
  1699                           
  1700                           	global	_RD
  1701                           	global	_RD
  1702  0000                     	_RD	set	0xC60	;byte address: 0x18C
  1703                           
  1704                           	global	_RD0
  1705                           	global	_RD0
  1706  0000                     	_RD0	set	0x40	;byte address: 0x8
  1707                           
  1708                           	global	_RD1
  1709                           	global	_RD1
  1710  0000                     	_RD1	set	0x41	;byte address: 0x8
  1711                           
  1712                           	global	_RD2
  1713                           	global	_RD2
  1714  0000                     	_RD2	set	0x42	;byte address: 0x8
  1715                           
  1716                           	global	_RD3
  1717                           	global	_RD3
  1718  0000                     	_RD3	set	0x43	;byte address: 0x8
  1719                           
  1720                           	global	_RD4
  1721                           	global	_RD4
  1722  0000                     	_RD4	set	0x44	;byte address: 0x8
  1723                           
  1724                           	global	_RD5
  1725                           	global	_RD5
  1726  0000                     	_RD5	set	0x45	;byte address: 0x8
  1727                           
  1728                           	global	_RD6
  1729                           	global	_RD6
  1730  0000                     	_RD6	set	0x46	;byte address: 0x8
  1731                           
  1732                           	global	_RD7
  1733                           	global	_RD7
  1734  0000                     	_RD7	set	0x47	;byte address: 0x8
  1735                           
  1736                           	global	_RE0
  1737                           	global	_RE0
  1738  0000                     	_RE0	set	0x48	;byte address: 0x9
  1739                           
  1740                           	global	_RE1
  1741                           	global	_RE1
  1742  0000                     	_RE1	set	0x49	;byte address: 0x9
  1743                           
  1744                           	global	_RE2
  1745                           	global	_RE2
  1746  0000                     	_RE2	set	0x4A	;byte address: 0x9
  1747                           
  1748                           	global	_RP0
  1749                           	global	_RP0
  1750  0000                     	_RP0	set	0x1D	;byte address: 0x3
  1751                           
  1752                           	global	_RP1
  1753                           	global	_RP1
  1754  0000                     	_RP1	set	0x1E	;byte address: 0x3
  1755                           
  1756                           	global	_RSEN
  1757                           	global	_RSEN
  1758  0000                     	_RSEN	set	0x489	;byte address: 0x91
  1759                           
  1760                           	global	_RW
  1761                           	global	_RW
  1762  0000                     	_RW	set	0x4A2	;byte address: 0x94
  1763                           
  1764                           	global	_RX9
  1765                           	global	_RX9
  1766  0000                     	_RX9	set	0xC6	;byte address: 0x18
  1767                           
  1768                           	global	_RX9D
  1769                           	global	_RX9D
  1770  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  1771                           
  1772                           	global	_SEN
  1773                           	global	_SEN
  1774  0000                     	_SEN	set	0x488	;byte address: 0x91
  1775                           
  1776                           	global	_SMP
  1777                           	global	_SMP
  1778  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  1779                           
  1780                           	global	_SPEN
  1781                           	global	_SPEN
  1782  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  1783                           
  1784                           	global	_SREN
  1785                           	global	_SREN
  1786  0000                     	_SREN	set	0xC5	;byte address: 0x18
  1787                           
  1788                           	global	_SSPEN
  1789                           	global	_SSPEN
  1790  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  1791                           
  1792                           	global	_SSPIE
  1793                           	global	_SSPIE
  1794  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  1795                           
  1796                           	global	_SSPIF
  1797                           	global	_SSPIF
  1798  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  1799                           
  1800                           	global	_SSPM0
  1801                           	global	_SSPM0
  1802  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  1803                           
  1804                           	global	_SSPM1
  1805                           	global	_SSPM1
  1806  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  1807                           
  1808                           	global	_SSPM2
  1809                           	global	_SSPM2
  1810  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  1811                           
  1812                           	global	_SSPM3
  1813                           	global	_SSPM3
  1814  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  1815                           
  1816                           	global	_SSPOV
  1817                           	global	_SSPOV
  1818  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  1819                           
  1820                           	global	_START
  1821                           	global	_START
  1822  0000                     	_START	set	0x4A3	;byte address: 0x94
  1823                           
  1824                           	global	_STOP
  1825                           	global	_STOP
  1826  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  1827                           
  1828                           	global	_SYNC
  1829                           	global	_SYNC
  1830  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  1831                           
  1832                           	global	_T0CS
  1833                           	global	_T0CS
  1834  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  1835                           
  1836                           	global	_T0IE
  1837                           	global	_T0IE
  1838  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  1839                           
  1840                           	global	_T0IF
  1841                           	global	_T0IF
  1842  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  1843                           
  1844                           	global	_T0SE
  1845                           	global	_T0SE
  1846  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  1847                           
  1848                           	global	_T1CKPS0
  1849                           	global	_T1CKPS0
  1850  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  1851                           
  1852                           	global	_T1CKPS1
  1853                           	global	_T1CKPS1
  1854  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  1855                           
  1856                           	global	_T1OSCEN
  1857                           	global	_T1OSCEN
  1858  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  1859                           
  1860                           	global	_T1SYNC
  1861                           	global	_T1SYNC
  1862  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  1863                           
  1864                           	global	_T2CKPS0
  1865                           	global	_T2CKPS0
  1866  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  1867                           
  1868                           	global	_T2CKPS1
  1869                           	global	_T2CKPS1
  1870  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  1871                           
  1872                           	global	_TMR0IE
  1873                           	global	_TMR0IE
  1874  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  1875                           
  1876                           	global	_TMR0IF
  1877                           	global	_TMR0IF
  1878  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  1879                           
  1880                           	global	_TMR1CS
  1881                           	global	_TMR1CS
  1882  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  1883                           
  1884                           	global	_TMR1IE
  1885                           	global	_TMR1IE
  1886  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  1887                           
  1888                           	global	_TMR1IF
  1889                           	global	_TMR1IF
  1890  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  1891                           
  1892                           	global	_TMR1ON
  1893                           	global	_TMR1ON
  1894  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  1895                           
  1896                           	global	_TMR2IE
  1897                           	global	_TMR2IE
  1898  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  1899                           
  1900                           	global	_TMR2IF
  1901                           	global	_TMR2IF
  1902  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  1903                           
  1904                           	global	_TMR2ON
  1905                           	global	_TMR2ON
  1906  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  1907                           
  1908                           	global	_TO
  1909                           	global	_TO
  1910  0000                     	_TO	set	0x1C	;byte address: 0x3
  1911                           
  1912                           	global	_TOUTPS0
  1913                           	global	_TOUTPS0
  1914  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  1915                           
  1916                           	global	_TOUTPS1
  1917                           	global	_TOUTPS1
  1918  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  1919                           
  1920                           	global	_TOUTPS2
  1921                           	global	_TOUTPS2
  1922  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  1923                           
  1924                           	global	_TOUTPS3
  1925                           	global	_TOUTPS3
  1926  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  1927                           
  1928                           	global	_TRISA0
  1929                           	global	_TRISA0
  1930  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  1931                           
  1932                           	global	_TRISA1
  1933                           	global	_TRISA1
  1934  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  1935                           
  1936                           	global	_TRISA2
  1937                           	global	_TRISA2
  1938  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  1939                           
  1940                           	global	_TRISA3
  1941                           	global	_TRISA3
  1942  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  1943                           
  1944                           	global	_TRISA4
  1945                           	global	_TRISA4
  1946  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  1947                           
  1948                           	global	_TRISA5
  1949                           	global	_TRISA5
  1950  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  1951                           
  1952                           	global	_TRISB0
  1953                           	global	_TRISB0
  1954  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  1955                           
  1956                           	global	_TRISB1
  1957                           	global	_TRISB1
  1958  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  1959                           
  1960                           	global	_TRISB2
  1961                           	global	_TRISB2
  1962  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  1963                           
  1964                           	global	_TRISB3
  1965                           	global	_TRISB3
  1966  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  1967                           
  1968                           	global	_TRISB4
  1969                           	global	_TRISB4
  1970  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  1971                           
  1972                           	global	_TRISB5
  1973                           	global	_TRISB5
  1974  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  1975                           
  1976                           	global	_TRISB6
  1977                           	global	_TRISB6
  1978  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  1979                           
  1980                           	global	_TRISB7
  1981                           	global	_TRISB7
  1982  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  1983                           
  1984                           	global	_TRISC0
  1985                           	global	_TRISC0
  1986  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  1987                           
  1988                           	global	_TRISC1
  1989                           	global	_TRISC1
  1990  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  1991                           
  1992                           	global	_TRISC2
  1993                           	global	_TRISC2
  1994  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  1995                           
  1996                           	global	_TRISC3
  1997                           	global	_TRISC3
  1998  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  1999                           
  2000                           	global	_TRISC4
  2001                           	global	_TRISC4
  2002  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  2003                           
  2004                           	global	_TRISC5
  2005                           	global	_TRISC5
  2006  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  2007                           
  2008                           	global	_TRISC6
  2009                           	global	_TRISC6
  2010  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  2011                           
  2012                           	global	_TRISC7
  2013                           	global	_TRISC7
  2014  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  2015                           
  2016                           	global	_TRISD0
  2017                           	global	_TRISD0
  2018  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  2019                           
  2020                           	global	_TRISD1
  2021                           	global	_TRISD1
  2022  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  2023                           
  2024                           	global	_TRISD2
  2025                           	global	_TRISD2
  2026  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  2027                           
  2028                           	global	_TRISD3
  2029                           	global	_TRISD3
  2030  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  2031                           
  2032                           	global	_TRISD4
  2033                           	global	_TRISD4
  2034  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  2035                           
  2036                           	global	_TRISD5
  2037                           	global	_TRISD5
  2038  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  2039                           
  2040                           	global	_TRISD6
  2041                           	global	_TRISD6
  2042  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  2043                           
  2044                           	global	_TRISD7
  2045                           	global	_TRISD7
  2046  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  2047                           
  2048                           	global	_TRISE0
  2049                           	global	_TRISE0
  2050  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  2051                           
  2052                           	global	_TRISE1
  2053                           	global	_TRISE1
  2054  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  2055                           
  2056                           	global	_TRISE2
  2057                           	global	_TRISE2
  2058  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  2059                           
  2060                           	global	_TRMT
  2061                           	global	_TRMT
  2062  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  2063                           
  2064                           	global	_TX9
  2065                           	global	_TX9
  2066  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  2067                           
  2068                           	global	_TX9D
  2069                           	global	_TX9D
  2070  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  2071                           
  2072                           	global	_TXEN
  2073                           	global	_TXEN
  2074  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  2075                           
  2076                           	global	_TXIE
  2077                           	global	_TXIE
  2078  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  2079                           
  2080                           	global	_TXIF
  2081                           	global	_TXIF
  2082  0000                     	_TXIF	set	0x64	;byte address: 0xC
  2083                           
  2084                           	global	_UA
  2085                           	global	_UA
  2086  0000                     	_UA	set	0x4A1	;byte address: 0x94
  2087                           
  2088                           	global	_WCOL
  2089                           	global	_WCOL
  2090  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  2091                           
  2092                           	global	_WR
  2093                           	global	_WR
  2094  0000                     	_WR	set	0xC61	;byte address: 0x18C
  2095                           
  2096                           	global	_WREN
  2097                           	global	_WREN
  2098  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  2099                           
  2100                           	global	_WRERR
  2101                           	global	_WRERR
  2102  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  2103                           
  2104                           	global	_ZERO
  2105                           	global	_ZERO
  2106  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  2107                           
  2108                           	
  2109  070F                     STR_12:	
  2110  070F  3420               	retlw	32	;' '
  2111  0710  3463               	retlw	99	;'c'
  2112  0711  346F               	retlw	111	;'o'
  2113  0712  346E               	retlw	110	;'n'
  2114  0713  3474               	retlw	116	;'t'
  2115  0714  3472               	retlw	114	;'r'
  2116  0715  346F               	retlw	111	;'o'
  2117  0716  346C               	retlw	108	;'l'
  2118  0717  346C               	retlw	108	;'l'
  2119  0718  3469               	retlw	105	;'i'
  2120  0719  346E               	retlw	110	;'n'
  2121  071A  3467               	retlw	103	;'g'
  2122  071B  3420               	retlw	32	;' '
  2123  071C  3420               	retlw	32	;' '
  2124  071D  3420               	retlw	32	;' '
  2125  071E  3420               	retlw	32	;' '
  2126  071F  3400               	retlw	0
  2127                           	
  2128  0720                     STR_4:	
  2129  0720  3420               	retlw	32	;' '
  2130  0721  3466               	retlw	102	;'f'
  2131  0722  346F               	retlw	111	;'o'
  2132  0723  3472               	retlw	114	;'r'
  2133  0724  3464               	retlw	100	;'d'
  2134  0725  3477               	retlw	119	;'w'
  2135  0726  3461               	retlw	97	;'a'
  2136  0727  3472               	retlw	114	;'r'
  2137  0728  3464               	retlw	100	;'d'
  2138  0729  3469               	retlw	105	;'i'
  2139  072A  346E               	retlw	110	;'n'
  2140  072B  3467               	retlw	103	;'g'
  2141  072C  3420               	retlw	32	;' '
  2142  072D  3420               	retlw	32	;' '
  2143  072E  3420               	retlw	32	;' '
  2144  072F  3420               	retlw	32	;' '
  2145  0730  3400               	retlw	0
  2146                           	
  2147  0731                     STR_6:	
  2148  0731  3420               	retlw	32	;' '
  2149  0732  3452               	retlw	82	;'R'
  2150  0733  3465               	retlw	101	;'e'
  2151  0734  3476               	retlw	118	;'v'
  2152  0735  3465               	retlw	101	;'e'
  2153  0736  3472               	retlw	114	;'r'
  2154  0737  3473               	retlw	115	;'s'
  2155  0738  3469               	retlw	105	;'i'
  2156  0739  346E               	retlw	110	;'n'
  2157  073A  3467               	retlw	103	;'g'
  2158  073B  3420               	retlw	32	;' '
  2159  073C  3420               	retlw	32	;' '
  2160  073D  3420               	retlw	32	;' '
  2161  073E  3420               	retlw	32	;' '
  2162  073F  3420               	retlw	32	;' '
  2163  0740  3420               	retlw	32	;' '
  2164  0741  3400               	retlw	0
  2165                           	
  2166  0742                     STR_8:	
  2167  0742  3420               	retlw	32	;' '
  2168  0743  3472               	retlw	114	;'r'
  2169  0744  3469               	retlw	105	;'i'
  2170  0745  3467               	retlw	103	;'g'
  2171  0746  3468               	retlw	104	;'h'
  2172  0747  3474               	retlw	116	;'t'
  2173  0748  3477               	retlw	119	;'w'
  2174  0749  3461               	retlw	97	;'a'
  2175  074A  3472               	retlw	114	;'r'
  2176  074B  3464               	retlw	100	;'d'
  2177  074C  3420               	retlw	32	;' '
  2178  074D  3420               	retlw	32	;' '
  2179  074E  3420               	retlw	32	;' '
  2180  074F  3420               	retlw	32	;' '
  2181  0750  3420               	retlw	32	;' '
  2182  0751  3420               	retlw	32	;' '
  2183  0752  3400               	retlw	0
  2184                           	
  2185  0753                     STR_10:	
  2186  0753  3420               	retlw	32	;' '
  2187  0754  346C               	retlw	108	;'l'
  2188  0755  3465               	retlw	101	;'e'
  2189  0756  3466               	retlw	102	;'f'
  2190  0757  3474               	retlw	116	;'t'
  2191  0758  3477               	retlw	119	;'w'
  2192  0759  3461               	retlw	97	;'a'
  2193  075A  3472               	retlw	114	;'r'
  2194  075B  3464               	retlw	100	;'d'
  2195  075C  3420               	retlw	32	;' '
  2196  075D  3420               	retlw	32	;' '
  2197  075E  3420               	retlw	32	;' '
  2198  075F  3420               	retlw	32	;' '
  2199  0760  3420               	retlw	32	;' '
  2200  0761  3420               	retlw	32	;' '
  2201  0762  3420               	retlw	32	;' '
  2202  0763  3400               	retlw	0
  2203                           	
  2204  0764                     STR_3:	
  2205  0764  3420               	retlw	32	;' '
  2206  0765  3452               	retlw	82	;'R'
  2207  0766  346F               	retlw	111	;'o'
  2208  0767  3462               	retlw	98	;'b'
  2209  0768  346F               	retlw	111	;'o'
  2210  0769  3474               	retlw	116	;'t'
  2211  076A  3420               	retlw	32	;' '
  2212  076B  3420               	retlw	32	;' '
  2213  076C  3420               	retlw	32	;' '
  2214  076D  3420               	retlw	32	;' '
  2215  076E  3420               	retlw	32	;' '
  2216  076F  3420               	retlw	32	;' '
  2217  0770  3420               	retlw	32	;' '
  2218  0771  3420               	retlw	32	;' '
  2219  0772  3420               	retlw	32	;' '
  2220  0773  3420               	retlw	32	;' '
  2221  0774  3400               	retlw	0
  2222  0000                     STR_2	equ	STR_12+0
  2223  0000                     STR_7	equ	STR_3+0
  2224  0000                     STR_5	equ	STR_3+0
  2225  0000                     STR_11	equ	STR_3+0
  2226  0000                     STR_1	equ	STR_3+0
  2227  0000                     STR_9	equ	STR_3+0
  2228                           	PSECT	fnautoc,class=COMMON,space=1
  2229                           	FNCONF	fnautoc,??,?
  2230                           
  2231                           	DABS	1,126,2	;btemp
  2232                           	global	btemp
  2233  0000                     	btemp set 07Eh
  2234                           apbank macro
  2235                           	; no bank selection necessary for common memor
                                 y
  2236  0070                     	endm


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Wed Dec 27 10:37:45 2023

                   l1 07F5                     l2 07DC  
                   l3 07BF                     l4 079C  
                   l5 077C                     l6 079C  
                   l8 078F             __Lrdata_0 0000  
                   pc 0002             __Lramdata 0000  
                  l12 06FF                    l20 0070  
                  _DA 04A5                    l13 06EF  
                  l21 0113                    _BF 04A0  
                  l22 009D                    _DC 0019  
                  l15 06FF                    l23 0113  
                  l24 00CA                    l25 0113  
                  l17 0113                    l26 00F7  
                  l18 0041                    l27 0113  
                  _PD 001B                    _RD 0C60  
                  _UA 04A1                    _TO 001C  
                  _RW 04A2                    _WR 0C61  
                  fsr 0004         _Lcd8_Write_lr 0077  
    _Lcd8_Command_com 0079                   _CM0 04E0  
                 _CM1 04E1                   _CM2 04E2  
                 _CKE 04A6                   _IBF 044F  
                 _CIS 04E3                   _CKP 00A4  
                 _GIE 005F                   _BOR 0470  
                 _RA0 0028                   _RA1 0029  
                 _RB0 0030                   _RA2 002A  
                 _RB1 0031                   _RA3 002B  
                 _RC0 0038                   _RB2 0032  
                 _RA4 002C                   _RC1 0039  
                 _RB3 0033                   _RA5 002D  
                 _RD0 0040                   _RC2 003A  
                 _RB4 0034                   _RD1 0041  
                 _RC3 003B                   _RB5 0035  
                 _RE0 0048                   _RD2 0042  
                 _RC4 003C                   _RB6 0036  
                 _RE1 0049                   _RD3 0043  
                 _RC5 003D                   _RB7 0037  
                 _RE2 004A                   _RD4 0044  
                 _RC6 003E                   _RD5 0045  
                 _RC7 003F                   _RD6 0046  
                 _OBF 044E                   _RD7 0047  
                 _FSR 0004                   _PCL 0002  
                 _PS0 0408                   _PR2 0092  
                 _PS1 0409                   _RP0 001D  
                 _PS2 040A                   _PEN 048A  
                 _IRP 001F                   _RP1 001E  
                 _SEN 0488                   _PSA 040B  
    _Lcd8_Display_com 0073                   _POR 0471  
                 _RX9 00C6                   _SMP 04A7  
                 _TX9 04C6        _Lcd8_Write_com 0078  
                 indf 0000               ??_Delay 007C  
                _ADIE 0466                  _ADIF 0066  
                _ADFM 04FF                  _ADGO 00FA  
            __tempreg 0070                  _ADON 00F8  
                _CHS0 00FB                  _CHS1 00FC  
                _CHS2 00FD                  _EEIE 046C  
                _EEIF 006C                  STR_1 0764  
                STR_2 070F                  STR_3 0764  
                STR_4 0720                  STR_5 0764  
                _GCEN 048F                  STR_6 0731  
                STR_7 0764                  STR_8 0742  
                STR_9 0764                  _CMIE 046E  
                _CMIF 006E                  _BRGH 04C2  
                _T0IE 005D                  _T0IF 005A  
                _CREN 00C4                  _T0CS 040D  
                _FERR 00C2                  _IBOV 044D  
                _CVR0 04E8                  _CVR1 04E9  
                _CVR2 04EA                  _CVR3 04EB  
                u1400 0074                  u1401 0073  
                u1410 0078                  _T0SE 040C  
                _CSRC 04C7                  u1411 0077  
                u1500 00D6                  u1420 007C  
                u1501 00D5                  u1421 007B  
                _INDF 0000                  u1510 00DA  
                u1430 0080                  u1511 00D9  
                u1431 007F                  u1520 079C  
                u1440 00A1                  u1360 0047  
                u1521 079B                  u1441 00A0  
                u1361 0046                  u1530 06FF  
                u1450 00A5                  u1370 004B  
                u1531 06FE                  u1451 00A4  
                u1371 004A                  u1460 00A9  
                u1380 004F                  u1525 0798  
                u1461 00A8                  u1381 004E  
                u1470 00AD                  u1390 0053  
                u1535 06FB                  u1471 00AC  
                u1391 0052                  u1480 00CE  
                u1481 00CD                  u1490 00D2  
                u1491 00D1                  _PIE1 008C  
                _PIE2 008D                  _CVRR 04ED  
                _PEIE 005E                  _INTE 005C  
                _INTF 0059                  _RBIE 005B  
                _RBIF 0058                  _RCIE 0465  
                _RCIF 0065                  _RCEN 048B  
                _PCON 008E                  _PIR1 000C  
                _PIR2 000D                  _OERR 00C1  
                _RBPU 040F                  _RX9D 00C0  
                _TMR0 0001                  _TMR2 0011  
                _WCOL 00A7                  _SPEN 00C7  
                _RSEN 0489             __databank 0000  
                _TX9D 04C0                  _SREN 00C5  
                _TRMT 04C1                  _STOP 04A4  
                _ZERO 001A                  _TXIE 0464  
                _WREN 0C62                  _TXIF 0064  
                _TXEN 04C5                  _SYNC 04C4  
   _Lcd8_Display_word 0070         ?_Lcd8_Command 0079  
       ?_Lcd8_Display 0070                  _main 0003  
                btemp 007E                  start 0000  
           stringcode 0708         __end_of_Delay 0700  
             _CCP1CON 0017               _CCP2CON 001D  
             _ACKSTAT 048E                 _C1INV 04E4  
  _Lcd8_Display_Lcd_i 0074                 _C2INV 04E5  
               _C1OUT 04E6                 _C2OUT 04E7  
               _ADCS0 00FE                 _ADCS1 00FF  
               _ADCS2 04FE                 _ADDEN 00C3  
               ?_main 0070                 _ACKEN 048C  
               _ACKDT 048D                 _BCLIE 046B  
               _BCLIF 006B                 _CCP1X 00BD  
               _CCP1Y 00BC                 _CCP2X 00ED  
               _CCP2Y 00EC                 _EEADR 010D  
               STR_10 0753                 STR_11 0764  
               STR_12 070F                 _CARRY 0018  
               _EEPGD 0C67                 _CMCON 009C  
               _T1CON 0010                 _T2CON 0012  
             _T1CKPS0 0084               _T1CKPS1 0085  
               _PCFG0 04F8                 _PCFG1 04F9  
               _PCFG2 04FA                 _PCFG3 04FB  
             _T2CKPS0 0090               _T2CKPS1 0091  
               _CVREN 04EF                 _CVROE 04EE  
               _RCREG 001A                 _RCSTA 0018  
               _TMR1H 000F                 _TMR1L 000E  
               _SPBRG 0099                 _PORTA 0005  
               _PORTB 0006               _T1OSCEN 0083  
               _PORTC 0007                 _PORTD 0008  
               _PORTE 0009                 _PSPIE 0467  
               _PSPIF 0067                 _START 04A3  
               _SSPM0 00A0                 _SSPM1 00A1  
               _SSPM2 00A2                 _SSPM3 00A3  
               _TRISA 0085                 _TRISB 0086  
               _TRISC 0087                 _TRISD 0088  
               _SSPIE 0463                 _TRISE 0089  
               _SSPIF 0063                 _SSPEN 00A5  
               _SSPOV 00A6                 _WRERR 0C63  
               _TXREG 0019                 _TXSTA 0098  
               _Delay 06EE               _PSPMODE 044C  
             _SSPCON2 0091               _SSPSTAT 0094  
             _TOUTPS0 0093               _TOUTPS1 0094  
             _TOUTPS2 0095               _TOUTPS3 0096  
               pclath 000A                 status 0003  
          _Lcd8_Write 079D    __end_of_Lcd8_Write 07C0  
         __stringbase 070E           ?_Lcd8_Write 0077  
              ??_main 0070                ?_Delay 007A  
            stringdir 0709              stringjmp 070D  
            stringtab 0700                _ADCON0 001F  
              _ADCON1 009F                _CCP1M0 00B8  
              _CCP1M1 00B9                _CCP1M2 00BA  
              _CCP1M3 00BB                _CCP2M0 00E8  
              _CCP2M1 00E9                _CCP2M2 00EA  
              _CCP2M3 00EB                _CCP1IE 0462  
              _CCP1IF 0062                _CCP2IE 0468  
              _CCP2IF 0068                _ADRESH 001E  
              _EEADRH 010F                _ADRESL 009E  
              _EEADRL 010D                _EEDATA 010C  
              _CCPR1H 0016                _EEDATH 010E  
              _CCPR2H 001C                _CCPR1L 0015  
              _CCPR2L 001B                _EECON1 018C  
              _EECON2 018D          __end_of_main 0117  
              _GODONE 00FA                _CVRCON 009D  
              _T1SYNC 0082                _INTEDG 040E  
              _PCLATH 000A                _INTCON 000B  
        ??_Lcd8_Write 0078                _TMR0IE 005D  
              _TMR0IF 005A                _TMR1IE 0460  
              _TMR1IF 0060                _TMR1CS 0081  
              _TMR2IE 0461                _TMR2IF 0061  
              _TMR1ON 0080                _OPTION 0081  
              _TMR2ON 0092        ??_Lcd8_Command 0079  
              _SSPADD 0093                _TRISA0 0428  
              _TRISA1 0429                _TRISB0 0430  
              _TRISA2 042A                _TRISB1 0431  
              _TRISA3 042B                _TRISC0 0438  
              _TRISB2 0432                _TRISA4 042C  
              _TRISC1 0439                _TRISB3 0433  
              _TRISA5 042D                _TRISD0 0440  
              _TRISC2 043A                _TRISB4 0434  
              _TRISD1 0441                _TRISC3 043B  
              _TRISB5 0435        ??_Lcd8_Display 0073  
              _TRISE0 0448                _TRISD2 0442  
              _TRISC4 043C                _TRISB6 0436  
              _TRISE1 0449                _TRISD3 0443  
              _TRISC5 043D                _TRISB7 0437  
              _TRISE2 044A                _TRISD4 0444  
              _TRISC6 043E                _TRISD5 0445  
              _TRISC7 043F                _TRISD6 0446  
              _TRISD7 0447                _STATUS 0003  
              _SSPCON 0014                _SSPBUF 0013  
              _Lcd_en 003D                _Lcd_rs 003C  
           _Lcd8_Init 07DD     __end_of_Lcd8_Init 07F6  
      _Lcd8_Display_n 0071            ?_Lcd8_Init 0070  
           _Delay_del 007A           ??_Lcd8_Init 0070  
        _Lcd8_Command 07C0          _Lcd8_Display 0775  
__end_of_Lcd8_Command 07DD  __end_of_Lcd8_Display 079D  
           __Hrdata_0 0001             __Hramdata 0001  
