

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sat Feb 24 16:29:12 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_Serial_Init
    43                           	FNCALL	_Serial_Init,_Baudrate
    44                           	FNROOT	_main
    45                           	global	main@F1127
    46                           	global	_b
    47                           psect	idataBANK0,class=CODE,space=0,delta=2
    48                           global __pidataBANK0
    49  06AE                     __pidataBANK0:
    50                           	file	"D:\pic controller,PIC16F877A\serial data\main.c"
    51                           	line	15
    52                           
    53                           ;initializer for main@F1127
    54  06AE  3457               	retlw	057h
    55  06AF  346F               	retlw	06Fh
    56  06B0  3472               	retlw	072h
    57  06B1  346B               	retlw	06Bh
    58  06B2  3469               	retlw	069h
    59  06B3  346E               	retlw	06Eh
    60  06B4  3467               	retlw	067h
    61  06B5  3420               	retlw	020h
    62  06B6  342E               	retlw	02Eh
    63  06B7  342E               	retlw	02Eh
    64  06B8  342E               	retlw	02Eh
    65  06B9  3400               	retlw	0
    66                           psect	idataCOMMON,class=CODE,space=0,delta=2
    67                           global __pidataCOMMON
    68  06AD                     __pidataCOMMON:
    69                           	line	5
    70                           
    71                           ;initializer for _b
    72  06AD  3401               	retlw	01h
    73                           	global	_a
    74                           	global	_PORTC
    75  0007                     _PORTC	set	7
    76                           	global	_TXREG
    77  0019                     _TXREG	set	25
    78                           	global	_CARRY
    79  0018                     _CARRY	set	24
    80                           	global	_CREN
    81  00C4                     _CREN	set	196
    82                           	global	_GIE
    83  005F                     _GIE	set	95
    84                           	global	_PEIE
    85  005E                     _PEIE	set	94
    86                           	global	_SPEN
    87  00C7                     _SPEN	set	199
    88                           	global	_TXIF
    89  0064                     _TXIF	set	100
    90                           	global	_SPBRG
    91  0099                     _SPBRG	set	153
    92                           	global	_TRISC
    93  0087                     _TRISC	set	135
    94                           	global	_BRGH
    95  04C2                     _BRGH	set	1218
    96                           	global	_RCIE
    97  0465                     _RCIE	set	1125
    98                           	global	_SYNC
    99  04C4                     _SYNC	set	1220
   100                           	global	_TXEN
   101  04C5                     _TXEN	set	1221
   102                           	global	_EEADR
   103  010D                     _EEADR	set	269
   104                           	global	_EEDATA
   105  010C                     _EEDATA	set	268
   106                           	global	_EECON1
   107  018C                     _EECON1	set	396
   108                           	global	_EECON2
   109  018D                     _EECON2	set	397
   110                           	global	_RD
   111  0C60                     _RD	set	3168
   112                           	global	_WR
   113  0C61                     _WR	set	3169
   114                           	global	_WREN
   115  0C62                     _WREN	set	3170
   116                           	file	"function.as"
   117                           	line	#
   118                           psect cinit,class=CODE,delta=2
   119                           global start_initialization
   120  06CD                     start_initialization:
   121                           
   122                           psect	dataCOMMON,class=COMMON,space=1
   123                           global __pdataCOMMON
   124  007C                     __pdataCOMMON:
   125                           	file	"D:\pic controller,PIC16F877A\serial data\main.c"
   126  007C                     _b:
   127  007C                            ds      1
   128                           
   129                           psect	bssBANK0,class=BANK0,space=1
   130                           global __pbssBANK0
   131  0038                     __pbssBANK0:
   132  0038                     _a:
   133  0038                            ds      1
   134                           
   135                           psect	dataBANK0,class=BANK0,space=1
   136                           global __pdataBANK0
   137  0020                     __pdataBANK0:
   138                           	file	"D:\pic controller,PIC16F877A\serial data\main.c"
   139                           	line	15
   140  0020                     main@F1127:
   141  0020                            ds      12
   142                           
   143                           ; Clear objects allocated to BANK0
   144                           psect cinit,class=CODE,delta=2
   145  06CD  01B8               	clrf	((__pbssBANK0)+0)&07Fh
   146                           global btemp
   147                           psect inittext,class=CODE,delta=2
   148                           global init_fetch,btemp
   149                           ;	Called with low address in FSR and high address in W
   150  06BA                     init_fetch:
   151  06BA  087E               	movf btemp,w
   152  06BB  008A               	movwf pclath
   153  06BC  087F               	movf btemp+1,w
   154  06BD  0082               	movwf pc
   155                           global init_ram
   156                           ;Called with:
   157                           ;	high address of idata address in btemp 
   158                           ;	low address of idata address in btemp+1 
   159                           ;	low address of data in FSR
   160                           ;	high address + 1 of data in btemp-1
   161  06BE                     init_ram:
   162  06BE  120A  118A  26BA   	fcall init_fetch
              120A  118A         
   163  06C3  0080               	movwf indf,f
   164  06C4  0A84               	incf fsr,f
   165  06C5  0804               	movf fsr,w
   166  06C6  067D               	xorwf btemp-1,w
   167  06C7  1903               	btfsc status,2
   168  06C8  3400               	retlw 0
   169  06C9  0AFF               	incf btemp+1,f
   170  06CA  1903               	btfsc status,2
   171  06CB  0AFE               	incf btemp,f
   172  06CC  2EBE               	goto init_ram
   173                           ; Initialize objects allocated to BANK0
   174                           psect cinit,class=CODE,delta=2
   175                           global init_ram, __pidataBANK0
   176  06CE  1383               	bcf	status, 7	;select IRP bank0
   177  06CF  302C               	movlw low(__pdataBANK0+12)
   178  06D0  00FD               	movwf btemp-1,f
   179  06D1  3006               	movlw high(__pidataBANK0)
   180  06D2  00FE               	movwf btemp,f
   181  06D3  30AE               	movlw low(__pidataBANK0)
   182  06D4  00FF               	movwf btemp+1,f
   183  06D5  3020               	movlw low(__pdataBANK0)
   184  06D6  0084               	movwf fsr,f
   185  06D7  120A  118A  26BE   	fcall init_ram
              120A  118A         
   186                           ; Initialize objects allocated to COMMON
   187                           	global __pidataCOMMON
   188                           psect cinit,class=CODE,delta=2
   189  06DC  120A  118A  26AD   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
   190  06E1  00FC               	movwf	__pdataCOMMON+0&07fh		
   191                           psect cinit,class=CODE,delta=2
   192                           global end_of_initialization
   193                           
   194                           ;End of C runtime variable initialization code
   195                           
   196  06E2                     end_of_initialization:
   197  06E2  0183               clrf status
   198  06E3  120A  118A  2F03   ljmp _main	;jump to C main() function
   199                           psect	cstackCOMMON,class=COMMON,space=1
   200                           global __pcstackCOMMON
   201  0070                     __pcstackCOMMON:
   202                           	global	?_Baudrate
   203  0070                     ?_Baudrate:	; 0 bytes @ 0x0
   204                           	global	?_main
   205  0070                     ?_main:	; 0 bytes @ 0x0
   206                           	global	Baudrate@baud
   207  0070                     Baudrate@baud:	; 4 bytes @ 0x0
   208  0070                     	ds	4
   209                           	global	??_Baudrate
   210  0074                     ??_Baudrate:	; 0 bytes @ 0x4
   211                           	global	?_Serial_Init
   212  0074                     ?_Serial_Init:	; 0 bytes @ 0x4
   213                           	global	Serial_Init@baud
   214  0074                     Serial_Init@baud:	; 4 bytes @ 0x4
   215  0074                     	ds	4
   216                           	global	??_Serial_Init
   217  0078                     ??_Serial_Init:	; 0 bytes @ 0x8
   218                           	global	??_main
   219  0078                     ??_main:	; 0 bytes @ 0x8
   220  0078                     	ds	4
   221                           psect	cstackBANK0,class=BANK0,space=1
   222                           global __pcstackBANK0
   223  002C                     __pcstackBANK0:
   224                           	global	main@dat
   225  002C                     main@dat:	; 12 bytes @ 0x0
   226  002C                     	ds	12
   227 ;;Data sizes: Strings 0, constant 0, data 13, bss 1, persistent 0 stack 0
   228 ;;Auto spaces:   Size  Autos    Used
   229 ;; COMMON          14     12      13
   230 ;; BANK0           80     12      25
   231 ;; BANK1           80      0       0
   232 ;; BANK3           96      0       0
   233 ;; BANK2           96      0       0
   234                           
   235 ;;
   236 ;; Pointer list with targets:
   237                           
   238                           
   239                           
   240 ;;
   241 ;; Critical Paths under _main in COMMON
   242 ;;
   243 ;;   _main->_Serial_Init
   244 ;;   _Serial_Init->_Baudrate
   245 ;;
   246 ;; Critical Paths under _main in BANK0
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _main in BANK1
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _main in BANK3
   255 ;;
   256 ;;   None.
   257 ;;
   258 ;; Critical Paths under _main in BANK2
   259 ;;
   260 ;;   None.
   261                           
   262 ;;
   263 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   264 ;;
   265                           
   266 ;;
   267 ;;Call Graph Tables:
   268 ;;
   269 ;; ---------------------------------------------------------------------------------
   270 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   271 ;; ---------------------------------------------------------------------------------
   272 ;; (0) _main                                                16    16      0     223
   273 ;;                                              8 COMMON     4     4      0
   274 ;;                                              0 BANK0     12    12      0
   275 ;;                        _Serial_Init
   276 ;; ---------------------------------------------------------------------------------
   277 ;; (1) _Serial_Init                                          4     0      4     176
   278 ;;                                              4 COMMON     4     0      4
   279 ;;                           _Baudrate
   280 ;; ---------------------------------------------------------------------------------
   281 ;; (2) _Baudrate                                             4     0      4     154
   282 ;;                                              0 COMMON     4     0      4
   283 ;; ---------------------------------------------------------------------------------
   284 ;; Estimated maximum stack depth 2
   285 ;; ---------------------------------------------------------------------------------
   286                           
   287 ;; Call Graph Graphs:
   288                           
   289 ;; _main (ROOT)
   290 ;;   _Serial_Init
   291 ;;     _Baudrate
   292 ;;
   293                           
   294 ;; Address spaces:
   295                           
   296 ;;Name               Size   Autos  Total    Cost      Usage
   297 ;;BANK3               60      0       0       9        0.0%
   298 ;;BITBANK3            60      0       0       8        0.0%
   299 ;;SFR3                 0      0       0       4        0.0%
   300 ;;BITSFR3              0      0       0       4        0.0%
   301 ;;BANK2               60      0       0      11        0.0%
   302 ;;BITBANK2            60      0       0      10        0.0%
   303 ;;SFR2                 0      0       0       5        0.0%
   304 ;;BITSFR2              0      0       0       5        0.0%
   305 ;;SFR1                 0      0       0       2        0.0%
   306 ;;BITSFR1              0      0       0       2        0.0%
   307 ;;BANK1               50      0       0       7        0.0%
   308 ;;BITBANK1            50      0       0       6        0.0%
   309 ;;CODE                 0      0       0       0        0.0%
   310 ;;DATA                 0      0      28      12        0.0%
   311 ;;ABS                  0      0      26       3        0.0%
   312 ;;NULL                 0      0       0       0        0.0%
   313 ;;STACK                0      0       2       2        0.0%
   314 ;;BANK0               50      C      19       5       31.3%
   315 ;;BITBANK0            50      0       0       4        0.0%
   316 ;;SFR0                 0      0       0       1        0.0%
   317 ;;BITSFR0              0      0       0       1        0.0%
   318 ;;COMMON               E      C       D       1       92.9%
   319 ;;BITCOMMON            E      0       0       0        0.0%
   320 ;;EEDATA             100      0       0       0        0.0%
   321                           
   322                           	global	_main
   323                           psect	maintext,global,class=CODE,delta=2
   324                           global __pmaintext
   325  0703                     __pmaintext:
   326                           
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 8 in file "D:\pic controller,PIC16F877A\serial data\main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  dat            12    0[BANK0 ] unsigned char [12]
   334 ;; Return value:  Size  Location     Type
   335 ;;		None               void
   336 ;; Registers used:
   337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 17F/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0      12       0       0       0
   345 ;;      Temps:          4       0       0       0       0
   346 ;;      Totals:         4      12       0       0       0
   347 ;;Total ram usage:       16 bytes
   348 ;; Hardware stack levels required when called:    2
   349 ;; This function calls:
   350 ;;		_Serial_Init
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           psect	maintext
   356                           	file	"D:\pic controller,PIC16F877A\serial data\main.c"
   357                           	line	8
   358                           	global	__size_of_main
   359  004E                     	__size_of_main	equ	__end_of_main-_main
   360                           	
   361  0703                     _main:	
   362                           	opt	stack 6
   363                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   364                           	line	9
   365                           	
   366  0703                     l2914:	
   367                           ;main.c: 9: TRISC =0xbf;
   368  0703  30BF               	movlw	(0BFh)
   369  0704  1683               	bsf	status, 5	;RP0=1, select bank1
   370  0705  1303               	bcf	status, 6	;RP1=0, select bank1
   371  0706  0087               	movwf	(135)^080h	;volatile
   372                           	line	10
   373                           ;main.c: 10: PORTC=0xbf;
   374  0707  30BF               	movlw	(0BFh)
   375  0708  1283               	bcf	status, 5	;RP0=0, select bank0
   376  0709  1303               	bcf	status, 6	;RP1=0, select bank0
   377  070A  0087               	movwf	(7)	;volatile
   378                           	line	11
   379                           	
   380  070B                     l2916:	
   381                           ;main.c: 11: Serial_Init(9600);
   382  070B  3000               	movlw	0
   383  070C  00F7               	movwf	(?_Serial_Init+3)
   384  070D  3000               	movlw	0
   385  070E  00F6               	movwf	(?_Serial_Init+2)
   386  070F  3025               	movlw	025h
   387  0710  00F5               	movwf	(?_Serial_Init+1)
   388  0711  3080               	movlw	080h
   389  0712  00F4               	movwf	(?_Serial_Init)
   390                           
   391  0713  120A  118A  26E6   	fcall	_Serial_Init
              120A  118A         
   392  0718  2F19               	goto	l2918
   393                           	line	13
   394                           ;main.c: 13: while(1)
   395                           	
   396  0719                     l733:	
   397                           	line	15
   398                           	
   399  0719                     l2918:	
   400                           ;main.c: 14: {
   401                           ;main.c: 15: unsigned char dat[]="Working ...";
   402  0719  302C               	movlw	(main@dat)&0ffh
   403  071A  0084               	movwf	fsr0
   404  071B  3020               	movlw	low(main@F1127)
   405  071C  00F8               	movwf	(??_main+0)+0
   406  071D  0804               	movf	fsr0,w
   407  071E  00F9               	movwf	((??_main+0)+0+1)
   408  071F  300C               	movlw	12
   409  0720  00FA               	movwf	((??_main+0)+0+2)
   410  0721                     u2420:
   411  0721  0878               	movf	(??_main+0)+0,w
   412  0722  0084               	movwf	fsr0
   413  0723  1383               	bcf	status, 7	;select IRP bank0
   414                           	
   415  0724  0800               	movf	indf,w
   416  0725  00FB               	movwf	((??_main+0)+0+3)
   417  0726  0AF8               	incf	(??_main+0)+0,f
   418  0727  0879               	movf	((??_main+0)+0+1),w
   419  0728  0084               	movwf	fsr0
   420                           	
   421  0729  087B               	movf	((??_main+0)+0+3),w
   422  072A  0080               	movwf	indf
   423  072B  0AF9               	incf	((??_main+0)+0+1),f
   424  072C  0BFA               	decfsz	((??_main+0)+0+2),f
   425  072D  2F21               	goto	u2420
   426                           	line	16
   427                           ;main.c: 16: while(TXIF==0);TXIF=0;
   428  072E  2F2F               	goto	l736
   429                           	
   430  072F                     l737:	
   431                           	
   432  072F                     l736:	
   433  072F  1283               	bcf	status, 5	;RP0=0, select bank0
   434  0730  1303               	bcf	status, 6	;RP1=0, select bank0
   435  0731  1E0C               	btfss	(100/8),(100)&7
   436  0732  2F34               	goto	u2431
   437  0733  2F35               	goto	u2430
   438  0734                     u2431:
   439  0734  2F2F               	goto	l736
   440  0735                     u2430:
   441                           	
   442  0735                     l738:	
   443  0735  120C               	bcf	(100/8),(100)&7
   444                           	line	17
   445                           	
   446  0736                     l2920:	
   447                           ;main.c: 17: TXREG=dat[a];
   448  0736  0838               	movf	(_a),w
   449  0737  3E2C               	addlw	main@dat&0ffh
   450  0738  0084               	movwf	fsr0
   451  0739  1383               	bcf	status, 7	;select IRP bank0
   452  073A  0800               	movf	indf,w
   453  073B  0099               	movwf	(25)	;volatile
   454                           	line	18
   455                           ;main.c: 18: if(dat[a]!='\0')
   456  073C  0838               	movf	(_a),w
   457  073D  3E2C               	addlw	main@dat&0ffh
   458  073E  0084               	movwf	fsr0
   459  073F  0880               	movf	indf
   460  0740  1903               	skipnz
   461  0741  2F43               	goto	u2441
   462  0742  2F44               	goto	u2440
   463  0743                     u2441:
   464  0743  2F4A               	goto	l739
   465  0744                     u2440:
   466                           	line	19
   467                           	
   468  0744                     l2922:	
   469                           ;main.c: 19: { a++;
   470  0744  3001               	movlw	(01h)
   471  0745  00F8               	movwf	(??_main+0)+0
   472  0746  0878               	movf	(??_main+0)+0,w
   473  0747  07B8               	addwf	(_a),f
   474                           	line	20
   475                           ;main.c: 20: break;
   476  0748  2F4E               	goto	l743
   477                           	line	21
   478                           	
   479  0749                     l2924:	
   480                           ;main.c: 21: }
   481  0749  2F19               	goto	l2918
   482                           	line	22
   483                           	
   484  074A                     l739:	
   485                           	line	23
   486                           ;main.c: 22: else
   487                           ;main.c: 23: {a=0;
   488  074A  01B8               	clrf	(_a)
   489  074B  2F19               	goto	l2918
   490                           	line	24
   491                           	
   492  074C                     l741:	
   493  074C  2F19               	goto	l2918
   494                           	line	25
   495                           	
   496  074D                     l742:	
   497                           	line	13
   498  074D  2F19               	goto	l2918
   499                           	
   500  074E                     l740:	
   501                           	line	26
   502                           	
   503  074E                     l743:	
   504                           	global	start
   505  074E  120A  118A  2800   	ljmp	start
   506                           	opt stack 0
   507                           GLOBAL	__end_of_main
   508  0751                     	__end_of_main:
   509 ;; =============== function _main ends ============
   510                           
   511                           	signat	_main,88
   512                           	global	_Serial_Init
   513                           psect	text132,local,class=CODE,delta=2
   514                           global __ptext132
   515  06E6                     __ptext132:
   516                           
   517 ;; *************** function _Serial_Init *****************
   518 ;; Defined at:
   519 ;;		line 12 in file "D:\pic controller,PIC16F877A\serial data\pic_serial.h"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  baud            4    4[COMMON] unsigned long 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;		None               void
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, pclath, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   533 ;;      Params:         4       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0
   536 ;;      Totals:         4       0       0       0       0
   537 ;;Total ram usage:        4 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    1
   540 ;; This function calls:
   541 ;;		_Baudrate
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           psect	text132
   547                           	file	"D:\pic controller,PIC16F877A\serial data\pic_serial.h"
   548                           	line	12
   549                           	global	__size_of_Serial_Init
   550  001D                     	__size_of_Serial_Init	equ	__end_of_Serial_Init-_Serial_Init
   551                           	
   552  06E6                     _Serial_Init:	
   553                           	opt	stack 6
   554                           ; Regs used in _Serial_Init: [wreg+status,2+status,0+pclath+cstack]
   555                           	line	13
   556                           	
   557  06E6                     l2898:	
   558                           ;pic_serial.h: 13: Baudrate(baud);
   559  06E6  0877               	movf	(Serial_Init@baud+3),w
   560  06E7  00F3               	movwf	(?_Baudrate+3)
   561  06E8  0876               	movf	(Serial_Init@baud+2),w
   562  06E9  00F2               	movwf	(?_Baudrate+2)
   563  06EA  0875               	movf	(Serial_Init@baud+1),w
   564  06EB  00F1               	movwf	(?_Baudrate+1)
   565  06EC  0874               	movf	(Serial_Init@baud),w
   566  06ED  00F0               	movwf	(?_Baudrate)
   567                           
   568  06EE  120A  118A  2751   	fcall	_Baudrate
              120A  118A         
   569                           	line	14
   570                           	
   571  06F3                     l2900:	
   572                           ;pic_serial.h: 14: SYNC = 0;
   573  06F3  1683               	bsf	status, 5	;RP0=1, select bank1
   574  06F4  1303               	bcf	status, 6	;RP1=0, select bank1
   575  06F5  1218               	bcf	(1220/8)^080h,(1220)&7
   576                           	line	15
   577                           	
   578  06F6                     l2902:	
   579                           ;pic_serial.h: 15: SPEN = 1;
   580  06F6  1283               	bcf	status, 5	;RP0=0, select bank0
   581  06F7  1303               	bcf	status, 6	;RP1=0, select bank0
   582  06F8  1798               	bsf	(199/8),(199)&7
   583                           	line	16
   584                           	
   585  06F9                     l2904:	
   586                           ;pic_serial.h: 16: TXEN = 1;
   587  06F9  1683               	bsf	status, 5	;RP0=1, select bank1
   588  06FA  1303               	bcf	status, 6	;RP1=0, select bank1
   589  06FB  1698               	bsf	(1221/8)^080h,(1221)&7
   590                           	line	17
   591                           	
   592  06FC                     l2906:	
   593                           ;pic_serial.h: 17: GIE=1;
   594  06FC  178B               	bsf	(95/8),(95)&7
   595                           	line	18
   596                           	
   597  06FD                     l2908:	
   598                           ;pic_serial.h: 18: PEIE=1;
   599  06FD  170B               	bsf	(94/8),(94)&7
   600                           	line	19
   601                           	
   602  06FE                     l2910:	
   603                           ;pic_serial.h: 19: RCIE = 0;
   604  06FE  128C               	bcf	(1125/8)^080h,(1125)&7
   605                           	line	20
   606                           	
   607  06FF                     l2912:	
   608                           ;pic_serial.h: 20: CREN = 0;
   609  06FF  1283               	bcf	status, 5	;RP0=0, select bank0
   610  0700  1303               	bcf	status, 6	;RP1=0, select bank0
   611  0701  1218               	bcf	(196/8),(196)&7
   612                           	line	21
   613                           	
   614  0702                     l691:	
   615  0702  0008               	return
   616                           	opt stack 0
   617                           GLOBAL	__end_of_Serial_Init
   618  0703                     	__end_of_Serial_Init:
   619 ;; =============== function _Serial_Init ends ============
   620                           
   621                           	signat	_Serial_Init,4216
   622                           	global	_Baudrate
   623                           psect	text133,local,class=CODE,delta=2
   624                           global __ptext133
   625  0751                     __ptext133:
   626                           
   627 ;; *************** function _Baudrate *****************
   628 ;; Defined at:
   629 ;;		line 41 in file "D:\pic controller,PIC16F877A\serial data\pic_serial.h"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  baud            4    0[COMMON] unsigned long 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         4       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         4       0       0       0       0
   647 ;;Total ram usage:        4 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_Serial_Init
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           psect	text133
   656                           	file	"D:\pic controller,PIC16F877A\serial data\pic_serial.h"
   657                           	line	41
   658                           	global	__size_of_Baudrate
   659  00AF                     	__size_of_Baudrate	equ	__end_of_Baudrate-_Baudrate
   660                           	
   661  0751                     _Baudrate:	
   662                           	opt	stack 6
   663                           ; Regs used in _Baudrate: [wreg]
   664                           	line	42
   665                           	
   666  0751                     l2856:	
   667                           ;pic_serial.h: 42: if(baud==110)
   668  0751  3000               	movlw	0
   669  0752  0673               	xorwf	(Baudrate@baud+3),w
   670  0753  1D03               	skipz
   671  0754  2F5F               	goto	u2355
   672  0755  3000               	movlw	0
   673  0756  0672               	xorwf	(Baudrate@baud+2),w
   674  0757  1D03               	skipz
   675  0758  2F5F               	goto	u2355
   676  0759  3000               	movlw	0
   677  075A  0671               	xorwf	(Baudrate@baud+1),w
   678  075B  1D03               	skipz
   679  075C  2F5F               	goto	u2355
   680  075D  306E               	movlw	06Eh
   681  075E  0670               	xorwf	(Baudrate@baud),w
   682  075F                     u2355:
   683  075F  1D03               	skipz
   684  0760  2F62               	goto	u2351
   685  0761  2F63               	goto	u2350
   686  0762                     u2351:
   687  0762  2F69               	goto	l2862
   688  0763                     u2350:
   689                           	line	44
   690                           	
   691  0763                     l2858:	
   692                           ;pic_serial.h: 43: {
   693                           ;pic_serial.h: 44: SPBRG = 141;
   694  0763  308D               	movlw	(08Dh)
   695  0764  1683               	bsf	status, 5	;RP0=1, select bank1
   696  0765  1303               	bcf	status, 6	;RP1=0, select bank1
   697  0766  0099               	movwf	(153)^080h	;volatile
   698                           	line	45
   699                           	
   700  0767                     l2860:	
   701                           ;pic_serial.h: 45: BRGH = 0;
   702  0767  1118               	bcf	(1218/8)^080h,(1218)&7
   703                           	line	46
   704                           ;pic_serial.h: 46: }
   705  0768  2FFF               	goto	l719
   706                           	line	47
   707                           	
   708  0769                     l706:	
   709                           	
   710  0769                     l2862:	
   711                           ;pic_serial.h: 47: else if(baud==1200)
   712  0769  3000               	movlw	0
   713  076A  0673               	xorwf	(Baudrate@baud+3),w
   714  076B  1D03               	skipz
   715  076C  2F77               	goto	u2365
   716  076D  3000               	movlw	0
   717  076E  0672               	xorwf	(Baudrate@baud+2),w
   718  076F  1D03               	skipz
   719  0770  2F77               	goto	u2365
   720  0771  3004               	movlw	04h
   721  0772  0671               	xorwf	(Baudrate@baud+1),w
   722  0773  1D03               	skipz
   723  0774  2F77               	goto	u2365
   724  0775  30B0               	movlw	0B0h
   725  0776  0670               	xorwf	(Baudrate@baud),w
   726  0777                     u2365:
   727  0777  1D03               	skipz
   728  0778  2F7A               	goto	u2361
   729  0779  2F7B               	goto	u2360
   730  077A                     u2361:
   731  077A  2F81               	goto	l2868
   732  077B                     u2360:
   733                           	line	49
   734                           	
   735  077B                     l2864:	
   736                           ;pic_serial.h: 48: {
   737                           ;pic_serial.h: 49: SPBRG = 51;
   738  077B  3033               	movlw	(033h)
   739  077C  1683               	bsf	status, 5	;RP0=1, select bank1
   740  077D  1303               	bcf	status, 6	;RP1=0, select bank1
   741  077E  0099               	movwf	(153)^080h	;volatile
   742                           	line	50
   743                           	
   744  077F                     l2866:	
   745                           ;pic_serial.h: 50: BRGH = 0;
   746  077F  1118               	bcf	(1218/8)^080h,(1218)&7
   747                           	line	51
   748                           ;pic_serial.h: 51: }
   749  0780  2FFF               	goto	l719
   750                           	line	52
   751                           	
   752  0781                     l708:	
   753                           	
   754  0781                     l2868:	
   755                           ;pic_serial.h: 52: else if(baud==2400)
   756  0781  3000               	movlw	0
   757  0782  0673               	xorwf	(Baudrate@baud+3),w
   758  0783  1D03               	skipz
   759  0784  2F8F               	goto	u2375
   760  0785  3000               	movlw	0
   761  0786  0672               	xorwf	(Baudrate@baud+2),w
   762  0787  1D03               	skipz
   763  0788  2F8F               	goto	u2375
   764  0789  3009               	movlw	09h
   765  078A  0671               	xorwf	(Baudrate@baud+1),w
   766  078B  1D03               	skipz
   767  078C  2F8F               	goto	u2375
   768  078D  3060               	movlw	060h
   769  078E  0670               	xorwf	(Baudrate@baud),w
   770  078F                     u2375:
   771  078F  1D03               	skipz
   772  0790  2F92               	goto	u2371
   773  0791  2F93               	goto	u2370
   774  0792                     u2371:
   775  0792  2F99               	goto	l2874
   776  0793                     u2370:
   777                           	line	54
   778                           	
   779  0793                     l2870:	
   780                           ;pic_serial.h: 53: {
   781                           ;pic_serial.h: 54: SPBRG = 25;
   782  0793  3019               	movlw	(019h)
   783  0794  1683               	bsf	status, 5	;RP0=1, select bank1
   784  0795  1303               	bcf	status, 6	;RP1=0, select bank1
   785  0796  0099               	movwf	(153)^080h	;volatile
   786                           	line	55
   787                           	
   788  0797                     l2872:	
   789                           ;pic_serial.h: 55: BRGH = 0;
   790  0797  1118               	bcf	(1218/8)^080h,(1218)&7
   791                           	line	56
   792                           ;pic_serial.h: 56: }
   793  0798  2FFF               	goto	l719
   794                           	line	57
   795                           	
   796  0799                     l710:	
   797                           	
   798  0799                     l2874:	
   799                           ;pic_serial.h: 57: else if(baud==4800)
   800  0799  3000               	movlw	0
   801  079A  0673               	xorwf	(Baudrate@baud+3),w
   802  079B  1D03               	skipz
   803  079C  2FA7               	goto	u2385
   804  079D  3000               	movlw	0
   805  079E  0672               	xorwf	(Baudrate@baud+2),w
   806  079F  1D03               	skipz
   807  07A0  2FA7               	goto	u2385
   808  07A1  3012               	movlw	012h
   809  07A2  0671               	xorwf	(Baudrate@baud+1),w
   810  07A3  1D03               	skipz
   811  07A4  2FA7               	goto	u2385
   812  07A5  30C0               	movlw	0C0h
   813  07A6  0670               	xorwf	(Baudrate@baud),w
   814  07A7                     u2385:
   815  07A7  1D03               	skipz
   816  07A8  2FAA               	goto	u2381
   817  07A9  2FAB               	goto	u2380
   818  07AA                     u2381:
   819  07AA  2FB1               	goto	l2880
   820  07AB                     u2380:
   821                           	line	59
   822                           	
   823  07AB                     l2876:	
   824                           ;pic_serial.h: 58: {
   825                           ;pic_serial.h: 59: SPBRG = 12;
   826  07AB  300C               	movlw	(0Ch)
   827  07AC  1683               	bsf	status, 5	;RP0=1, select bank1
   828  07AD  1303               	bcf	status, 6	;RP1=0, select bank1
   829  07AE  0099               	movwf	(153)^080h	;volatile
   830                           	line	60
   831                           	
   832  07AF                     l2878:	
   833                           ;pic_serial.h: 60: BRGH = 0;
   834  07AF  1118               	bcf	(1218/8)^080h,(1218)&7
   835                           	line	61
   836                           ;pic_serial.h: 61: }
   837  07B0  2FFF               	goto	l719
   838                           	line	62
   839                           	
   840  07B1                     l712:	
   841                           	
   842  07B1                     l2880:	
   843                           ;pic_serial.h: 62: else if(baud==9600)
   844  07B1  3000               	movlw	0
   845  07B2  0673               	xorwf	(Baudrate@baud+3),w
   846  07B3  1D03               	skipz
   847  07B4  2FBF               	goto	u2395
   848  07B5  3000               	movlw	0
   849  07B6  0672               	xorwf	(Baudrate@baud+2),w
   850  07B7  1D03               	skipz
   851  07B8  2FBF               	goto	u2395
   852  07B9  3025               	movlw	025h
   853  07BA  0671               	xorwf	(Baudrate@baud+1),w
   854  07BB  1D03               	skipz
   855  07BC  2FBF               	goto	u2395
   856  07BD  3080               	movlw	080h
   857  07BE  0670               	xorwf	(Baudrate@baud),w
   858  07BF                     u2395:
   859  07BF  1D03               	skipz
   860  07C0  2FC2               	goto	u2391
   861  07C1  2FC3               	goto	u2390
   862  07C2                     u2391:
   863  07C2  2FC9               	goto	l2886
   864  07C3                     u2390:
   865                           	line	64
   866                           	
   867  07C3                     l2882:	
   868                           ;pic_serial.h: 63: {
   869                           ;pic_serial.h: 64: SPBRG = 25;
   870  07C3  3019               	movlw	(019h)
   871  07C4  1683               	bsf	status, 5	;RP0=1, select bank1
   872  07C5  1303               	bcf	status, 6	;RP1=0, select bank1
   873  07C6  0099               	movwf	(153)^080h	;volatile
   874                           	line	65
   875                           	
   876  07C7                     l2884:	
   877                           ;pic_serial.h: 65: BRGH = 1;
   878  07C7  1518               	bsf	(1218/8)^080h,(1218)&7
   879                           	line	66
   880                           ;pic_serial.h: 66: }
   881  07C8  2FFF               	goto	l719
   882                           	line	67
   883                           	
   884  07C9                     l714:	
   885                           	
   886  07C9                     l2886:	
   887                           ;pic_serial.h: 67: else if(baud==57600)
   888  07C9  3000               	movlw	0
   889  07CA  0673               	xorwf	(Baudrate@baud+3),w
   890  07CB  1D03               	skipz
   891  07CC  2FD7               	goto	u2405
   892  07CD  3000               	movlw	0
   893  07CE  0672               	xorwf	(Baudrate@baud+2),w
   894  07CF  1D03               	skipz
   895  07D0  2FD7               	goto	u2405
   896  07D1  30E1               	movlw	0E1h
   897  07D2  0671               	xorwf	(Baudrate@baud+1),w
   898  07D3  1D03               	skipz
   899  07D4  2FD7               	goto	u2405
   900  07D5  3000               	movlw	0
   901  07D6  0670               	xorwf	(Baudrate@baud),w
   902  07D7                     u2405:
   903  07D7  1D03               	skipz
   904  07D8  2FDA               	goto	u2401
   905  07D9  2FDB               	goto	u2400
   906  07DA                     u2401:
   907  07DA  2FE1               	goto	l2892
   908  07DB                     u2400:
   909                           	line	69
   910                           	
   911  07DB                     l2888:	
   912                           ;pic_serial.h: 68: {
   913                           ;pic_serial.h: 69: SPBRG = 20;
   914  07DB  3014               	movlw	(014h)
   915  07DC  1683               	bsf	status, 5	;RP0=1, select bank1
   916  07DD  1303               	bcf	status, 6	;RP1=0, select bank1
   917  07DE  0099               	movwf	(153)^080h	;volatile
   918                           	line	70
   919                           	
   920  07DF                     l2890:	
   921                           ;pic_serial.h: 70: BRGH = 1;
   922  07DF  1518               	bsf	(1218/8)^080h,(1218)&7
   923                           	line	71
   924                           ;pic_serial.h: 71: }
   925  07E0  2FFF               	goto	l719
   926                           	line	72
   927                           	
   928  07E1                     l716:	
   929                           	
   930  07E1                     l2892:	
   931                           ;pic_serial.h: 72: else if(baud==115200)
   932  07E1  3000               	movlw	0
   933  07E2  0673               	xorwf	(Baudrate@baud+3),w
   934  07E3  1D03               	skipz
   935  07E4  2FEF               	goto	u2415
   936  07E5  3001               	movlw	01h
   937  07E6  0672               	xorwf	(Baudrate@baud+2),w
   938  07E7  1D03               	skipz
   939  07E8  2FEF               	goto	u2415
   940  07E9  30C2               	movlw	0C2h
   941  07EA  0671               	xorwf	(Baudrate@baud+1),w
   942  07EB  1D03               	skipz
   943  07EC  2FEF               	goto	u2415
   944  07ED  3000               	movlw	0
   945  07EE  0670               	xorwf	(Baudrate@baud),w
   946  07EF                     u2415:
   947  07EF  1D03               	skipz
   948  07F0  2FF2               	goto	u2411
   949  07F1  2FF3               	goto	u2410
   950  07F2                     u2411:
   951  07F2  2FFF               	goto	l719
   952  07F3                     u2410:
   953                           	line	74
   954                           	
   955  07F3                     l2894:	
   956                           ;pic_serial.h: 73: {
   957                           ;pic_serial.h: 74: SPBRG = 10;
   958  07F3  300A               	movlw	(0Ah)
   959  07F4  1683               	bsf	status, 5	;RP0=1, select bank1
   960  07F5  1303               	bcf	status, 6	;RP1=0, select bank1
   961  07F6  0099               	movwf	(153)^080h	;volatile
   962                           	line	75
   963                           	
   964  07F7                     l2896:	
   965                           ;pic_serial.h: 75: BRGH = 1;
   966  07F7  1518               	bsf	(1218/8)^080h,(1218)&7
   967  07F8  2FFF               	goto	l719
   968                           	line	76
   969                           	
   970  07F9                     l718:	
   971  07F9  2FFF               	goto	l719
   972                           	line	77
   973                           	
   974  07FA                     l717:	
   975  07FA  2FFF               	goto	l719
   976                           	
   977  07FB                     l715:	
   978  07FB  2FFF               	goto	l719
   979                           	
   980  07FC                     l713:	
   981  07FC  2FFF               	goto	l719
   982                           	
   983  07FD                     l711:	
   984  07FD  2FFF               	goto	l719
   985                           	
   986  07FE                     l709:	
   987  07FE  2FFF               	goto	l719
   988                           	
   989  07FF                     l707:	
   990                           	
   991  07FF                     l719:	
   992  07FF  0008               	return
   993                           	opt stack 0
   994                           GLOBAL	__end_of_Baudrate
   995  0800                     	__end_of_Baudrate:
   996 ;; =============== function _Baudrate ends ============
   997                           
   998                           	signat	_Baudrate,4216
   999                           psect	text134,local,class=CODE,delta=2
  1000                           global __ptext134
  1001  0000                     __ptext134:
  1002                           	global	btemp
  1003  007E                     	btemp set 07Eh
  1004                           
  1005                           	DABS	1,126,2	;btemp
  1006                           	global	wtemp0
  1007  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat Feb 24 16:29:12 2024

                   _a 0038                     _b 007C                     pc 0002                    _RD 0C60  
                  _WR 0C61                    fsr 0004                   l710 0799                   l711 07FD  
                 l712 07B1                   l713 07FC                   l714 07C9                   l706 0769  
                 l707 07FF                   l715 07FB                   l716 07E1                   l708 0781  
                 l740 074E                   l709 07FE                   l717 07FA                   l741 074C  
                 l733 0719                   l718 07F9                   l742 074D                   l719 07FF  
                 l743 074E                   l736 072F                   l737 072F                   l738 0735  
                 l691 0702                   l739 074A                   _GIE 005F                   fsr0 0004  
                 indf 0000                  l2900 06F3                  l2910 06FE                  l2902 06F6  
                l2912 06FF                  l2904 06F9                  l2920 0736                  l2906 06FC  
                l2922 0744                  l2914 0703                  l2860 0767                  l2908 06FD  
                l2924 0749                  l2916 070B                  l2870 0793                  l2862 0769  
                l2918 0719                  l2880 07B1                  l2872 0797                  l2864 077B  
                l2856 0751                  l2890 07DF                  l2882 07C3                  l2874 0799  
                l2866 077F                  l2858 0763                  l2892 07E1                  l2884 07C7  
                l2876 07AB                  l2868 0781                  l2894 07F3                  l2886 07C9  
                l2878 07AF                  l2896 07F7                  l2888 07DB                  l2898 06E6  
                _BRGH 04C2                  _CREN 00C4                  u2400 07DB                  u2401 07DA  
                u2410 07F3                  u2411 07F2                  u2420 0721                  u2405 07D7  
                u2350 0763                  u2430 0735                  u2415 07EF                  u2351 0762  
                u2431 0734                  u2360 077B                  u2440 0744                  u2361 077A  
                u2441 0743                  u2370 0793                  u2371 0792                  u2355 075F  
                u2380 07AB                  u2381 07AA                  u2365 0777                  u2390 07C3  
                u2391 07C2                  u2375 078F                  u2385 07A7                  u2395 07BF  
                _PEIE 005E                  _RCIE 0465                  _SPEN 00C7                  _WREN 0C62  
                _TXEN 04C5                  _TXIF 0064                  _SYNC 04C4                  _main 0703  
                btemp 007E                  start 0000                 ?_main 0070                 _EEADR 010D  
               _CARRY 0018                 _SPBRG 0099                 _PORTC 0007                 _TRISC 0087  
               _TXREG 0019                 pclath 000A                 status 0003                 wtemp0 007E  
    __end_of_Baudrate 0800          __end_of_main 0751                ??_main 0078                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D         ??_Serial_Init 0078          __pdataCOMMON 007C  
      __pcstackCOMMON 0070   __end_of_Serial_Init 0703          __pidataBANK0 06AE             ?_Baudrate 0070  
          __pbssBANK0 0038            __pmaintext 0703            ??_Baudrate 0074           _Serial_Init 06E6  
             main@dat 002C  end_of_initialization 06E2               init_ram 06BE          Baudrate@baud 0070  
     Serial_Init@baud 0074         __pidataCOMMON 06AD   start_initialization 06CD     __size_of_Baudrate 00AF  
         __pdataBANK0 0020         __pcstackBANK0 002C          ?_Serial_Init 0074             __ptext132 06E6  
           __ptext133 0751             __ptext134 0000             main@F1127 0020              _Baudrate 0751  
           init_fetch 06BA         __size_of_main 004E  __size_of_Serial_Init 001D  
