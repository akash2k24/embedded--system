

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun Mar 03 14:18:21 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_Lcd8_Init
    43                           	FNCALL	_main,_ser_int
    44                           	FNCALL	_main,_txstr
    45                           	FNCALL	_main,_rx
    46                           	FNCALL	_main,_tx
    47                           	FNCALL	_main,_Lcd8_Decimal3
    48                           	FNCALL	_Lcd8_Decimal3,___awdiv
    49                           	FNCALL	_Lcd8_Decimal3,___awmod
    50                           	FNCALL	_Lcd8_Decimal3,___lwdiv
    51                           	FNCALL	_Lcd8_Decimal3,___lwmod
    52                           	FNCALL	_Lcd8_Decimal3,_Lcd8_Write
    53                           	FNCALL	_Lcd8_Write,_Lcd8_Command
    54                           	FNCALL	_Lcd8_Write,_Delay
    55                           	FNCALL	_Lcd8_Init,_Lcd8_Command
    56                           	FNCALL	_txstr,_tx
    57                           	FNCALL	_Lcd8_Command,_Delay
    58                           	FNROOT	_main
    59                           	global	_PORTD
    60                           psect	text299,local,class=CODE,delta=2
    61                           global __ptext299
    62  0000                     __ptext299:
    63  0008                     _PORTD	set	8
    64                           	global	_RCREG
    65  001A                     _RCREG	set	26
    66                           	global	_RCSTA
    67  0018                     _RCSTA	set	24
    68                           	global	_TXREG
    69  0019                     _TXREG	set	25
    70                           	global	_CARRY
    71  0018                     _CARRY	set	24
    72                           	global	_GIE
    73  005F                     _GIE	set	95
    74                           	global	_Lcd_en
    75  003D                     _Lcd_en	set	61
    76                           	global	_Lcd_rs
    77  003C                     _Lcd_rs	set	60
    78                           	global	_RCIF
    79  0065                     _RCIF	set	101
    80                           	global	_TXIF
    81  0064                     _TXIF	set	100
    82                           	global	_SPBRG
    83  0099                     _SPBRG	set	153
    84                           	global	_TRISB
    85  0086                     _TRISB	set	134
    86                           	global	_TRISC
    87  0087                     _TRISC	set	135
    88                           	global	_TRISD
    89  0088                     _TRISD	set	136
    90                           	global	_TXSTA
    91  0098                     _TXSTA	set	152
    92                           	global	_TRISC6
    93  043E                     _TRISC6	set	1086
    94                           	global	_TRISC7
    95  043F                     _TRISC7	set	1087
    96                           	global	_EEADR
    97  010D                     _EEADR	set	269
    98                           	global	_EEDATA
    99  010C                     _EEDATA	set	268
   100                           	global	_EECON1
   101  018C                     _EECON1	set	396
   102                           	global	_EECON2
   103  018D                     _EECON2	set	397
   104                           	global	_RD
   105  0C60                     _RD	set	3168
   106                           	global	_WR
   107  0C61                     _WR	set	3169
   108                           	global	_WREN
   109  0C62                     _WREN	set	3170
   110                           psect	strings,class=STRING,delta=2
   111                           global __pstrings
   112  0003                     __pstrings:
   113                           ;	global	stringdir,stringtab,__stringbase
   114  0003                     stringtab:
   115                           ;	String table - string pointers are 1 byte each
   116  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   117  0003  3000               movlw high(stringdir)
   118  0004  008A               movwf pclath
   119  0005  0804               movf fsr,w
   120  0006  0A84               incf fsr
   121  0007  0782               	addwf pc
   122  0008                     __stringbase:
   123  0008  3400               	retlw	0
   124                           psect	strings
   125                           	
   126  0009                     STR_1:	
   127  0009  3450               	retlw	80	;'P'
   128  000A  3449               	retlw	73	;'I'
   129  000B  3443               	retlw	67	;'C'
   130  000C  3431               	retlw	49	;'1'
   131  000D  3436               	retlw	54	;'6'
   132  000E  3446               	retlw	70	;'F'
   133  000F  3438               	retlw	56	;'8'
   134  0010  3437               	retlw	55	;'7'
   135  0011  3437               	retlw	55	;'7'
   136  0012  3441               	retlw	65	;'A'
   137  0013  3420               	retlw	32	;' '
   138  0014  3453               	retlw	83	;'S'
   139  0015  3445               	retlw	69	;'E'
   140  0016  3452               	retlw	82	;'R'
   141  0017  3449               	retlw	73	;'I'
   142  0018  3441               	retlw	65	;'A'
   143  0019  344C               	retlw	76	;'L'
   144  001A  3420               	retlw	32	;' '
   145  001B  3454               	retlw	84	;'T'
   146  001C  3445               	retlw	69	;'E'
   147  001D  3453               	retlw	83	;'S'
   148  001E  3454               	retlw	84	;'T'
   149  001F  340A               	retlw	10
   150  0020  340D               	retlw	13
   151  0021  340D               	retlw	13
   152  0022  3400               	retlw	0
   153                           psect	strings
   154                           	file	"function.as"
   155                           	line	#
   156                           psect cinit,class=CODE,delta=2
   157                           global start_initialization
   158  07F8                     start_initialization:
   159                           
   160                           psect cinit,class=CODE,delta=2
   161                           global end_of_initialization
   162                           
   163                           ;End of C runtime variable initialization code
   164                           
   165  07F8                     end_of_initialization:
   166  07F8  0183               clrf status
   167  07F9  120A  118A  2DC7   ljmp _main	;jump to C main() function
   168                           psect	cstackCOMMON,class=COMMON,space=1
   169                           global __pcstackCOMMON
   170  0070                     __pcstackCOMMON:
   171                           	global	?_Lcd8_Command
   172  0070                     ?_Lcd8_Command:	; 0 bytes @ 0x0
   173                           	global	?_Delay
   174  0070                     ?_Delay:	; 0 bytes @ 0x0
   175                           	global	?_ser_int
   176  0070                     ?_ser_int:	; 0 bytes @ 0x0
   177                           	global	??_ser_int
   178  0070                     ??_ser_int:	; 0 bytes @ 0x0
   179                           	global	?_txstr
   180  0070                     ?_txstr:	; 0 bytes @ 0x0
   181                           	global	?_tx
   182  0070                     ?_tx:	; 0 bytes @ 0x0
   183                           	global	??_tx
   184  0070                     ??_tx:	; 0 bytes @ 0x0
   185                           	global	??_rx
   186  0070                     ??_rx:	; 0 bytes @ 0x0
   187                           	global	?_Lcd8_Init
   188  0070                     ?_Lcd8_Init:	; 0 bytes @ 0x0
   189                           	global	?_main
   190  0070                     ?_main:	; 0 bytes @ 0x0
   191                           	global	?_rx
   192  0070                     ?_rx:	; 1 bytes @ 0x0
   193                           	global	?___lwdiv
   194  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   195                           	global	?___lwmod
   196  0070                     ?___lwmod:	; 2 bytes @ 0x0
   197                           	global	?___awdiv
   198  0070                     ?___awdiv:	; 2 bytes @ 0x0
   199                           	global	?___awmod
   200  0070                     ?___awmod:	; 2 bytes @ 0x0
   201                           	global	tx@a
   202  0070                     tx@a:	; 1 bytes @ 0x0
   203                           	global	Delay@del
   204  0070                     Delay@del:	; 2 bytes @ 0x0
   205                           	global	___lwdiv@divisor
   206  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   207                           	global	___lwmod@divisor
   208  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   209                           	global	___awdiv@divisor
   210  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   211                           	global	___awmod@divisor
   212  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   213  0070                     	ds	1
   214                           	global	??_txstr
   215  0071                     ??_txstr:	; 0 bytes @ 0x1
   216  0071                     	ds	1
   217                           	global	??_Lcd8_Command
   218  0072                     ??_Lcd8_Command:	; 0 bytes @ 0x2
   219                           	global	??_Delay
   220  0072                     ??_Delay:	; 0 bytes @ 0x2
   221                           	global	Lcd8_Command@com
   222  0072                     Lcd8_Command@com:	; 1 bytes @ 0x2
   223                           	global	txstr@s
   224  0072                     txstr@s:	; 1 bytes @ 0x2
   225                           	global	___lwdiv@dividend
   226  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   227                           	global	___lwmod@dividend
   228  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   229                           	global	___awdiv@dividend
   230  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   231                           	global	___awmod@dividend
   232  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   233  0072                     	ds	1
   234                           	global	??_Lcd8_Init
   235  0073                     ??_Lcd8_Init:	; 0 bytes @ 0x3
   236                           	global	?_Lcd8_Write
   237  0073                     ?_Lcd8_Write:	; 0 bytes @ 0x3
   238                           	global	Lcd8_Write@lr
   239  0073                     Lcd8_Write@lr:	; 1 bytes @ 0x3
   240  0073                     	ds	1
   241                           	global	??_Lcd8_Write
   242  0074                     ??_Lcd8_Write:	; 0 bytes @ 0x4
   243                           	global	??___lwdiv
   244  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   245                           	global	??___lwmod
   246  0074                     ??___lwmod:	; 0 bytes @ 0x4
   247                           	global	??___awdiv
   248  0074                     ??___awdiv:	; 0 bytes @ 0x4
   249                           	global	??___awmod
   250  0074                     ??___awmod:	; 0 bytes @ 0x4
   251                           	global	Lcd8_Write@com
   252  0074                     Lcd8_Write@com:	; 1 bytes @ 0x4
   253  0074                     	ds	1
   254                           	global	___lwmod@counter
   255  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   256                           	global	___awdiv@counter
   257  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   258                           	global	___awmod@counter
   259  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   260                           	global	___lwdiv@quotient
   261  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   262  0075                     	ds	1
   263                           	global	___awdiv@sign
   264  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   265                           	global	___awmod@sign
   266  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   267  0076                     	ds	1
   268                           	global	___lwdiv@counter
   269  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   270                           	global	___awdiv@quotient
   271  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   272  0077                     	ds	2
   273                           	global	?_Lcd8_Decimal3
   274  0079                     ?_Lcd8_Decimal3:	; 0 bytes @ 0x9
   275                           	global	Lcd8_Decimal3@val
   276  0079                     Lcd8_Decimal3@val:	; 1 bytes @ 0x9
   277  0079                     	ds	1
   278                           	global	??_Lcd8_Decimal3
   279  007A                     ??_Lcd8_Decimal3:	; 0 bytes @ 0xA
   280  007A                     	ds	2
   281                           	global	??_main
   282  007C                     ??_main:	; 0 bytes @ 0xC
   283  007C                     	ds	1
   284                           psect	cstackBANK0,class=BANK0,space=1
   285                           global __pcstackBANK0
   286  0020                     __pcstackBANK0:
   287                           	global	Lcd8_Decimal3@Lcd_h
   288  0020                     Lcd8_Decimal3@Lcd_h:	; 2 bytes @ 0x0
   289  0020                     	ds	2
   290                           	global	Lcd8_Decimal3@Lcd_t
   291  0022                     Lcd8_Decimal3@Lcd_t:	; 2 bytes @ 0x2
   292  0022                     	ds	2
   293                           	global	Lcd8_Decimal3@Lcd_o
   294  0024                     Lcd8_Decimal3@Lcd_o:	; 2 bytes @ 0x4
   295  0024                     	ds	2
   296                           	global	Lcd8_Decimal3@Lcd_hr
   297  0026                     Lcd8_Decimal3@Lcd_hr:	; 2 bytes @ 0x6
   298  0026                     	ds	2
   299                           	global	Lcd8_Decimal3@com
   300  0028                     Lcd8_Decimal3@com:	; 1 bytes @ 0x8
   301  0028                     	ds	1
   302 ;;Data sizes: Strings 26, constant 0, data 0, bss 0, persistent 0 stack 0
   303 ;;Auto spaces:   Size  Autos    Used
   304 ;; COMMON          14     13      13
   305 ;; BANK0           80      9       9
   306 ;; BANK1           80      0       0
   307 ;; BANK3           96      0       0
   308 ;; BANK2           96      0       0
   309                           
   310 ;;
   311 ;; Pointer list with targets:
   312                           
   313 ;; ?___awdiv	int  size(1) Largest target is 0
   314 ;;
   315 ;; ?___lwmod	unsigned int  size(1) Largest target is 1
   316 ;;		 -> rx(), 
   317 ;;
   318 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   319 ;;
   320 ;; ?___awmod	int  size(1) Largest target is 1
   321 ;;		 -> rx(), 
   322 ;;
   323 ;; txstr@s	PTR unsigned char  size(1) Largest target is 26
   324 ;;		 -> STR_1(CODE[26]), 
   325 ;;
   326                           
   327                           
   328 ;;
   329 ;; Critical Paths under _main in COMMON
   330 ;;
   331 ;;   _main->_Lcd8_Decimal3
   332 ;;   _Lcd8_Decimal3->___awdiv
   333 ;;   _Lcd8_Write->_Lcd8_Command
   334 ;;   _Lcd8_Init->_Lcd8_Command
   335 ;;   _txstr->_tx
   336 ;;   _Lcd8_Command->_Delay
   337 ;;
   338 ;; Critical Paths under _main in BANK0
   339 ;;
   340 ;;   _main->_Lcd8_Decimal3
   341 ;;
   342 ;; Critical Paths under _main in BANK1
   343 ;;
   344 ;;   None.
   345 ;;
   346 ;; Critical Paths under _main in BANK3
   347 ;;
   348 ;;   None.
   349 ;;
   350 ;; Critical Paths under _main in BANK2
   351 ;;
   352 ;;   None.
   353                           
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   356 ;;
   357                           
   358 ;;
   359 ;;Call Graph Tables:
   360 ;;
   361 ;; ---------------------------------------------------------------------------------
   362 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   363 ;; ---------------------------------------------------------------------------------
   364 ;; (0) _main                                                 1     1      0    1355
   365 ;;                                             12 COMMON     1     1      0
   366 ;;                          _Lcd8_Init
   367 ;;                            _ser_int
   368 ;;                              _txstr
   369 ;;                                 _rx
   370 ;;                                 _tx
   371 ;;                      _Lcd8_Decimal3
   372 ;; ---------------------------------------------------------------------------------
   373 ;; (1) _Lcd8_Decimal3                                       12    11      1    1251
   374 ;;                                              9 COMMON     3     2      1
   375 ;;                                              0 BANK0      9     9      0
   376 ;;                            ___awdiv
   377 ;;                            ___awmod
   378 ;;                            ___lwdiv
   379 ;;                            ___lwmod
   380 ;;                         _Lcd8_Write
   381 ;; ---------------------------------------------------------------------------------
   382 ;; (2) _Lcd8_Write                                           2     1      1     110
   383 ;;                                              3 COMMON     2     1      1
   384 ;;                       _Lcd8_Command
   385 ;;                              _Delay
   386 ;; ---------------------------------------------------------------------------------
   387 ;; (1) _Lcd8_Init                                            0     0      0      44
   388 ;;                       _Lcd8_Command
   389 ;; ---------------------------------------------------------------------------------
   390 ;; (1) _txstr                                                2     2      0      45
   391 ;;                                              1 COMMON     2     2      0
   392 ;;                                 _tx
   393 ;; ---------------------------------------------------------------------------------
   394 ;; (3) _Lcd8_Command                                         1     1      0      44
   395 ;;                                              2 COMMON     1     1      0
   396 ;;                              _Delay
   397 ;; ---------------------------------------------------------------------------------
   398 ;; (2) ___awmod                                              7     3      4     296
   399 ;;                                              0 COMMON     7     3      4
   400 ;; ---------------------------------------------------------------------------------
   401 ;; (2) ___awdiv                                              9     5      4     300
   402 ;;                                              0 COMMON     9     5      4
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (2) ___lwmod                                              6     2      4     159
   405 ;;                                              0 COMMON     6     2      4
   406 ;; ---------------------------------------------------------------------------------
   407 ;; (2) ___lwdiv                                              8     4      4     162
   408 ;;                                              0 COMMON     8     4      4
   409 ;; ---------------------------------------------------------------------------------
   410 ;; (1) _tx                                                   1     1      0      15
   411 ;;                                              0 COMMON     1     1      0
   412 ;; ---------------------------------------------------------------------------------
   413 ;; (1) _rx                                                   0     0      0       0
   414 ;; ---------------------------------------------------------------------------------
   415 ;; (1) _ser_int                                              0     0      0       0
   416 ;; ---------------------------------------------------------------------------------
   417 ;; (3) _Delay                                                2     0      2      22
   418 ;;                                              0 COMMON     2     0      2
   419 ;; ---------------------------------------------------------------------------------
   420 ;; Estimated maximum stack depth 3
   421 ;; ---------------------------------------------------------------------------------
   422                           
   423 ;; Call Graph Graphs:
   424                           
   425 ;; _main (ROOT)
   426 ;;   _Lcd8_Init
   427 ;;     _Lcd8_Command
   428 ;;       _Delay
   429 ;;   _ser_int
   430 ;;   _txstr
   431 ;;     _tx
   432 ;;   _rx
   433 ;;   _tx
   434 ;;   _Lcd8_Decimal3
   435 ;;     ___awdiv
   436 ;;     ___awmod
   437 ;;     ___lwdiv
   438 ;;     ___lwmod
   439 ;;     _Lcd8_Write
   440 ;;       _Lcd8_Command
   441 ;;         _Delay
   442 ;;       _Delay
   443 ;;
   444                           
   445 ;; Address spaces:
   446                           
   447 ;;Name               Size   Autos  Total    Cost      Usage
   448 ;;BITCOMMON            E      0       0       0        0.0%
   449 ;;EEDATA             100      0       0       0        0.0%
   450 ;;NULL                 0      0       0       0        0.0%
   451 ;;CODE                 0      0       0       0        0.0%
   452 ;;COMMON               E      D       D       1       92.9%
   453 ;;BITSFR0              0      0       0       1        0.0%
   454 ;;SFR0                 0      0       0       1        0.0%
   455 ;;BITSFR1              0      0       0       2        0.0%
   456 ;;SFR1                 0      0       0       2        0.0%
   457 ;;STACK                0      0       4       2        0.0%
   458 ;;ABS                  0      0       0       3        0.0%
   459 ;;BITBANK0            50      0       0       4        0.0%
   460 ;;BITSFR3              0      0       0       4        0.0%
   461 ;;SFR3                 0      0       0       4        0.0%
   462 ;;BANK0               50      9       9       5       11.3%
   463 ;;BITSFR2              0      0       0       5        0.0%
   464 ;;SFR2                 0      0       0       5        0.0%
   465 ;;BITBANK1            50      0       0       6        0.0%
   466 ;;BANK1               50      0       0       7        0.0%
   467 ;;BITBANK3            60      0       0       8        0.0%
   468 ;;BANK3               60      0       0       9        0.0%
   469 ;;BITBANK2            60      0       0      10        0.0%
   470 ;;BANK2               60      0       0      11        0.0%
   471 ;;DATA                 0      0       0      12        0.0%
   472                           
   473                           	global	_main
   474                           psect	maintext,global,class=CODE,delta=2
   475                           global __pmaintext
   476  05C7                     __pmaintext:
   477                           
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 14 in file "D:\pic controller,PIC16F877A\New folder\main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;		None               void
   487 ;; Registers used:
   488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 17F/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          1       0       0       0       0
   497 ;;      Totals:         1       0       0       0       0
   498 ;;Total ram usage:        1 bytes
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		_Lcd8_Init
   502 ;;		_ser_int
   503 ;;		_txstr
   504 ;;		_rx
   505 ;;		_tx
   506 ;;		_Lcd8_Decimal3
   507 ;; This function is called by:
   508 ;;		Startup code after reset
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           psect	maintext
   512                           	file	"D:\pic controller,PIC16F877A\New folder\main.c"
   513                           	line	14
   514                           	global	__size_of_main
   515  0033                     	__size_of_main	equ	__end_of_main-_main
   516                           	
   517  05C7                     _main:	
   518                           	opt	stack 4
   519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           	line	15
   521                           	
   522  05C7                     l3148:	
   523                           ;main.c: 15: TRISC6=0;
   524  05C7  1683               	bsf	status, 5	;RP0=1, select bank1
   525  05C8  1303               	bcf	status, 6	;RP1=0, select bank1
   526  05C9  1307               	bcf	(1086/8)^080h,(1086)&7
   527                           	line	16
   528                           	
   529  05CA                     l3150:	
   530                           ;main.c: 16: TRISB=0xff;
   531  05CA  30FF               	movlw	(0FFh)
   532  05CB  0086               	movwf	(134)^080h	;volatile
   533                           	line	17
   534                           ;main.c: 17: TRISC=0xC0;
   535  05CC  30C0               	movlw	(0C0h)
   536  05CD  0087               	movwf	(135)^080h	;volatile
   537                           	line	19
   538                           	
   539  05CE                     l3152:	
   540                           ;main.c: 19: TRISD=0x00;
   541  05CE  0188               	clrf	(136)^080h	;volatile
   542                           	line	20
   543                           	
   544  05CF                     l3154:	
   545                           ;main.c: 20: TRISC7=1;
   546  05CF  1787               	bsf	(1087/8)^080h,(1087)&7
   547                           	line	21
   548                           	
   549  05D0                     l3156:	
   550                           ;main.c: 21: Lcd8_Init();
   551  05D0  120A  118A  254D   	fcall	_Lcd8_Init
              120A  118A         
   552                           	line	22
   553                           	
   554  05D5                     l3158:	
   555                           ;main.c: 22: ser_int();
   556  05D5  120A  118A  2528   	fcall	_ser_int
              120A  118A         
   557                           	line	23
   558                           	
   559  05DA                     l3160:	
   560                           ;main.c: 23: txstr("PIC16F877A SERIAL TEST\n\r\r");
   561  05DA  3001               	movlw	((STR_1-__stringbase))&0ffh
   562  05DB  120A  118A  2583   	fcall	_txstr
              120A  118A         
   563  05E0  2DE1               	goto	l3162
   564                           	line	25
   565                           ;main.c: 25: while(1)
   566                           	
   567  05E1                     l731:	
   568                           	line	27
   569                           	
   570  05E1                     l3162:	
   571                           ;main.c: 26: {
   572                           ;main.c: 27: tx(rx());
   573  05E1  120A  118A  2511   	fcall	_rx
              120A  118A         
   574  05E6  120A  118A  251C   	fcall	_tx
              120A  118A         
   575                           	line	28
   576                           	
   577  05EB                     l3164:	
   578                           ;main.c: 28: Lcd8_Decimal3(0x82,rx);
   579  05EB  3001               	movlw	((fp__rx-fpbase))&0ffh
   580  05EC  00FC               	movwf	(??_main+0)+0
   581  05ED  087C               	movf	(??_main+0)+0,w
   582  05EE  00F9               	movwf	(?_Lcd8_Decimal3)
   583  05EF  3082               	movlw	(082h)
   584  05F0  120A  118A  2709   	fcall	_Lcd8_Decimal3
              120A  118A         
   585  05F5  2DE1               	goto	l3162
   586                           	line	29
   587                           	
   588  05F6                     l732:	
   589                           	line	25
   590  05F6  2DE1               	goto	l3162
   591                           	
   592  05F7                     l733:	
   593                           	line	30
   594                           	
   595  05F7                     l734:	
   596                           	global	start
   597  05F7  120A  118A  2800   	ljmp	start
   598                           	opt stack 0
   599                           GLOBAL	__end_of_main
   600  05FA                     	__end_of_main:
   601 ;; =============== function _main ends ============
   602                           
   603                           	signat	_main,88
   604                           	global	_Lcd8_Decimal3
   605                           psect	text300,local,class=CODE,delta=2
   606                           global __ptext300
   607  0709                     __ptext300:
   608                           
   609 ;; *************** function _Lcd8_Decimal3 *****************
   610 ;; Defined at:
   611 ;;		line 74 in file "D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  com             1    wreg     unsigned char 
   614 ;;  val             1    9[COMMON] unsigned char 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  com             1    8[BANK0 ] unsigned char 
   617 ;;  Lcd_hr          2    6[BANK0 ] unsigned int 
   618 ;;  Lcd_o           2    4[BANK0 ] unsigned int 
   619 ;;  Lcd_t           2    2[BANK0 ] unsigned int 
   620 ;;  Lcd_h           2    0[BANK0 ] unsigned int 
   621 ;; Return value:  Size  Location     Type
   622 ;;		None               void
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         1       0       0       0       0
   631 ;;      Locals:         0       9       0       0       0
   632 ;;      Temps:          2       0       0       0       0
   633 ;;      Totals:         3       9       0       0       0
   634 ;;Total ram usage:       12 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    3
   637 ;; This function calls:
   638 ;;		___awdiv
   639 ;;		___awmod
   640 ;;		___lwdiv
   641 ;;		___lwmod
   642 ;;		_Lcd8_Write
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           psect	text300
   648                           	file	"D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
   649                           	line	74
   650                           	global	__size_of_Lcd8_Decimal3
   651  0089                     	__size_of_Lcd8_Decimal3	equ	__end_of_Lcd8_Decimal3-_Lcd8_Decimal3
   652                           	
   653  0709                     _Lcd8_Decimal3:	
   654                           	opt	stack 4
   655                           ; Regs used in _Lcd8_Decimal3: [wreg+status,2+status,0+pclath+cstack]
   656                           ;Lcd8_Decimal3@com stored from wreg
   657                           	line	77
   658  0709  1283               	bcf	status, 5	;RP0=0, select bank0
   659  070A  1303               	bcf	status, 6	;RP1=0, select bank0
   660  070B  00A8               	movwf	(Lcd8_Decimal3@com)
   661                           	
   662  070C                     l3146:	
   663                           ;pic_lcd8.h: 75: unsigned int Lcd_h,Lcd_hr,Lcd_t,Lcd_o;
   664                           ;pic_lcd8.h: 77: Lcd_h=val/100;
   665  070C  3064               	movlw	low(064h)
   666  070D  00F0               	movwf	(?___awdiv)
   667  070E  3000               	movlw	high(064h)
   668  070F  00F1               	movwf	((?___awdiv))+1
   669  0710  0879               	movf	(Lcd8_Decimal3@val),w
   670  0711  00FA               	movwf	(??_Lcd8_Decimal3+0)+0
   671  0712  01FB               	clrf	(??_Lcd8_Decimal3+0)+0+1
   672  0713  087A               	movf	0+(??_Lcd8_Decimal3+0)+0,w
   673  0714  00F2               	movwf	0+(?___awdiv)+02h
   674  0715  087B               	movf	1+(??_Lcd8_Decimal3+0)+0,w
   675  0716  00F3               	movwf	1+(?___awdiv)+02h
   676  0717  120A  118A  268C   	fcall	___awdiv
              120A  118A         
   677  071C  0871               	movf	(1+(?___awdiv)),w
   678  071D  1283               	bcf	status, 5	;RP0=0, select bank0
   679  071E  1303               	bcf	status, 6	;RP1=0, select bank0
   680  071F  01A1               	clrf	(Lcd8_Decimal3@Lcd_h+1)
   681  0720  07A1               	addwf	(Lcd8_Decimal3@Lcd_h+1)
   682  0721  0870               	movf	(0+(?___awdiv)),w
   683  0722  01A0               	clrf	(Lcd8_Decimal3@Lcd_h)
   684  0723  07A0               	addwf	(Lcd8_Decimal3@Lcd_h)
   685                           
   686                           	line	78
   687                           ;pic_lcd8.h: 78: Lcd_hr=val%100;
   688  0724  3064               	movlw	low(064h)
   689  0725  00F0               	movwf	(?___awmod)
   690  0726  3000               	movlw	high(064h)
   691  0727  00F1               	movwf	((?___awmod))+1
   692  0728  0879               	movf	(Lcd8_Decimal3@val),w
   693  0729  00FA               	movwf	(??_Lcd8_Decimal3+0)+0
   694  072A  01FB               	clrf	(??_Lcd8_Decimal3+0)+0+1
   695  072B  087A               	movf	0+(??_Lcd8_Decimal3+0)+0,w
   696  072C  00F2               	movwf	0+(?___awmod)+02h
   697  072D  087B               	movf	1+(??_Lcd8_Decimal3+0)+0,w
   698  072E  00F3               	movwf	1+(?___awmod)+02h
   699  072F  120A  118A  2792   	fcall	___awmod
              120A  118A         
   700  0734  0871               	movf	(1+(?___awmod)),w
   701  0735  1283               	bcf	status, 5	;RP0=0, select bank0
   702  0736  1303               	bcf	status, 6	;RP1=0, select bank0
   703  0737  01A7               	clrf	(Lcd8_Decimal3@Lcd_hr+1)
   704  0738  07A7               	addwf	(Lcd8_Decimal3@Lcd_hr+1)
   705  0739  0870               	movf	(0+(?___awmod)),w
   706  073A  01A6               	clrf	(Lcd8_Decimal3@Lcd_hr)
   707  073B  07A6               	addwf	(Lcd8_Decimal3@Lcd_hr)
   708                           
   709                           	line	79
   710                           ;pic_lcd8.h: 79: Lcd_t=Lcd_hr/10;
   711  073C  300A               	movlw	low(0Ah)
   712  073D  00F0               	movwf	(?___lwdiv)
   713  073E  3000               	movlw	high(0Ah)
   714  073F  00F1               	movwf	((?___lwdiv))+1
   715  0740  0827               	movf	(Lcd8_Decimal3@Lcd_hr+1),w
   716  0741  01F3               	clrf	1+(?___lwdiv)+02h
   717  0742  07F3               	addwf	1+(?___lwdiv)+02h
   718  0743  0826               	movf	(Lcd8_Decimal3@Lcd_hr),w
   719  0744  01F2               	clrf	0+(?___lwdiv)+02h
   720  0745  07F2               	addwf	0+(?___lwdiv)+02h
   721                           
   722  0746  120A  118A  263E   	fcall	___lwdiv
              120A  118A         
   723  074B  0871               	movf	(1+(?___lwdiv)),w
   724  074C  1283               	bcf	status, 5	;RP0=0, select bank0
   725  074D  1303               	bcf	status, 6	;RP1=0, select bank0
   726  074E  01A3               	clrf	(Lcd8_Decimal3@Lcd_t+1)
   727  074F  07A3               	addwf	(Lcd8_Decimal3@Lcd_t+1)
   728  0750  0870               	movf	(0+(?___lwdiv)),w
   729  0751  01A2               	clrf	(Lcd8_Decimal3@Lcd_t)
   730  0752  07A2               	addwf	(Lcd8_Decimal3@Lcd_t)
   731                           
   732                           	line	80
   733                           ;pic_lcd8.h: 80: Lcd_o=Lcd_hr%10;
   734  0753  300A               	movlw	low(0Ah)
   735  0754  00F0               	movwf	(?___lwmod)
   736  0755  3000               	movlw	high(0Ah)
   737  0756  00F1               	movwf	((?___lwmod))+1
   738  0757  0827               	movf	(Lcd8_Decimal3@Lcd_hr+1),w
   739  0758  01F3               	clrf	1+(?___lwmod)+02h
   740  0759  07F3               	addwf	1+(?___lwmod)+02h
   741  075A  0826               	movf	(Lcd8_Decimal3@Lcd_hr),w
   742  075B  01F2               	clrf	0+(?___lwmod)+02h
   743  075C  07F2               	addwf	0+(?___lwmod)+02h
   744                           
   745  075D  120A  118A  25FA   	fcall	___lwmod
              120A  118A         
   746  0762  0871               	movf	(1+(?___lwmod)),w
   747  0763  1283               	bcf	status, 5	;RP0=0, select bank0
   748  0764  1303               	bcf	status, 6	;RP1=0, select bank0
   749  0765  01A5               	clrf	(Lcd8_Decimal3@Lcd_o+1)
   750  0766  07A5               	addwf	(Lcd8_Decimal3@Lcd_o+1)
   751  0767  0870               	movf	(0+(?___lwmod)),w
   752  0768  01A4               	clrf	(Lcd8_Decimal3@Lcd_o)
   753  0769  07A4               	addwf	(Lcd8_Decimal3@Lcd_o)
   754                           
   755                           	line	82
   756                           ;pic_lcd8.h: 82: Lcd8_Write(com,Lcd_h+0x30);
   757  076A  0820               	movf	(Lcd8_Decimal3@Lcd_h),w
   758  076B  3E30               	addlw	030h
   759  076C  00FA               	movwf	(??_Lcd8_Decimal3+0)+0
   760  076D  087A               	movf	(??_Lcd8_Decimal3+0)+0,w
   761  076E  00F3               	movwf	(?_Lcd8_Write)
   762  076F  0828               	movf	(Lcd8_Decimal3@com),w
   763  0770  120A  118A  25A4   	fcall	_Lcd8_Write
              120A  118A         
   764                           	line	83
   765                           ;pic_lcd8.h: 83: Lcd8_Write(com+1,Lcd_t+0x30);
   766  0775  1283               	bcf	status, 5	;RP0=0, select bank0
   767  0776  1303               	bcf	status, 6	;RP1=0, select bank0
   768  0777  0822               	movf	(Lcd8_Decimal3@Lcd_t),w
   769  0778  3E30               	addlw	030h
   770  0779  00FA               	movwf	(??_Lcd8_Decimal3+0)+0
   771  077A  087A               	movf	(??_Lcd8_Decimal3+0)+0,w
   772  077B  00F3               	movwf	(?_Lcd8_Write)
   773  077C  0828               	movf	(Lcd8_Decimal3@com),w
   774  077D  3E01               	addlw	01h
   775  077E  120A  118A  25A4   	fcall	_Lcd8_Write
              120A  118A         
   776                           	line	84
   777                           ;pic_lcd8.h: 84: Lcd8_Write(com+2,Lcd_o+0x30);
   778  0783  1283               	bcf	status, 5	;RP0=0, select bank0
   779  0784  1303               	bcf	status, 6	;RP1=0, select bank0
   780  0785  0824               	movf	(Lcd8_Decimal3@Lcd_o),w
   781  0786  3E30               	addlw	030h
   782  0787  00FA               	movwf	(??_Lcd8_Decimal3+0)+0
   783  0788  087A               	movf	(??_Lcd8_Decimal3+0)+0,w
   784  0789  00F3               	movwf	(?_Lcd8_Write)
   785  078A  0828               	movf	(Lcd8_Decimal3@com),w
   786  078B  3E02               	addlw	02h
   787  078C  120A  118A  25A4   	fcall	_Lcd8_Write
              120A  118A         
   788                           	line	85
   789                           	
   790  0791                     l719:	
   791  0791  0008               	return
   792                           	opt stack 0
   793                           GLOBAL	__end_of_Lcd8_Decimal3
   794  0792                     	__end_of_Lcd8_Decimal3:
   795 ;; =============== function _Lcd8_Decimal3 ends ============
   796                           
   797                           	signat	_Lcd8_Decimal3,8312
   798                           	global	_Lcd8_Write
   799                           psect	text301,local,class=CODE,delta=2
   800                           global __ptext301
   801  05A4                     __ptext301:
   802                           
   803 ;; *************** function _Lcd8_Write *****************
   804 ;; Defined at:
   805 ;;		line 39 in file "D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  com             1    wreg     unsigned char 
   808 ;;  lr              1    3[COMMON] unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  com             1    4[COMMON] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, pclath, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         1       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         2       0       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    2
   827 ;; This function calls:
   828 ;;		_Lcd8_Command
   829 ;;		_Delay
   830 ;; This function is called by:
   831 ;;		_Lcd8_Decimal3
   832 ;;		_Lcd8_Display
   833 ;;		_Lcd8_Decimal2
   834 ;;		_Lcd8_Decimal4
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           psect	text301
   838                           	file	"D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
   839                           	line	39
   840                           	global	__size_of_Lcd8_Write
   841  0023                     	__size_of_Lcd8_Write	equ	__end_of_Lcd8_Write-_Lcd8_Write
   842                           	
   843  05A4                     _Lcd8_Write:	
   844                           	opt	stack 4
   845                           ; Regs used in _Lcd8_Write: [wreg+status,2+status,0+pclath+cstack]
   846                           ;Lcd8_Write@com stored from wreg
   847  05A4  00F4               	movwf	(Lcd8_Write@com)
   848                           	line	40
   849                           	
   850  05A5                     l3132:	
   851                           ;pic_lcd8.h: 40: Lcd8_Command(com);
   852  05A5  0874               	movf	(Lcd8_Write@com),w
   853  05A6  120A  118A  2566   	fcall	_Lcd8_Command
              120A  118A         
   854                           	line	42
   855                           	
   856  05AB                     l3134:	
   857                           ;pic_lcd8.h: 42: PORTD=lr;
   858  05AB  0873               	movf	(Lcd8_Write@lr),w
   859  05AC  1283               	bcf	status, 5	;RP0=0, select bank0
   860  05AD  1303               	bcf	status, 6	;RP1=0, select bank0
   861  05AE  0088               	movwf	(8)	;volatile
   862                           	line	43
   863                           	
   864  05AF                     l3136:	
   865                           ;pic_lcd8.h: 43: Lcd_en=1;
   866  05AF  1687               	bsf	(61/8),(61)&7
   867                           	line	44
   868                           	
   869  05B0                     l3138:	
   870                           ;pic_lcd8.h: 44: Lcd_rs=1;
   871  05B0  1607               	bsf	(60/8),(60)&7
   872                           	line	45
   873                           	
   874  05B1                     l3140:	
   875                           ;pic_lcd8.h: 45: Delay(125);
   876  05B1  307D               	movlw	low(07Dh)
   877  05B2  00F0               	movwf	(?_Delay)
   878  05B3  3000               	movlw	high(07Dh)
   879  05B4  00F1               	movwf	((?_Delay))+1
   880  05B5  120A  118A  2539   	fcall	_Delay
              120A  118A         
   881                           	line	46
   882                           	
   883  05BA                     l3142:	
   884                           ;pic_lcd8.h: 46: Lcd_en=0;
   885  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
   886  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
   887  05BC  1287               	bcf	(61/8),(61)&7
   888                           	line	47
   889                           	
   890  05BD                     l3144:	
   891                           ;pic_lcd8.h: 47: Delay(125);
   892  05BD  307D               	movlw	low(07Dh)
   893  05BE  00F0               	movwf	(?_Delay)
   894  05BF  3000               	movlw	high(07Dh)
   895  05C0  00F1               	movwf	((?_Delay))+1
   896  05C1  120A  118A  2539   	fcall	_Delay
              120A  118A         
   897                           	line	48
   898                           	
   899  05C6                     l707:	
   900  05C6  0008               	return
   901                           	opt stack 0
   902                           GLOBAL	__end_of_Lcd8_Write
   903  05C7                     	__end_of_Lcd8_Write:
   904 ;; =============== function _Lcd8_Write ends ============
   905                           
   906                           	signat	_Lcd8_Write,8312
   907                           	global	_Lcd8_Init
   908                           psect	text302,local,class=CODE,delta=2
   909                           global __ptext302
   910  054D                     __ptext302:
   911                           
   912 ;; *************** function _Lcd8_Init *****************
   913 ;; Defined at:
   914 ;;		line 21 in file "D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;		None               void
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0
   931 ;;      Totals:         0       0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		_Lcd8_Command
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           psect	text302
   942                           	file	"D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
   943                           	line	21
   944                           	global	__size_of_Lcd8_Init
   945  0019                     	__size_of_Lcd8_Init	equ	__end_of_Lcd8_Init-_Lcd8_Init
   946                           	
   947  054D                     _Lcd8_Init:	
   948                           	opt	stack 5
   949                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
   950                           	line	22
   951                           	
   952  054D                     l3130:	
   953                           ;pic_lcd8.h: 22: Lcd8_Command(0x38);
   954  054D  3038               	movlw	(038h)
   955  054E  120A  118A  2566   	fcall	_Lcd8_Command
              120A  118A         
   956                           	line	23
   957                           ;pic_lcd8.h: 23: Lcd8_Command(0x06);
   958  0553  3006               	movlw	(06h)
   959  0554  120A  118A  2566   	fcall	_Lcd8_Command
              120A  118A         
   960                           	line	24
   961                           ;pic_lcd8.h: 24: Lcd8_Command(0x0c);
   962  0559  300C               	movlw	(0Ch)
   963  055A  120A  118A  2566   	fcall	_Lcd8_Command
              120A  118A         
   964                           	line	25
   965                           ;pic_lcd8.h: 25: Lcd8_Command(0x01);
   966  055F  3001               	movlw	(01h)
   967  0560  120A  118A  2566   	fcall	_Lcd8_Command
              120A  118A         
   968                           	line	26
   969                           	
   970  0565                     l701:	
   971  0565  0008               	return
   972                           	opt stack 0
   973                           GLOBAL	__end_of_Lcd8_Init
   974  0566                     	__end_of_Lcd8_Init:
   975 ;; =============== function _Lcd8_Init ends ============
   976                           
   977                           	signat	_Lcd8_Init,88
   978                           	global	_txstr
   979                           psect	text303,local,class=CODE,delta=2
   980                           global __ptext303
   981  0583                     __ptext303:
   982                           
   983 ;; *************** function _txstr *****************
   984 ;; Defined at:
   985 ;;		line 55 in file "D:\pic controller,PIC16F877A\New folder\main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  s               1    wreg     PTR unsigned char 
   988 ;;		 -> STR_1(26), 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  s               1    2[COMMON] PTR unsigned char 
   991 ;;		 -> STR_1(26), 
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         1       0       0       0       0
  1003 ;;      Temps:          1       0       0       0       0
  1004 ;;      Totals:         2       0       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    1
  1008 ;; This function calls:
  1009 ;;		_tx
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           psect	text303
  1015                           	file	"D:\pic controller,PIC16F877A\New folder\main.c"
  1016                           	line	55
  1017                           	global	__size_of_txstr
  1018  0021                     	__size_of_txstr	equ	__end_of_txstr-_txstr
  1019                           	
  1020  0583                     _txstr:	
  1021                           	opt	stack 6
  1022                           ; Regs used in _txstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1023                           ;txstr@s stored from wreg
  1024  0583  00F2               	movwf	(txstr@s)
  1025                           	line	56
  1026                           	
  1027  0584                     l2908:	
  1028                           ;main.c: 56: while(*s) {
  1029  0584  2D96               	goto	l2914
  1030                           	
  1031  0585                     l753:	
  1032                           	line	57
  1033                           	
  1034  0585                     l2910:	
  1035                           ;main.c: 57: tx(*s++);
  1036  0585  0872               	movf	(txstr@s),w
  1037  0586  0084               	movwf	fsr0
  1038  0587  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1039  058C  120A  118A  251C   	fcall	_tx
              120A  118A         
  1040                           	
  1041  0591                     l2912:	
  1042  0591  3001               	movlw	(01h)
  1043  0592  00F1               	movwf	(??_txstr+0)+0
  1044  0593  0871               	movf	(??_txstr+0)+0,w
  1045  0594  07F2               	addwf	(txstr@s),f
  1046  0595  2D96               	goto	l2914
  1047                           	line	58
  1048                           	
  1049  0596                     l752:	
  1050                           	line	56
  1051                           	
  1052  0596                     l2914:	
  1053  0596  0872               	movf	(txstr@s),w
  1054  0597  0084               	movwf	fsr0
  1055  0598  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1056  059D  3800               	iorlw	0
  1057  059E  1D03               	skipz
  1058  059F  2DA1               	goto	u2261
  1059  05A0  2DA2               	goto	u2260
  1060  05A1                     u2261:
  1061  05A1  2D85               	goto	l2910
  1062  05A2                     u2260:
  1063  05A2  2DA3               	goto	l755
  1064                           	
  1065  05A3                     l754:	
  1066                           	line	59
  1067                           	
  1068  05A3                     l755:	
  1069  05A3  0008               	return
  1070                           	opt stack 0
  1071                           GLOBAL	__end_of_txstr
  1072  05A4                     	__end_of_txstr:
  1073 ;; =============== function _txstr ends ============
  1074                           
  1075                           	signat	_txstr,4216
  1076                           	global	_Lcd8_Command
  1077                           psect	text304,local,class=CODE,delta=2
  1078                           global __ptext304
  1079  0566                     __ptext304:
  1080                           
  1081 ;; *************** function _Lcd8_Command *****************
  1082 ;; Defined at:
  1083 ;;		line 29 in file "D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  com             1    wreg     unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  com             1    2[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         1       0       0       0       0
  1101 ;;Total ram usage:        1 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    1
  1104 ;; This function calls:
  1105 ;;		_Delay
  1106 ;; This function is called by:
  1107 ;;		_Lcd8_Init
  1108 ;;		_Lcd8_Write
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           psect	text304
  1112                           	file	"D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
  1113                           	line	29
  1114                           	global	__size_of_Lcd8_Command
  1115  001D                     	__size_of_Lcd8_Command	equ	__end_of_Lcd8_Command-_Lcd8_Command
  1116                           	
  1117  0566                     _Lcd8_Command:	
  1118                           	opt	stack 4
  1119                           ; Regs used in _Lcd8_Command: [wreg+status,2+status,0+pclath+cstack]
  1120                           ;Lcd8_Command@com stored from wreg
  1121  0566  00F2               	movwf	(Lcd8_Command@com)
  1122                           	line	30
  1123                           	
  1124  0567                     l3118:	
  1125                           ;pic_lcd8.h: 30: PORTD=com;
  1126  0567  0872               	movf	(Lcd8_Command@com),w
  1127  0568  1283               	bcf	status, 5	;RP0=0, select bank0
  1128  0569  1303               	bcf	status, 6	;RP1=0, select bank0
  1129  056A  0088               	movwf	(8)	;volatile
  1130                           	line	31
  1131                           	
  1132  056B                     l3120:	
  1133                           ;pic_lcd8.h: 31: Lcd_en=1;
  1134  056B  1687               	bsf	(61/8),(61)&7
  1135                           	line	32
  1136                           	
  1137  056C                     l3122:	
  1138                           ;pic_lcd8.h: 32: Lcd_rs=0;
  1139  056C  1207               	bcf	(60/8),(60)&7
  1140                           	line	33
  1141                           	
  1142  056D                     l3124:	
  1143                           ;pic_lcd8.h: 33: Delay(125);
  1144  056D  307D               	movlw	low(07Dh)
  1145  056E  00F0               	movwf	(?_Delay)
  1146  056F  3000               	movlw	high(07Dh)
  1147  0570  00F1               	movwf	((?_Delay))+1
  1148  0571  120A  118A  2539   	fcall	_Delay
              120A  118A         
  1149                           	line	34
  1150                           	
  1151  0576                     l3126:	
  1152                           ;pic_lcd8.h: 34: Lcd_en=0;
  1153  0576  1283               	bcf	status, 5	;RP0=0, select bank0
  1154  0577  1303               	bcf	status, 6	;RP1=0, select bank0
  1155  0578  1287               	bcf	(61/8),(61)&7
  1156                           	line	35
  1157                           	
  1158  0579                     l3128:	
  1159                           ;pic_lcd8.h: 35: Delay(125);
  1160  0579  307D               	movlw	low(07Dh)
  1161  057A  00F0               	movwf	(?_Delay)
  1162  057B  3000               	movlw	high(07Dh)
  1163  057C  00F1               	movwf	((?_Delay))+1
  1164  057D  120A  118A  2539   	fcall	_Delay
              120A  118A         
  1165                           	line	36
  1166                           	
  1167  0582                     l704:	
  1168  0582  0008               	return
  1169                           	opt stack 0
  1170                           GLOBAL	__end_of_Lcd8_Command
  1171  0583                     	__end_of_Lcd8_Command:
  1172 ;; =============== function _Lcd8_Command ends ============
  1173                           
  1174                           	signat	_Lcd8_Command,4216
  1175                           	global	___awmod
  1176                           psect	text305,local,class=CODE,delta=2
  1177                           global __ptext305
  1178  0792                     __ptext305:
  1179                           
  1180 ;; *************** function ___awmod *****************
  1181 ;; Defined at:
  1182 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  divisor         2    0[COMMON] int 
  1185 ;;  dividend        2    2[COMMON] int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  sign            1    6[COMMON] unsigned char 
  1188 ;;  counter         1    5[COMMON] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    0[COMMON] int 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         4       0       0       0       0
  1199 ;;      Locals:         2       0       0       0       0
  1200 ;;      Temps:          1       0       0       0       0
  1201 ;;      Totals:         7       0       0       0       0
  1202 ;;Total ram usage:        7 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_Lcd8_Decimal3
  1208 ;;		_Lcd8_Decimal2
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           psect	text305
  1212                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  1213                           	line	5
  1214                           	global	__size_of___awmod
  1215  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  1216                           	
  1217  0792                     ___awmod:	
  1218                           	opt	stack 6
  1219                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1220                           	line	8
  1221                           	
  1222  0792                     l3084:	
  1223  0792  01F6               	clrf	(___awmod@sign)
  1224                           	line	9
  1225  0793  1FF3               	btfss	(___awmod@dividend+1),7
  1226  0794  2F96               	goto	u2521
  1227  0795  2F97               	goto	u2520
  1228  0796                     u2521:
  1229  0796  2FA0               	goto	l3088
  1230  0797                     u2520:
  1231                           	line	10
  1232                           	
  1233  0797                     l3086:	
  1234  0797  09F2               	comf	(___awmod@dividend),f
  1235  0798  09F3               	comf	(___awmod@dividend+1),f
  1236  0799  0AF2               	incf	(___awmod@dividend),f
  1237  079A  1903               	skipnz
  1238  079B  0AF3               	incf	(___awmod@dividend+1),f
  1239                           	line	11
  1240  079C  01F6               	clrf	(___awmod@sign)
  1241  079D  1403               	bsf	status,0
  1242  079E  0DF6               	rlf	(___awmod@sign),f
  1243  079F  2FA0               	goto	l3088
  1244                           	line	12
  1245                           	
  1246  07A0                     l1646:	
  1247                           	line	13
  1248                           	
  1249  07A0                     l3088:	
  1250  07A0  1FF1               	btfss	(___awmod@divisor+1),7
  1251  07A1  2FA3               	goto	u2531
  1252  07A2  2FA4               	goto	u2530
  1253  07A3                     u2531:
  1254  07A3  2FAA               	goto	l3092
  1255  07A4                     u2530:
  1256                           	line	14
  1257                           	
  1258  07A4                     l3090:	
  1259  07A4  09F0               	comf	(___awmod@divisor),f
  1260  07A5  09F1               	comf	(___awmod@divisor+1),f
  1261  07A6  0AF0               	incf	(___awmod@divisor),f
  1262  07A7  1903               	skipnz
  1263  07A8  0AF1               	incf	(___awmod@divisor+1),f
  1264  07A9  2FAA               	goto	l3092
  1265                           	
  1266  07AA                     l1647:	
  1267                           	line	15
  1268                           	
  1269  07AA                     l3092:	
  1270  07AA  0871               	movf	(___awmod@divisor+1),w
  1271  07AB  0470               	iorwf	(___awmod@divisor),w
  1272  07AC  1903               	skipnz
  1273  07AD  2FAF               	goto	u2541
  1274  07AE  2FB0               	goto	u2540
  1275  07AF                     u2541:
  1276  07AF  2FE6               	goto	l3110
  1277  07B0                     u2540:
  1278                           	line	16
  1279                           	
  1280  07B0                     l3094:	
  1281  07B0  01F5               	clrf	(___awmod@counter)
  1282  07B1  1403               	bsf	status,0
  1283  07B2  0DF5               	rlf	(___awmod@counter),f
  1284                           	line	17
  1285  07B3  2FC0               	goto	l3100
  1286                           	
  1287  07B4                     l1650:	
  1288                           	line	18
  1289                           	
  1290  07B4                     l3096:	
  1291  07B4  3001               	movlw	01h
  1292                           	
  1293  07B5                     u2555:
  1294  07B5  1003               	clrc
  1295  07B6  0DF0               	rlf	(___awmod@divisor),f
  1296  07B7  0DF1               	rlf	(___awmod@divisor+1),f
  1297  07B8  3EFF               	addlw	-1
  1298  07B9  1D03               	skipz
  1299  07BA  2FB5               	goto	u2555
  1300                           	line	19
  1301                           	
  1302  07BB                     l3098:	
  1303  07BB  3001               	movlw	(01h)
  1304  07BC  00F4               	movwf	(??___awmod+0)+0
  1305  07BD  0874               	movf	(??___awmod+0)+0,w
  1306  07BE  07F5               	addwf	(___awmod@counter),f
  1307  07BF  2FC0               	goto	l3100
  1308                           	line	20
  1309                           	
  1310  07C0                     l1649:	
  1311                           	line	17
  1312                           	
  1313  07C0                     l3100:	
  1314  07C0  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  1315  07C1  2FC3               	goto	u2561
  1316  07C2  2FC4               	goto	u2560
  1317  07C3                     u2561:
  1318  07C3  2FB4               	goto	l3096
  1319  07C4                     u2560:
  1320  07C4  2FC6               	goto	l3102
  1321                           	
  1322  07C5                     l1651:	
  1323  07C5  2FC6               	goto	l3102
  1324                           	line	21
  1325                           	
  1326  07C6                     l1652:	
  1327                           	line	22
  1328                           	
  1329  07C6                     l3102:	
  1330  07C6  0871               	movf	(___awmod@divisor+1),w
  1331  07C7  0273               	subwf	(___awmod@dividend+1),w
  1332  07C8  1D03               	skipz
  1333  07C9  2FCC               	goto	u2575
  1334  07CA  0870               	movf	(___awmod@divisor),w
  1335  07CB  0272               	subwf	(___awmod@dividend),w
  1336  07CC                     u2575:
  1337  07CC  1C03               	skipc
  1338  07CD  2FCF               	goto	u2571
  1339  07CE  2FD0               	goto	u2570
  1340  07CF                     u2571:
  1341  07CF  2FD7               	goto	l3106
  1342  07D0                     u2570:
  1343                           	line	23
  1344                           	
  1345  07D0                     l3104:	
  1346  07D0  0870               	movf	(___awmod@divisor),w
  1347  07D1  02F2               	subwf	(___awmod@dividend),f
  1348  07D2  0871               	movf	(___awmod@divisor+1),w
  1349  07D3  1C03               	skipc
  1350  07D4  03F3               	decf	(___awmod@dividend+1),f
  1351  07D5  02F3               	subwf	(___awmod@dividend+1),f
  1352  07D6  2FD7               	goto	l3106
  1353                           	
  1354  07D7                     l1653:	
  1355                           	line	24
  1356                           	
  1357  07D7                     l3106:	
  1358  07D7  3001               	movlw	01h
  1359                           	
  1360  07D8                     u2585:
  1361  07D8  1003               	clrc
  1362  07D9  0CF1               	rrf	(___awmod@divisor+1),f
  1363  07DA  0CF0               	rrf	(___awmod@divisor),f
  1364  07DB  3EFF               	addlw	-1
  1365  07DC  1D03               	skipz
  1366  07DD  2FD8               	goto	u2585
  1367                           	line	25
  1368                           	
  1369  07DE                     l3108:	
  1370  07DE  3001               	movlw	low(01h)
  1371  07DF  02F5               	subwf	(___awmod@counter),f
  1372  07E0  1D03               	btfss	status,2
  1373  07E1  2FE3               	goto	u2591
  1374  07E2  2FE4               	goto	u2590
  1375  07E3                     u2591:
  1376  07E3  2FC6               	goto	l3102
  1377  07E4                     u2590:
  1378  07E4  2FE6               	goto	l3110
  1379                           	
  1380  07E5                     l1654:	
  1381  07E5  2FE6               	goto	l3110
  1382                           	line	26
  1383                           	
  1384  07E6                     l1648:	
  1385                           	line	27
  1386                           	
  1387  07E6                     l3110:	
  1388  07E6  0876               	movf	(___awmod@sign),w
  1389  07E7  1D03               	skipz
  1390  07E8  2FEA               	goto	u2600
  1391  07E9  2FF0               	goto	l3114
  1392  07EA                     u2600:
  1393                           	line	28
  1394                           	
  1395  07EA                     l3112:	
  1396  07EA  09F2               	comf	(___awmod@dividend),f
  1397  07EB  09F3               	comf	(___awmod@dividend+1),f
  1398  07EC  0AF2               	incf	(___awmod@dividend),f
  1399  07ED  1903               	skipnz
  1400  07EE  0AF3               	incf	(___awmod@dividend+1),f
  1401  07EF  2FF0               	goto	l3114
  1402                           	
  1403  07F0                     l1655:	
  1404                           	line	29
  1405                           	
  1406  07F0                     l3114:	
  1407  07F0  0873               	movf	(___awmod@dividend+1),w
  1408  07F1  01F1               	clrf	(?___awmod+1)
  1409  07F2  07F1               	addwf	(?___awmod+1)
  1410  07F3  0872               	movf	(___awmod@dividend),w
  1411  07F4  01F0               	clrf	(?___awmod)
  1412  07F5  07F0               	addwf	(?___awmod)
  1413                           
  1414  07F6  2FF7               	goto	l1656
  1415                           	
  1416  07F7                     l3116:	
  1417                           	line	30
  1418                           	
  1419  07F7                     l1656:	
  1420  07F7  0008               	return
  1421                           	opt stack 0
  1422                           GLOBAL	__end_of___awmod
  1423  07F8                     	__end_of___awmod:
  1424 ;; =============== function ___awmod ends ============
  1425                           
  1426                           	signat	___awmod,8314
  1427                           	global	___awdiv
  1428                           psect	text306,local,class=CODE,delta=2
  1429                           global __ptext306
  1430  068C                     __ptext306:
  1431                           
  1432 ;; *************** function ___awdiv *****************
  1433 ;; Defined at:
  1434 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  divisor         2    0[COMMON] int 
  1437 ;;  dividend        2    2[COMMON] int 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  quotient        2    7[COMMON] int 
  1440 ;;  sign            1    6[COMMON] unsigned char 
  1441 ;;  counter         1    5[COMMON] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2    0[COMMON] int 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         4       0       0       0       0
  1452 ;;      Locals:         4       0       0       0       0
  1453 ;;      Temps:          1       0       0       0       0
  1454 ;;      Totals:         9       0       0       0       0
  1455 ;;Total ram usage:        9 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_Lcd8_Decimal3
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           psect	text306
  1464                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  1465                           	line	5
  1466                           	global	__size_of___awdiv
  1467  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1468                           	
  1469  068C                     ___awdiv:	
  1470                           	opt	stack 6
  1471                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1472                           	line	9
  1473                           	
  1474  068C                     l3044:	
  1475  068C  01F6               	clrf	(___awdiv@sign)
  1476                           	line	10
  1477  068D  1FF1               	btfss	(___awdiv@divisor+1),7
  1478  068E  2E90               	goto	u2421
  1479  068F  2E91               	goto	u2420
  1480  0690                     u2421:
  1481  0690  2E9A               	goto	l3048
  1482  0691                     u2420:
  1483                           	line	11
  1484                           	
  1485  0691                     l3046:	
  1486  0691  09F0               	comf	(___awdiv@divisor),f
  1487  0692  09F1               	comf	(___awdiv@divisor+1),f
  1488  0693  0AF0               	incf	(___awdiv@divisor),f
  1489  0694  1903               	skipnz
  1490  0695  0AF1               	incf	(___awdiv@divisor+1),f
  1491                           	line	12
  1492  0696  01F6               	clrf	(___awdiv@sign)
  1493  0697  1403               	bsf	status,0
  1494  0698  0DF6               	rlf	(___awdiv@sign),f
  1495  0699  2E9A               	goto	l3048
  1496                           	line	13
  1497                           	
  1498  069A                     l1578:	
  1499                           	line	14
  1500                           	
  1501  069A                     l3048:	
  1502  069A  1FF3               	btfss	(___awdiv@dividend+1),7
  1503  069B  2E9D               	goto	u2431
  1504  069C  2E9E               	goto	u2430
  1505  069D                     u2431:
  1506  069D  2EA8               	goto	l3054
  1507  069E                     u2430:
  1508                           	line	15
  1509                           	
  1510  069E                     l3050:	
  1511  069E  09F2               	comf	(___awdiv@dividend),f
  1512  069F  09F3               	comf	(___awdiv@dividend+1),f
  1513  06A0  0AF2               	incf	(___awdiv@dividend),f
  1514  06A1  1903               	skipnz
  1515  06A2  0AF3               	incf	(___awdiv@dividend+1),f
  1516                           	line	16
  1517                           	
  1518  06A3                     l3052:	
  1519  06A3  3001               	movlw	(01h)
  1520  06A4  00F4               	movwf	(??___awdiv+0)+0
  1521  06A5  0874               	movf	(??___awdiv+0)+0,w
  1522  06A6  06F6               	xorwf	(___awdiv@sign),f
  1523  06A7  2EA8               	goto	l3054
  1524                           	line	17
  1525                           	
  1526  06A8                     l1579:	
  1527                           	line	18
  1528                           	
  1529  06A8                     l3054:	
  1530  06A8  01F7               	clrf	(___awdiv@quotient)
  1531  06A9  01F8               	clrf	(___awdiv@quotient+1)
  1532                           	line	19
  1533                           	
  1534  06AA                     l3056:	
  1535  06AA  0871               	movf	(___awdiv@divisor+1),w
  1536  06AB  0470               	iorwf	(___awdiv@divisor),w
  1537  06AC  1903               	skipnz
  1538  06AD  2EAF               	goto	u2441
  1539  06AE  2EB0               	goto	u2440
  1540  06AF                     u2441:
  1541  06AF  2EEE               	goto	l3076
  1542  06B0                     u2440:
  1543                           	line	20
  1544                           	
  1545  06B0                     l3058:	
  1546  06B0  01F5               	clrf	(___awdiv@counter)
  1547  06B1  1403               	bsf	status,0
  1548  06B2  0DF5               	rlf	(___awdiv@counter),f
  1549                           	line	21
  1550  06B3  2EC0               	goto	l3064
  1551                           	
  1552  06B4                     l1582:	
  1553                           	line	22
  1554                           	
  1555  06B4                     l3060:	
  1556  06B4  3001               	movlw	01h
  1557                           	
  1558  06B5                     u2455:
  1559  06B5  1003               	clrc
  1560  06B6  0DF0               	rlf	(___awdiv@divisor),f
  1561  06B7  0DF1               	rlf	(___awdiv@divisor+1),f
  1562  06B8  3EFF               	addlw	-1
  1563  06B9  1D03               	skipz
  1564  06BA  2EB5               	goto	u2455
  1565                           	line	23
  1566                           	
  1567  06BB                     l3062:	
  1568  06BB  3001               	movlw	(01h)
  1569  06BC  00F4               	movwf	(??___awdiv+0)+0
  1570  06BD  0874               	movf	(??___awdiv+0)+0,w
  1571  06BE  07F5               	addwf	(___awdiv@counter),f
  1572  06BF  2EC0               	goto	l3064
  1573                           	line	24
  1574                           	
  1575  06C0                     l1581:	
  1576                           	line	21
  1577                           	
  1578  06C0                     l3064:	
  1579  06C0  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  1580  06C1  2EC3               	goto	u2461
  1581  06C2  2EC4               	goto	u2460
  1582  06C3                     u2461:
  1583  06C3  2EB4               	goto	l3060
  1584  06C4                     u2460:
  1585  06C4  2EC6               	goto	l3066
  1586                           	
  1587  06C5                     l1583:	
  1588  06C5  2EC6               	goto	l3066
  1589                           	line	25
  1590                           	
  1591  06C6                     l1584:	
  1592                           	line	26
  1593                           	
  1594  06C6                     l3066:	
  1595  06C6  3001               	movlw	01h
  1596                           	
  1597  06C7                     u2475:
  1598  06C7  1003               	clrc
  1599  06C8  0DF7               	rlf	(___awdiv@quotient),f
  1600  06C9  0DF8               	rlf	(___awdiv@quotient+1),f
  1601  06CA  3EFF               	addlw	-1
  1602  06CB  1D03               	skipz
  1603  06CC  2EC7               	goto	u2475
  1604                           	line	27
  1605  06CD  0871               	movf	(___awdiv@divisor+1),w
  1606  06CE  0273               	subwf	(___awdiv@dividend+1),w
  1607  06CF  1D03               	skipz
  1608  06D0  2ED3               	goto	u2485
  1609  06D1  0870               	movf	(___awdiv@divisor),w
  1610  06D2  0272               	subwf	(___awdiv@dividend),w
  1611  06D3                     u2485:
  1612  06D3  1C03               	skipc
  1613  06D4  2ED6               	goto	u2481
  1614  06D5  2ED7               	goto	u2480
  1615  06D6                     u2481:
  1616  06D6  2EDF               	goto	l3072
  1617  06D7                     u2480:
  1618                           	line	28
  1619                           	
  1620  06D7                     l3068:	
  1621  06D7  0870               	movf	(___awdiv@divisor),w
  1622  06D8  02F2               	subwf	(___awdiv@dividend),f
  1623  06D9  0871               	movf	(___awdiv@divisor+1),w
  1624  06DA  1C03               	skipc
  1625  06DB  03F3               	decf	(___awdiv@dividend+1),f
  1626  06DC  02F3               	subwf	(___awdiv@dividend+1),f
  1627                           	line	29
  1628                           	
  1629  06DD                     l3070:	
  1630  06DD  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1631  06DE  2EDF               	goto	l3072
  1632                           	line	30
  1633                           	
  1634  06DF                     l1585:	
  1635                           	line	31
  1636                           	
  1637  06DF                     l3072:	
  1638  06DF  3001               	movlw	01h
  1639                           	
  1640  06E0                     u2495:
  1641  06E0  1003               	clrc
  1642  06E1  0CF1               	rrf	(___awdiv@divisor+1),f
  1643  06E2  0CF0               	rrf	(___awdiv@divisor),f
  1644  06E3  3EFF               	addlw	-1
  1645  06E4  1D03               	skipz
  1646  06E5  2EE0               	goto	u2495
  1647                           	line	32
  1648                           	
  1649  06E6                     l3074:	
  1650  06E6  3001               	movlw	low(01h)
  1651  06E7  02F5               	subwf	(___awdiv@counter),f
  1652  06E8  1D03               	btfss	status,2
  1653  06E9  2EEB               	goto	u2501
  1654  06EA  2EEC               	goto	u2500
  1655  06EB                     u2501:
  1656  06EB  2EC6               	goto	l3066
  1657  06EC                     u2500:
  1658  06EC  2EEE               	goto	l3076
  1659                           	
  1660  06ED                     l1586:	
  1661  06ED  2EEE               	goto	l3076
  1662                           	line	33
  1663                           	
  1664  06EE                     l1580:	
  1665                           	line	34
  1666                           	
  1667  06EE                     l3076:	
  1668  06EE  0876               	movf	(___awdiv@sign),w
  1669  06EF  1D03               	skipz
  1670  06F0  2EF2               	goto	u2510
  1671  06F1  2EF8               	goto	l3080
  1672  06F2                     u2510:
  1673                           	line	35
  1674                           	
  1675  06F2                     l3078:	
  1676  06F2  09F7               	comf	(___awdiv@quotient),f
  1677  06F3  09F8               	comf	(___awdiv@quotient+1),f
  1678  06F4  0AF7               	incf	(___awdiv@quotient),f
  1679  06F5  1903               	skipnz
  1680  06F6  0AF8               	incf	(___awdiv@quotient+1),f
  1681  06F7  2EF8               	goto	l3080
  1682                           	
  1683  06F8                     l1587:	
  1684                           	line	36
  1685                           	
  1686  06F8                     l3080:	
  1687  06F8  0878               	movf	(___awdiv@quotient+1),w
  1688  06F9  01F1               	clrf	(?___awdiv+1)
  1689  06FA  07F1               	addwf	(?___awdiv+1)
  1690  06FB  0877               	movf	(___awdiv@quotient),w
  1691  06FC  01F0               	clrf	(?___awdiv)
  1692  06FD  07F0               	addwf	(?___awdiv)
  1693                           
  1694  06FE  2EFF               	goto	l1588
  1695                           	
  1696  06FF                     l3082:	
  1697                           	line	37
  1698                           	
  1699  06FF                     l1588:	
  1700  06FF  0008               	return
  1701                           	opt stack 0
  1702                           GLOBAL	__end_of___awdiv
  1703  0700                     	__end_of___awdiv:
  1704 ;; =============== function ___awdiv ends ============
  1705                           
  1706                           	signat	___awdiv,8314
  1707                           	global	___lwmod
  1708                           psect	text307,local,class=CODE,delta=2
  1709                           global __ptext307
  1710  05FA                     __ptext307:
  1711                           
  1712 ;; *************** function ___lwmod *****************
  1713 ;; Defined at:
  1714 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  divisor         2    0[COMMON] unsigned int 
  1717 ;;  dividend        2    2[COMMON] unsigned int 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  counter         1    5[COMMON] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2    0[COMMON] unsigned int 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         4       0       0       0       0
  1730 ;;      Locals:         1       0       0       0       0
  1731 ;;      Temps:          1       0       0       0       0
  1732 ;;      Totals:         6       0       0       0       0
  1733 ;;Total ram usage:        6 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_Lcd8_Decimal3
  1739 ;;		_Lcd8_Decimal2
  1740 ;;		_Lcd8_Decimal4
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           psect	text307
  1744                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1745                           	line	5
  1746                           	global	__size_of___lwmod
  1747  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1748                           	
  1749  05FA                     ___lwmod:	
  1750                           	opt	stack 6
  1751                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1752                           	line	8
  1753                           	
  1754  05FA                     l3022:	
  1755  05FA  0871               	movf	(___lwmod@divisor+1),w
  1756  05FB  0470               	iorwf	(___lwmod@divisor),w
  1757  05FC  1903               	skipnz
  1758  05FD  2DFF               	goto	u2361
  1759  05FE  2E00               	goto	u2360
  1760  05FF                     u2361:
  1761  05FF  2E36               	goto	l3040
  1762  0600                     u2360:
  1763                           	line	9
  1764                           	
  1765  0600                     l3024:	
  1766  0600  01F5               	clrf	(___lwmod@counter)
  1767  0601  1403               	bsf	status,0
  1768  0602  0DF5               	rlf	(___lwmod@counter),f
  1769                           	line	10
  1770  0603  2E10               	goto	l3030
  1771                           	
  1772  0604                     l1456:	
  1773                           	line	11
  1774                           	
  1775  0604                     l3026:	
  1776  0604  3001               	movlw	01h
  1777                           	
  1778  0605                     u2375:
  1779  0605  1003               	clrc
  1780  0606  0DF0               	rlf	(___lwmod@divisor),f
  1781  0607  0DF1               	rlf	(___lwmod@divisor+1),f
  1782  0608  3EFF               	addlw	-1
  1783  0609  1D03               	skipz
  1784  060A  2E05               	goto	u2375
  1785                           	line	12
  1786                           	
  1787  060B                     l3028:	
  1788  060B  3001               	movlw	(01h)
  1789  060C  00F4               	movwf	(??___lwmod+0)+0
  1790  060D  0874               	movf	(??___lwmod+0)+0,w
  1791  060E  07F5               	addwf	(___lwmod@counter),f
  1792  060F  2E10               	goto	l3030
  1793                           	line	13
  1794                           	
  1795  0610                     l1455:	
  1796                           	line	10
  1797                           	
  1798  0610                     l3030:	
  1799  0610  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  1800  0611  2E13               	goto	u2381
  1801  0612  2E14               	goto	u2380
  1802  0613                     u2381:
  1803  0613  2E04               	goto	l3026
  1804  0614                     u2380:
  1805  0614  2E16               	goto	l3032
  1806                           	
  1807  0615                     l1457:	
  1808  0615  2E16               	goto	l3032
  1809                           	line	14
  1810                           	
  1811  0616                     l1458:	
  1812                           	line	15
  1813                           	
  1814  0616                     l3032:	
  1815  0616  0871               	movf	(___lwmod@divisor+1),w
  1816  0617  0273               	subwf	(___lwmod@dividend+1),w
  1817  0618  1D03               	skipz
  1818  0619  2E1C               	goto	u2395
  1819  061A  0870               	movf	(___lwmod@divisor),w
  1820  061B  0272               	subwf	(___lwmod@dividend),w
  1821  061C                     u2395:
  1822  061C  1C03               	skipc
  1823  061D  2E1F               	goto	u2391
  1824  061E  2E20               	goto	u2390
  1825  061F                     u2391:
  1826  061F  2E27               	goto	l3036
  1827  0620                     u2390:
  1828                           	line	16
  1829                           	
  1830  0620                     l3034:	
  1831  0620  0870               	movf	(___lwmod@divisor),w
  1832  0621  02F2               	subwf	(___lwmod@dividend),f
  1833  0622  0871               	movf	(___lwmod@divisor+1),w
  1834  0623  1C03               	skipc
  1835  0624  03F3               	decf	(___lwmod@dividend+1),f
  1836  0625  02F3               	subwf	(___lwmod@dividend+1),f
  1837  0626  2E27               	goto	l3036
  1838                           	
  1839  0627                     l1459:	
  1840                           	line	17
  1841                           	
  1842  0627                     l3036:	
  1843  0627  3001               	movlw	01h
  1844                           	
  1845  0628                     u2405:
  1846  0628  1003               	clrc
  1847  0629  0CF1               	rrf	(___lwmod@divisor+1),f
  1848  062A  0CF0               	rrf	(___lwmod@divisor),f
  1849  062B  3EFF               	addlw	-1
  1850  062C  1D03               	skipz
  1851  062D  2E28               	goto	u2405
  1852                           	line	18
  1853                           	
  1854  062E                     l3038:	
  1855  062E  3001               	movlw	low(01h)
  1856  062F  02F5               	subwf	(___lwmod@counter),f
  1857  0630  1D03               	btfss	status,2
  1858  0631  2E33               	goto	u2411
  1859  0632  2E34               	goto	u2410
  1860  0633                     u2411:
  1861  0633  2E16               	goto	l3032
  1862  0634                     u2410:
  1863  0634  2E36               	goto	l3040
  1864                           	
  1865  0635                     l1460:	
  1866  0635  2E36               	goto	l3040
  1867                           	line	19
  1868                           	
  1869  0636                     l1454:	
  1870                           	line	20
  1871                           	
  1872  0636                     l3040:	
  1873  0636  0873               	movf	(___lwmod@dividend+1),w
  1874  0637  01F1               	clrf	(?___lwmod+1)
  1875  0638  07F1               	addwf	(?___lwmod+1)
  1876  0639  0872               	movf	(___lwmod@dividend),w
  1877  063A  01F0               	clrf	(?___lwmod)
  1878  063B  07F0               	addwf	(?___lwmod)
  1879                           
  1880  063C  2E3D               	goto	l1461
  1881                           	
  1882  063D                     l3042:	
  1883                           	line	21
  1884                           	
  1885  063D                     l1461:	
  1886  063D  0008               	return
  1887                           	opt stack 0
  1888                           GLOBAL	__end_of___lwmod
  1889  063E                     	__end_of___lwmod:
  1890 ;; =============== function ___lwmod ends ============
  1891                           
  1892                           	signat	___lwmod,8314
  1893                           	global	___lwdiv
  1894                           psect	text308,local,class=CODE,delta=2
  1895                           global __ptext308
  1896  063E                     __ptext308:
  1897                           
  1898 ;; *************** function ___lwdiv *****************
  1899 ;; Defined at:
  1900 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  divisor         2    0[COMMON] unsigned int 
  1903 ;;  dividend        2    2[COMMON] unsigned int 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  quotient        2    5[COMMON] unsigned int 
  1906 ;;  counter         1    7[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  2    0[COMMON] unsigned int 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         4       0       0       0       0
  1917 ;;      Locals:         3       0       0       0       0
  1918 ;;      Temps:          1       0       0       0       0
  1919 ;;      Totals:         8       0       0       0       0
  1920 ;;Total ram usage:        8 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_Lcd8_Decimal3
  1926 ;;		_Lcd8_Decimal2
  1927 ;;		_Lcd8_Decimal4
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           psect	text308
  1931                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1932                           	line	5
  1933                           	global	__size_of___lwdiv
  1934  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1935                           	
  1936  063E                     ___lwdiv:	
  1937                           	opt	stack 6
  1938                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1939                           	line	9
  1940                           	
  1941  063E                     l2996:	
  1942  063E  01F5               	clrf	(___lwdiv@quotient)
  1943  063F  01F6               	clrf	(___lwdiv@quotient+1)
  1944                           	line	10
  1945                           	
  1946  0640                     l2998:	
  1947  0640  0871               	movf	(___lwdiv@divisor+1),w
  1948  0641  0470               	iorwf	(___lwdiv@divisor),w
  1949  0642  1903               	skipnz
  1950  0643  2E45               	goto	u2291
  1951  0644  2E46               	goto	u2290
  1952  0645                     u2291:
  1953  0645  2E84               	goto	l3018
  1954  0646                     u2290:
  1955                           	line	11
  1956                           	
  1957  0646                     l3000:	
  1958  0646  01F7               	clrf	(___lwdiv@counter)
  1959  0647  1403               	bsf	status,0
  1960  0648  0DF7               	rlf	(___lwdiv@counter),f
  1961                           	line	12
  1962  0649  2E56               	goto	l3006
  1963                           	
  1964  064A                     l1446:	
  1965                           	line	13
  1966                           	
  1967  064A                     l3002:	
  1968  064A  3001               	movlw	01h
  1969                           	
  1970  064B                     u2305:
  1971  064B  1003               	clrc
  1972  064C  0DF0               	rlf	(___lwdiv@divisor),f
  1973  064D  0DF1               	rlf	(___lwdiv@divisor+1),f
  1974  064E  3EFF               	addlw	-1
  1975  064F  1D03               	skipz
  1976  0650  2E4B               	goto	u2305
  1977                           	line	14
  1978                           	
  1979  0651                     l3004:	
  1980  0651  3001               	movlw	(01h)
  1981  0652  00F4               	movwf	(??___lwdiv+0)+0
  1982  0653  0874               	movf	(??___lwdiv+0)+0,w
  1983  0654  07F7               	addwf	(___lwdiv@counter),f
  1984  0655  2E56               	goto	l3006
  1985                           	line	15
  1986                           	
  1987  0656                     l1445:	
  1988                           	line	12
  1989                           	
  1990  0656                     l3006:	
  1991  0656  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  1992  0657  2E59               	goto	u2311
  1993  0658  2E5A               	goto	u2310
  1994  0659                     u2311:
  1995  0659  2E4A               	goto	l3002
  1996  065A                     u2310:
  1997  065A  2E5C               	goto	l3008
  1998                           	
  1999  065B                     l1447:	
  2000  065B  2E5C               	goto	l3008
  2001                           	line	16
  2002                           	
  2003  065C                     l1448:	
  2004                           	line	17
  2005                           	
  2006  065C                     l3008:	
  2007  065C  3001               	movlw	01h
  2008                           	
  2009  065D                     u2325:
  2010  065D  1003               	clrc
  2011  065E  0DF5               	rlf	(___lwdiv@quotient),f
  2012  065F  0DF6               	rlf	(___lwdiv@quotient+1),f
  2013  0660  3EFF               	addlw	-1
  2014  0661  1D03               	skipz
  2015  0662  2E5D               	goto	u2325
  2016                           	line	18
  2017  0663  0871               	movf	(___lwdiv@divisor+1),w
  2018  0664  0273               	subwf	(___lwdiv@dividend+1),w
  2019  0665  1D03               	skipz
  2020  0666  2E69               	goto	u2335
  2021  0667  0870               	movf	(___lwdiv@divisor),w
  2022  0668  0272               	subwf	(___lwdiv@dividend),w
  2023  0669                     u2335:
  2024  0669  1C03               	skipc
  2025  066A  2E6C               	goto	u2331
  2026  066B  2E6D               	goto	u2330
  2027  066C                     u2331:
  2028  066C  2E75               	goto	l3014
  2029  066D                     u2330:
  2030                           	line	19
  2031                           	
  2032  066D                     l3010:	
  2033  066D  0870               	movf	(___lwdiv@divisor),w
  2034  066E  02F2               	subwf	(___lwdiv@dividend),f
  2035  066F  0871               	movf	(___lwdiv@divisor+1),w
  2036  0670  1C03               	skipc
  2037  0671  03F3               	decf	(___lwdiv@dividend+1),f
  2038  0672  02F3               	subwf	(___lwdiv@dividend+1),f
  2039                           	line	20
  2040                           	
  2041  0673                     l3012:	
  2042  0673  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2043  0674  2E75               	goto	l3014
  2044                           	line	21
  2045                           	
  2046  0675                     l1449:	
  2047                           	line	22
  2048                           	
  2049  0675                     l3014:	
  2050  0675  3001               	movlw	01h
  2051                           	
  2052  0676                     u2345:
  2053  0676  1003               	clrc
  2054  0677  0CF1               	rrf	(___lwdiv@divisor+1),f
  2055  0678  0CF0               	rrf	(___lwdiv@divisor),f
  2056  0679  3EFF               	addlw	-1
  2057  067A  1D03               	skipz
  2058  067B  2E76               	goto	u2345
  2059                           	line	23
  2060                           	
  2061  067C                     l3016:	
  2062  067C  3001               	movlw	low(01h)
  2063  067D  02F7               	subwf	(___lwdiv@counter),f
  2064  067E  1D03               	btfss	status,2
  2065  067F  2E81               	goto	u2351
  2066  0680  2E82               	goto	u2350
  2067  0681                     u2351:
  2068  0681  2E5C               	goto	l3008
  2069  0682                     u2350:
  2070  0682  2E84               	goto	l3018
  2071                           	
  2072  0683                     l1450:	
  2073  0683  2E84               	goto	l3018
  2074                           	line	24
  2075                           	
  2076  0684                     l1444:	
  2077                           	line	25
  2078                           	
  2079  0684                     l3018:	
  2080  0684  0876               	movf	(___lwdiv@quotient+1),w
  2081  0685  01F1               	clrf	(?___lwdiv+1)
  2082  0686  07F1               	addwf	(?___lwdiv+1)
  2083  0687  0875               	movf	(___lwdiv@quotient),w
  2084  0688  01F0               	clrf	(?___lwdiv)
  2085  0689  07F0               	addwf	(?___lwdiv)
  2086                           
  2087  068A  2E8B               	goto	l1451
  2088                           	
  2089  068B                     l3020:	
  2090                           	line	26
  2091                           	
  2092  068B                     l1451:	
  2093  068B  0008               	return
  2094                           	opt stack 0
  2095                           GLOBAL	__end_of___lwdiv
  2096  068C                     	__end_of___lwdiv:
  2097 ;; =============== function ___lwdiv ends ============
  2098                           
  2099                           	signat	___lwdiv,8314
  2100                           	global	_tx
  2101                           psect	text309,local,class=CODE,delta=2
  2102                           global __ptext309
  2103  051C                     __ptext309:
  2104                           
  2105 ;; *************** function _tx *****************
  2106 ;; Defined at:
  2107 ;;		line 41 in file "D:\pic controller,PIC16F877A\New folder\main.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  a               1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  a               1    0[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0
  2124 ;;      Totals:         1       0       0       0       0
  2125 ;;Total ram usage:        1 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;;		_txstr
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           psect	text309
  2135                           	file	"D:\pic controller,PIC16F877A\New folder\main.c"
  2136                           	line	41
  2137                           	global	__size_of_tx
  2138  000C                     	__size_of_tx	equ	__end_of_tx-_tx
  2139                           	
  2140  051C                     _tx:	
  2141                           	opt	stack 7
  2142                           ; Regs used in _tx: [wreg]
  2143                           ;tx@a stored from wreg
  2144  051C  00F0               	movwf	(tx@a)
  2145                           	line	42
  2146                           	
  2147  051D                     l2024:	
  2148                           ;main.c: 42: TXREG=a;
  2149  051D  0870               	movf	(tx@a),w
  2150  051E  1283               	bcf	status, 5	;RP0=0, select bank0
  2151  051F  1303               	bcf	status, 6	;RP1=0, select bank0
  2152  0520  0099               	movwf	(25)	;volatile
  2153                           	line	43
  2154                           ;main.c: 43: while(!TXIF);
  2155  0521  2D22               	goto	l740
  2156                           	
  2157  0522                     l741:	
  2158                           	
  2159  0522                     l740:	
  2160  0522  1E0C               	btfss	(100/8),(100)&7
  2161  0523  2D25               	goto	u41
  2162  0524  2D26               	goto	u40
  2163  0525                     u41:
  2164  0525  2D22               	goto	l740
  2165  0526                     u40:
  2166                           	
  2167  0526                     l742:	
  2168                           	line	44
  2169                           ;main.c: 44: TXIF = 0;
  2170  0526  120C               	bcf	(100/8),(100)&7
  2171                           	line	45
  2172                           	
  2173  0527                     l743:	
  2174  0527  0008               	return
  2175                           	opt stack 0
  2176                           GLOBAL	__end_of_tx
  2177  0528                     	__end_of_tx:
  2178 ;; =============== function _tx ends ============
  2179                           
  2180                           	signat	_tx,4216
  2181                           	global	_rx
  2182                           psect	text310,local,class=CODE,delta=2
  2183                           global __ptext310
  2184  0511                     __ptext310:
  2185                           
  2186 ;; *************** function _rx *****************
  2187 ;; Defined at:
  2188 ;;		line 48 in file "D:\pic controller,PIC16F877A\New folder\main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      unsigned char 
  2195 ;; Registers used:
  2196 ;;		wreg
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0
  2205 ;;      Totals:         0       0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           psect	text310
  2215                           	file	"D:\pic controller,PIC16F877A\New folder\main.c"
  2216                           	line	48
  2217                           	global	__size_of_rx
  2218  000B                     	__size_of_rx	equ	__end_of_rx-_rx
  2219                           	
  2220  0511                     _rx:	
  2221                           	opt	stack 7
  2222                           ; Regs used in _rx: [wreg]
  2223                           	line	49
  2224                           	
  2225  0511                     l2018:	
  2226                           ;main.c: 49: while(!RCIF);
  2227  0511  2D12               	goto	l746
  2228                           	
  2229  0512                     l747:	
  2230                           	
  2231  0512                     l746:	
  2232  0512  1283               	bcf	status, 5	;RP0=0, select bank0
  2233  0513  1303               	bcf	status, 6	;RP1=0, select bank0
  2234  0514  1E8C               	btfss	(101/8),(101)&7
  2235  0515  2D17               	goto	u31
  2236  0516  2D18               	goto	u30
  2237  0517                     u31:
  2238  0517  2D12               	goto	l746
  2239  0518                     u30:
  2240                           	
  2241  0518                     l748:	
  2242                           	line	50
  2243                           ;main.c: 50: RCIF=0;
  2244  0518  128C               	bcf	(101/8),(101)&7
  2245                           	line	51
  2246                           	
  2247  0519                     l2020:	
  2248                           ;main.c: 51: return RCREG;
  2249  0519  081A               	movf	(26),w	;volatile
  2250  051A  2D1B               	goto	l749
  2251                           	
  2252  051B                     l2022:	
  2253                           	line	52
  2254                           	
  2255  051B                     l749:	
  2256  051B  0008               	return
  2257                           	opt stack 0
  2258                           GLOBAL	__end_of_rx
  2259  051C                     	__end_of_rx:
  2260 ;; =============== function _rx ends ============
  2261                           
  2262                           	signat	_rx,89
  2263                           	global	_ser_int
  2264                           psect	text311,local,class=CODE,delta=2
  2265                           global __ptext311
  2266  0528                     __ptext311:
  2267                           
  2268 ;; *************** function _ser_int *****************
  2269 ;; Defined at:
  2270 ;;		line 33 in file "D:\pic controller,PIC16F877A\New folder\main.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0
  2287 ;;      Totals:         0       0       0       0       0
  2288 ;;Total ram usage:        0 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           psect	text311
  2297                           	file	"D:\pic controller,PIC16F877A\New folder\main.c"
  2298                           	line	33
  2299                           	global	__size_of_ser_int
  2300  0011                     	__size_of_ser_int	equ	__end_of_ser_int-_ser_int
  2301                           	
  2302  0528                     _ser_int:	
  2303                           	opt	stack 7
  2304                           ; Regs used in _ser_int: [wreg]
  2305                           	line	34
  2306                           	
  2307  0528                     l2014:	
  2308                           ;main.c: 34: TXSTA=0x20;
  2309  0528  3020               	movlw	(020h)
  2310  0529  1683               	bsf	status, 5	;RP0=1, select bank1
  2311  052A  1303               	bcf	status, 6	;RP1=0, select bank1
  2312  052B  0098               	movwf	(152)^080h	;volatile
  2313                           	line	35
  2314                           ;main.c: 35: RCSTA=0b10010000;
  2315  052C  3090               	movlw	(090h)
  2316  052D  1283               	bcf	status, 5	;RP0=0, select bank0
  2317  052E  1303               	bcf	status, 6	;RP1=0, select bank0
  2318  052F  0098               	movwf	(24)	;volatile
  2319                           	line	36
  2320                           ;main.c: 36: SPBRG=17;
  2321  0530  3011               	movlw	(011h)
  2322  0531  1683               	bsf	status, 5	;RP0=1, select bank1
  2323  0532  1303               	bcf	status, 6	;RP1=0, select bank1
  2324  0533  0099               	movwf	(153)^080h	;volatile
  2325                           	line	37
  2326                           	
  2327  0534                     l2016:	
  2328                           ;main.c: 37: TXIF=RCIF=0;
  2329  0534  1283               	bcf	status, 5	;RP0=0, select bank0
  2330  0535  1303               	bcf	status, 6	;RP1=0, select bank0
  2331  0536  128C               	bcf	(101/8),(101)&7
  2332  0537  120C               	bcf	(100/8),(100)&7
  2333                           	line	38
  2334                           	
  2335  0538                     l737:	
  2336  0538  0008               	return
  2337                           	opt stack 0
  2338                           GLOBAL	__end_of_ser_int
  2339  0539                     	__end_of_ser_int:
  2340 ;; =============== function _ser_int ends ============
  2341                           
  2342                           	signat	_ser_int,88
  2343                           	global	_Delay
  2344                           psect	text312,local,class=CODE,delta=2
  2345                           global __ptext312
  2346  0539                     __ptext312:
  2347                           
  2348 ;; *************** function _Delay *****************
  2349 ;; Defined at:
  2350 ;;		line 106 in file "D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  del             2    0[COMMON] unsigned int 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         2       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0
  2367 ;;      Totals:         2       0       0       0       0
  2368 ;;Total ram usage:        2 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_Lcd8_Command
  2374 ;;		_Lcd8_Write
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           psect	text312
  2378                           	file	"D:\pic controller,PIC16F877A\New folder\pic_lcd8.h"
  2379                           	line	106
  2380                           	global	__size_of_Delay
  2381  0014                     	__size_of_Delay	equ	__end_of_Delay-_Delay
  2382                           	
  2383  0539                     _Delay:	
  2384                           	opt	stack 5
  2385                           ; Regs used in _Delay: [wreg]
  2386                           	line	107
  2387                           	
  2388  0539                     l2980:	
  2389                           ;pic_lcd8.h: 107: while(del--);
  2390  0539  2D3B               	goto	l2982
  2391                           	
  2392  053A                     l726:	
  2393  053A  2D3B               	goto	l2982
  2394                           	
  2395  053B                     l725:	
  2396                           	
  2397  053B                     l2982:	
  2398  053B  3001               	movlw	low(01h)
  2399  053C  02F0               	subwf	(Delay@del),f
  2400  053D  3000               	movlw	high(01h)
  2401  053E  1C03               	skipc
  2402  053F  03F1               	decf	(Delay@del+1),f
  2403  0540  02F1               	subwf	(Delay@del+1),f
  2404  0541  30FF               	movlw	high(0FFFFh)
  2405  0542  0671               	xorwf	((Delay@del+1)),w
  2406  0543  1D03               	skipz
  2407  0544  2D47               	goto	u2275
  2408  0545  30FF               	movlw	low(0FFFFh)
  2409  0546  0670               	xorwf	((Delay@del)),w
  2410  0547                     u2275:
  2411                           
  2412  0547  1D03               	skipz
  2413  0548  2D4A               	goto	u2271
  2414  0549  2D4B               	goto	u2270
  2415  054A                     u2271:
  2416  054A  2D3B               	goto	l2982
  2417  054B                     u2270:
  2418  054B  2D4C               	goto	l728
  2419                           	
  2420  054C                     l727:	
  2421                           	line	108
  2422                           	
  2423  054C                     l728:	
  2424  054C  0008               	return
  2425                           	opt stack 0
  2426                           GLOBAL	__end_of_Delay
  2427  054D                     	__end_of_Delay:
  2428 ;; =============== function _Delay ends ============
  2429                           
  2430                           	signat	_Delay,4216
  2431                           	global	fptotal
  2432  0002                     fptotal equ 2
  2433                           	file ""
  2434                           	line	#
  2435                           psect	functab,class=CODE,delta=2,reloc=256
  2436                           global __pfunctab
  2437  0700                     __pfunctab:
  2438                           	global	fptable
  2439  0700                     fptable:
  2440  0700  00FF               	movwf (btemp+1)&07Fh
  2441  0701  3007               	movlw high(fptable)
  2442  0702  008A               	movwf pclath
  2443  0703  087F               	movf (btemp+1)&07Fh,w
  2444  0704  0782               	addwf pc
  2445                           	global	fpbase
  2446  0705                     fpbase:
  2447  0705  2F05               	goto fpbase	; Call via a null pointer and you will get stuck here.
  2448                           	file ""
  2449                           	line	#
  2450  0706                     fp__rx:
  2451  0706                     entry__rx:
  2452                           	global	entry__rx
  2453  0706  120A  118A  2D11   	ljmp	_rx
  2454                           	global	btemp
  2455  007E                     	btemp set 07Eh
  2456                           
  2457                           	DABS	1,126,2	;btemp
  2458                           	global	wtemp0
  2459  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun Mar 03 14:18:21 2024

                     pc 0002                      _RD 0C60                      u30 0518                      u31 0517  
                    u40 0526                      u41 0525                      _WR 0C61            ___awdiv@sign 0076  
                    _rx 0511                      _tx 051C                      fsr 0004                     l701 0565  
                   l704 0582                     ?_rx 0070                     l707 05C6                     l731 05E1  
                   l740 0522                     l732 05F6                     ?_tx 0070                     l725 053B  
                   l741 0522                     l733 05F7                     l726 053A                     l742 0526  
                   l734 05F7                     l727 054C                     l743 0527                     l719 0791  
                   l728 054C                     l752 0596                     l737 0538                     l753 0585  
                   l746 0512                     l754 05A3                     l747 0512                     l755 05A3  
                   l748 0518                     l749 051B                     _GIE 005F                     fsr0 0004  
          ___awmod@sign 0076                     tx@a 0070                    ??_rx 0070                    ??_tx 0070  
                  l2020 0519                    l2014 0528                    l2022 051B                    l2016 0534  
                  l2024 051D                    l3000 0646                    l2018 0511                    l3010 066D  
                  l3002 064A                    l3020 068B                    l3012 0673                    l3004 0651  
                  l3100 07C0                    l3014 0675                    l3006 0656                    l3030 0610  
                  l3022 05FA                    l3102 07C6                    l3110 07E6                    l3016 067C  
                  l3008 065C                    l3032 0616                    l3024 0600                    l3040 0636  
                  l3112 07EA                    l3104 07D0                    l3120 056B                    l1450 0683  
                  l3018 0684                    l3042 063D                    l3034 0620                    l3026 0604  
                  l3050 069E                    l3114 07F0                    l3106 07D7                    l3122 056C  
                  l3130 054D                    l1451 068B                    l1444 0684                    l1460 0635  
                  l3036 0627                    l3028 060B                    l3060 06B4                    l3052 06A3  
                  l3044 068C                    l3116 07F7                    l3108 07DE                    l3124 056D  
                  l3140 05B1                    l3132 05A5                    l1445 0656                    l1461 063D  
                  l1446 064A                    l1454 0636                    l3038 062E                    l3070 06DD  
                  l3062 06BB                    l3054 06A8                    l3046 0691                    l3126 0576  
                  l3118 0567                    l3142 05BA                    l3134 05AB                    l3150 05CA  
                  l1447 065B                    l1455 0610                    l1448 065C                    l1456 0604  
                  l3080 06F8                    l3072 06DF                    l3064 06C0                    l3056 06AA  
                  l3048 069A                    l3128 0579                    l3144 05BD                    l3136 05AF  
                  l3160 05DA                    l3152 05CE                    l1449 0675                    l1457 0615  
                  l1458 0616                    l3082 06FF                    l3074 06E6                    l3066 06C6  
                  l3058 06B0                    l1650 07B4                    l3090 07A4                    l3138 05B0  
                  l3146 070C                    l3162 05E1                    l3154 05CF                    l1459 0627  
                  l1651 07C5                    l1580 06EE                    l3068 06D7                    l3076 06EE  
                  l1652 07C6                    l3092 07AA                    l3084 0792                    l3164 05EB  
                  l3156 05D0                    l3148 05C7                    l1581 06C0                    l1653 07D7  
                  l3078 06F2                    l1582 06B4                    l1654 07E5                    l3094 07B0  
                  l1646 07A0                    l3086 0797                    l3158 05D5                    l1583 06C5  
                  l1655 07F0                    l1647 07AA                    l1584 06C6                    l1656 07F7  
                  l1648 07E6                    l3096 07B4                    l3088 07A0                    l1585 06DF  
                  l1649 07C0                    l1586 06ED                    l1578 069A                    l3098 07BB  
                  l1587 06F8                    l1579 06A8                    l1588 06FF                    l2910 0585  
                  l2912 0591                    l2914 0596                    l2908 0584                    l2980 0539  
                  l2982 053B                    l2996 063E                    l2998 0640              _Lcd8_Write 05A4  
                  STR_1 0009                    u2310 065A                    u2311 0659                    u2305 064B  
                  u2330 066D                    u2410 0634                    u2331 066C                    u2411 0633  
                  u2500 06EC                    u2420 0691                    u2260 05A2                    u2325 065D  
                  u2405 0628                    u2501 06EB                    u2421 0690                    u2261 05A1  
                  u2270 054B                    u2350 0682                    u2510 06F2                    u2430 069E  
                  u2271 054A                    u2351 0681                    u2335 0669                    u2431 069D  
                  u2360 0600                    u2440 06B0                    u2600 07EA                    u2520 0797  
                  u2345 0676                    u2361 05FF                    u2441 06AF                    u2521 0796  
                  u2290 0646                    u2530 07A4                    u2275 0547                    u2291 0645  
                  u2531 07A3                    u2380 0614                    u2460 06C4                    u2540 07B0  
                  u2381 0613                    u2461 06C3                    u2541 07AF                    u2390 0620  
                  u2391 061F                    u2375 0605                    u2455 06B5                    u2480 06D7  
                  u2560 07C4                    u2481 06D6                    u2561 07C3                    u2570 07D0  
                  u2395 061C                    u2475 06C7                    u2571 07CF                    u2555 07B5  
                  u2485 06D3                    u2590 07E4                    u2495 06E0                    u2591 07E3  
                  u2575 07CC                    u2585 07D8                    _RCIF 0065                    _WREN 0C62  
                  _TXIF 0064                    _main 05C7                    btemp 007E                    start 0000  
                 ?_main 0070         __end_of___awdiv 0700                   _EEADR 010D         __end_of___awmod 07F8  
                 _CARRY 0018         ___awdiv@divisor 0070         __end_of___lwdiv 068C         __end_of___lwmod 063E  
       ___awdiv@counter 0075                   _RCREG 001A                   _RCSTA 0018                   _SPBRG 0099  
                 _PORTD 0008                   _TRISB 0086                   _TRISC 0087                   _TRISD 0088  
                 _TXREG 0019                   _TXSTA 0098                   _Delay 0539   __size_of_Lcd8_Command 001D  
                 fp__rx 0706                   fpbase 0705                   _txstr 0583         __end_of_ser_int 0539  
                 pclath 000A                   status 0003                   wtemp0 007E      Lcd8_Decimal3@Lcd_h 0020  
    Lcd8_Decimal3@Lcd_o 0024      Lcd8_Decimal3@Lcd_t 0022            __end_of_main 05FA      __size_of_Lcd8_Init 0019  
          _Lcd8_Command 0566                  ??_main 007C                  ?_Delay 0070                  _EEDATA 010C  
                _EECON1 018C                  _EECON2 018D        ___awdiv@dividend 0072             ?_Lcd8_Write 0073  
                ?_txstr 0070                  _TRISC6 043E                  _TRISC7 043F  __size_of_Lcd8_Decimal3 0089  
                _Lcd_en 003D                  _Lcd_rs 003C               ??___awdiv 0074               ??___awmod 0074  
             ??___lwdiv 0074               ??___lwmod 0074        ___awdiv@quotient 0077         ___awmod@divisor 0070  
       ___awmod@counter 0075                  fptable 0700                  fptotal 0002               ??_ser_int 0070  
     __end_of_Lcd8_Init 0566     Lcd8_Decimal3@Lcd_hr 0026                  txstr@s 0072           __end_of_Delay 054D  
        __pcstackCOMMON 0070     __size_of_Lcd8_Write 0023           __end_of_txstr 05A4              __end_of_rx 051C  
            __end_of_tx 0528           _Lcd8_Decimal3 0709                 ??_Delay 0072                 ??_txstr 0071  
            __pmaintext 05C7          ?_Lcd8_Decimal3 0079                 ___awdiv 068C                 ___awmod 0792  
               ___lwdiv 063E                 ___lwmod 05FA        ___awmod@dividend 0072                 _ser_int 0528  
          ??_Lcd8_Write 0074    end_of_initialization 07F8         ??_Lcd8_Decimal3 007A            Lcd8_Write@lr 0073  
    __end_of_Lcd8_Write 05C7         Lcd8_Command@com 0072               _Lcd8_Init 054D     start_initialization 07F8  
            ?_Lcd8_Init 0070           __pcstackBANK0 0020        ___lwdiv@dividend 0072               __pfunctab 0700  
              ?___awdiv 0070               __ptext300 0709               __ptext301 05A4               __ptext310 0511  
             __ptext302 054D               __ptext311 0528               __ptext303 0583               __ptext312 0539  
             __ptext304 0566               __ptext305 0792               __ptext306 068C               __ptext307 05FA  
             __ptext308 063E               __ptext309 051C                ?___awmod 0070               __ptext299 0000  
              ?___lwdiv 0070                ?___lwmod 0070           ?_Lcd8_Command 0070               __pstrings 0003  
        __size_of_Delay 0014                ?_ser_int 0070        ___lwdiv@quotient 0075          __size_of_txstr 0021  
           __size_of_rx 000B             __size_of_tx 000C             ??_Lcd8_Init 0073                Delay@del 0070  
        ??_Lcd8_Command 0072             __stringbase 0008        Lcd8_Decimal3@com 0028        Lcd8_Decimal3@val 0079  
      __size_of___awdiv 0074        __size_of___awmod 0066        __size_of___lwdiv 004E        __size_of___lwmod 0044  
 __end_of_Lcd8_Decimal3 0792         ___lwdiv@divisor 0070         ___lwdiv@counter 0077        __size_of_ser_int 0011  
         __size_of_main 0033                entry__rx 0706    __end_of_Lcd8_Command 0583        ___lwmod@dividend 0072  
             stringcode 0003         ___lwmod@divisor 0070         ___lwmod@counter 0075           Lcd8_Write@com 0074  
              stringdir 0003                stringtab 0003  
