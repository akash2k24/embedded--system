

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Dec 12 21:20:52 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0012                     _T2CON	set	18
   167  0008                     _PORTD	set	8
   168  0061                     _TMR2IF	set	97
   169  0038                     _RC0	set	56
   170  0088                     _TRISD	set	136
   171  0438                     _TRISC0	set	1080
   172                           
   173                           	psect	cinit
   174  07FC                     start_initialization:	
   175                           ; #config settings
   176                           
   177  07FC                     __initialization:
   178  07FC                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  07FC                     __end_of__initialization:
   182  07FC  0183               	clrf	3
   183  07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:
   187  0070                     ?_timer2delay:
   188  0070                     ??_timer2delay:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ?_seq:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ?_main:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     timer2delay@i:	
   198                           ; 1 bytes @ 0x0
   199                           
   200                           
   201                           ; 2 bytes @ 0x0
   202  0070                     	ds	2
   203  0072                     ??_seq:
   204                           
   205                           ; 1 bytes @ 0x2
   206  0072                     	ds	1
   207  0073                     seq@get:
   208                           
   209                           ; 1 bytes @ 0x3
   210  0073                     	ds	1
   211  0074                     seq@j:
   212                           
   213                           ; 2 bytes @ 0x4
   214  0074                     	ds	2
   215  0076                     seq@j_35:
   216                           
   217                           ; 2 bytes @ 0x6
   218  0076                     	ds	2
   219  0078                     ??_main:
   220                           
   221                           	psect	maintext
   222  0783                     __pmaintext:	
   223                           ; 1 bytes @ 0x8
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 41 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : B00/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   243 ;;      Params:         0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called:    2
   249 ;; This function calls:
   250 ;;		_seq
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _main
   258  0783                     _main:
   259  0783                     l671:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   262                           
   263                           
   264                           ;main.c: 43: TRISC0 = 1;
   265  0783  1683               	bsf	3,5	;RP0=1, select bank1
   266  0784  1303               	bcf	3,6	;RP1=0, select bank1
   267  0785  1407               	bsf	7,0	;volatile
   268  0786                     l673:
   269                           
   270                           ;main.c: 44: TRISD = 0x00;
   271  0786  0188               	clrf	8	;volatile
   272                           
   273                           ;main.c: 45: PORTD=0x00;
   274  0787  1283               	bcf	3,5	;RP0=0, select bank0
   275  0788  1303               	bcf	3,6	;RP1=0, select bank0
   276  0789  0188               	clrf	8	;volatile
   277  078A                     l675:
   278                           
   279                           ;main.c: 47: {;main.c: 48: if (RC0==0)
   280  078A  1807               	btfsc	7,0	;volatile
   281  078B  2F8D               	goto	u71
   282  078C  2F8E               	goto	u70
   283  078D                     u71:
   284  078D  2F8A               	goto	l675
   285  078E                     u70:
   286  078E                     l677:
   287                           
   288                           ;main.c: 49: {;main.c: 51: seq(1);
   289  078E  3001               	movlw	1
   290  078F  120A  118A  27B3  120A  118A  	fcall	_seq
   291                           
   292                           ;main.c: 52: seq(3);
   293  0794  3003               	movlw	3
   294  0795  120A  118A  27B3  120A  118A  	fcall	_seq
   295                           
   296                           ;main.c: 53: seq(7);
   297  079A  3007               	movlw	7
   298  079B  120A  118A  27B3  120A  118A  	fcall	_seq
   299                           
   300                           ;main.c: 54: seq(15);
   301  07A0  300F               	movlw	15
   302  07A1  120A  118A  27B3  120A  118A  	fcall	_seq
   303                           
   304                           ;main.c: 56: while(RC0==1)
   305  07A6  2FA9               	goto	l681
   306  07A7                     l679:
   307                           
   308                           ;main.c: 57: {;main.c: 58: PORTD=0xFF;
   309  07A7  30FF               	movlw	255
   310  07A8  0088               	movwf	8	;volatile
   311  07A9                     l681:
   312  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   313  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   314  07AB  1807               	btfsc	7,0	;volatile
   315  07AC  2FAE               	goto	u81
   316  07AD  2FAF               	goto	u80
   317  07AE                     u81:
   318  07AE  2FA7               	goto	l679
   319  07AF                     u80:
   320  07AF  2F8A               	goto	l675
   321  07B0  120A  118A  2800   	ljmp	start
   322  07B3                     __end_of_main:
   323                           
   324                           	psect	text1
   325  07B3                     __ptext1:	
   326 ;; *************** function _seq *****************
   327 ;; Defined at:
   328 ;;		line 25 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  get             1    wreg     unsigned char 
   331 ;; Auto vars:     Size  Location     Type
   332 ;;  get             1    3[COMMON] unsigned char 
   333 ;;  j               2    6[COMMON] int 
   334 ;;  j               2    4[COMMON] int 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         5       0       0       0       0
   346 ;;      Temps:          1       0       0       0       0
   347 ;;      Totals:         6       0       0       0       0
   348 ;;Total ram usage:        6 bytes
   349 ;; Hardware stack levels used:    1
   350 ;; Hardware stack levels required when called:    1
   351 ;; This function calls:
   352 ;;		_timer2delay
   353 ;; This function is called by:
   354 ;;		_main
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _seq
   360  07B3                     _seq:
   361                           
   362                           ;incstack = 0
   363                           ; Regs used in _seq: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   364                           ;seq@get stored from wreg
   365  07B3  00F3               	movwf	seq@get
   366  07B4                     l643:
   367                           
   368                           ;main.c: 27: {;main.c: 28: for (int j=0; j<=7; j++)
   369  07B4  01F4               	clrf	seq@j
   370  07B5  01F5               	clrf	seq@j+1
   371  07B6                     l649:
   372                           
   373                           ;main.c: 29: {;main.c: 30: PORTD = get << j;
   374  07B6  0873               	movf	seq@get,w
   375  07B7  00F2               	movwf	??_seq
   376  07B8  0A74               	incf	seq@j,w
   377  07B9  2FBC               	goto	u34
   378  07BA                     u35:
   379  07BA  1003               	clrc
   380  07BB  0DF2               	rlf	??_seq,f
   381  07BC                     u34:
   382  07BC  3EFF               	addlw	-1
   383  07BD  1D03               	skipz
   384  07BE  2FBA               	goto	u35
   385  07BF  0872               	movf	??_seq,w
   386  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   387  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   388  07C2  0088               	movwf	8	;volatile
   389  07C3                     l651:
   390                           
   391                           ;main.c: 31: timer2delay();
   392  07C3  120A  118A  2769  120A  118A  	fcall	_timer2delay
   393  07C8                     l653:
   394  07C8  3001               	movlw	1
   395  07C9  07F4               	addwf	seq@j,f
   396  07CA  1803               	skipnc
   397  07CB  0AF5               	incf	seq@j+1,f
   398  07CC  3000               	movlw	0
   399  07CD  07F5               	addwf	seq@j+1,f
   400  07CE                     l655:
   401  07CE  0875               	movf	seq@j+1,w
   402  07CF  3A80               	xorlw	128
   403  07D0  00FF               	movwf	btemp+1
   404  07D1  3080               	movlw	128
   405  07D2  027F               	subwf	btemp+1,w
   406  07D3  1D03               	skipz
   407  07D4  2FD7               	goto	u45
   408  07D5  3008               	movlw	8
   409  07D6  0274               	subwf	seq@j,w
   410  07D7                     u45:
   411  07D7  1C03               	skipc
   412  07D8  2FDA               	goto	u41
   413  07D9  2FDB               	goto	u40
   414  07DA                     u41:
   415  07DA  2FB6               	goto	l649
   416  07DB                     u40:
   417  07DB                     l657:
   418                           
   419                           ;main.c: 32: };main.c: 33: for (int j=7; j>=0; j--)
   420  07DB  3007               	movlw	7
   421  07DC  00F6               	movwf	seq@j_35
   422  07DD  3000               	movlw	0
   423  07DE  00F7               	movwf	seq@j_35+1
   424  07DF                     l663:
   425                           
   426                           ;main.c: 34: {;main.c: 35: PORTD = get << j;
   427  07DF  0873               	movf	seq@get,w
   428  07E0  00F2               	movwf	??_seq
   429  07E1  0A76               	incf	seq@j_35,w
   430  07E2  2FE5               	goto	u54
   431  07E3                     u55:
   432  07E3  1003               	clrc
   433  07E4  0DF2               	rlf	??_seq,f
   434  07E5                     u54:
   435  07E5  3EFF               	addlw	-1
   436  07E6  1D03               	skipz
   437  07E7  2FE3               	goto	u55
   438  07E8  0872               	movf	??_seq,w
   439  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   440  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   441  07EB  0088               	movwf	8	;volatile
   442  07EC                     l665:
   443                           
   444                           ;main.c: 36: timer2delay();
   445  07EC  120A  118A  2769  120A  118A  	fcall	_timer2delay
   446  07F1                     l667:
   447  07F1  30FF               	movlw	255
   448  07F2  07F6               	addwf	seq@j_35,f
   449  07F3  1803               	skipnc
   450  07F4  0AF7               	incf	seq@j_35+1,f
   451  07F5  30FF               	movlw	255
   452  07F6  07F7               	addwf	seq@j_35+1,f
   453  07F7                     l669:
   454  07F7  1FF7               	btfss	seq@j_35+1,7
   455  07F8  2FFA               	goto	u61
   456  07F9  2FFB               	goto	u60
   457  07FA                     u61:
   458  07FA  2FDF               	goto	l663
   459  07FB                     u60:
   460  07FB                     l21:
   461  07FB  0008               	return
   462  07FC                     __end_of_seq:
   463                           
   464                           	psect	text2
   465  0769                     __ptext2:	
   466 ;; *************** function _timer2delay *****************
   467 ;; Defined at:
   468 ;;		line 64 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  i               2    0[COMMON] unsigned int 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         2       0       0       0       0
   484 ;;      Temps:          0       0       0       0       0
   485 ;;      Totals:         2       0       0       0       0
   486 ;;Total ram usage:        2 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_seq
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _timer2delay
   497  0769                     _timer2delay:
   498  0769                     l633:	
   499                           ;incstack = 0
   500                           ; Regs used in _timer2delay: [wreg+status,2]
   501                           
   502                           
   503                           ;main.c: 66: unsigned int i;;main.c: 67: T2CON|=(1<<2);
   504  0769  1283               	bcf	3,5	;RP0=0, select bank0
   505  076A  1303               	bcf	3,6	;RP1=0, select bank0
   506  076B  1512               	bsf	18,2	;volatile
   507  076C                     l635:
   508                           
   509                           ;main.c: 68: for(i=0;i<2000;i++)
   510  076C  01F0               	clrf	timer2delay@i
   511  076D  01F1               	clrf	timer2delay@i+1
   512  076E                     l38:
   513  076E  1C8C               	btfss	12,1	;volatile
   514  076F  2F71               	goto	u11
   515  0770  2F72               	goto	u10
   516  0771                     u11:
   517  0771  2F6E               	goto	l38
   518  0772                     u10:
   519  0772                     l40:
   520                           
   521                           ;main.c: 71: TMR2IF=0;
   522  0772  108C               	bcf	12,1	;volatile
   523  0773                     l641:
   524  0773  3001               	movlw	1
   525  0774  07F0               	addwf	timer2delay@i,f
   526  0775  1803               	skipnc
   527  0776  0AF1               	incf	timer2delay@i+1,f
   528  0777  3000               	movlw	0
   529  0778  07F1               	addwf	timer2delay@i+1,f
   530  0779  3007               	movlw	7
   531  077A  0271               	subwf	timer2delay@i+1,w
   532  077B  30D0               	movlw	208
   533  077C  1903               	skipnz
   534  077D  0270               	subwf	timer2delay@i,w
   535  077E  1C03               	skipc
   536  077F  2F81               	goto	u21
   537  0780  2F82               	goto	u20
   538  0781                     u21:
   539  0781  2F6E               	goto	l38
   540  0782                     u20:
   541  0782                     l41:
   542  0782  0008               	return
   543  0783                     __end_of_timer2delay:
   544  007E                     btemp	set	126	;btemp
   545  007E                     wtemp0	set	126
   546                           
   547                           	psect	config
   548                           
   549                           ;Config register CONFIG @ 0x2007
   550                           ;	Oscillator Selection bits
   551                           ;	FOSC = HS, HS oscillator
   552                           ;	Watchdog Timer Enable bit
   553                           ;	WDTE = OFF, WDT disabled
   554                           ;	Power-up Timer Enable bit
   555                           ;	PWRTE = OFF, PWRT disabled
   556                           ;	Brown-out Reset Enable bit
   557                           ;	BOREN = ON, BOR enabled
   558                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   559                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   560                           ;	Data EEPROM Memory Code Protection bit
   561                           ;	CPD = OFF, Data EEPROM code protection off
   562                           ;	Flash Program Memory Write Enable bits
   563                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   564                           ;	In-Circuit Debugger Mode bit
   565                           ;	DEBUG = 0x1, unprogrammed default
   566                           ;	Flash Program Memory Code Protection bit
   567                           ;	CP = OFF, Code protection off
   568  2007                     	org	8199
   569  2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_seq
    _seq->_timer2delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                                _seq
 ---------------------------------------------------------------------------------
 (1) _seq                                                  6     6      0     150
                                              2 COMMON     6     6      0
                        _timer2delay
 ---------------------------------------------------------------------------------
 (2) _timer2delay                                          2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _seq
     _timer2delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Dec 12 21:20:52 2020

                     l21 07FB                       l40 0772                       l41 0782  
                     l38 076E                       u10 0772                       u11 0771  
                     u20 0782                       u21 0781                       u40 07DB  
                     u41 07DA                       u34 07BC                       u35 07BA  
                     u60 07FB                       u61 07FA                       u45 07D7  
                     u54 07E5                       u70 078E                       u55 07E3  
                     u71 078D                       u80 07AF                       u81 07AE  
                    l641 0773                      l633 0769                      l635 076C  
                    l651 07C3                      l643 07B4                      l653 07C8  
                    l663 07DF                      l655 07CE                      l671 0783  
                    l665 07EC                      l657 07DB                      l649 07B6  
                    l681 07A9                      l673 0786                      l667 07F1  
                    l675 078A                      l669 07F7                      l677 078E  
                    l679 07A7                      _RC0 0038                      _seq 07B3  
                   ?_seq 0070                     _main 0783                     btemp 007E  
                   seq@j 0074                     start 0000                    ??_seq 0072  
                  ?_main 0070                    _T2CON 0012                    _PORTD 0008  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07B3                   ??_main 0078  
                 _TMR2IF 0061                   _TRISC0 0438             ?_timer2delay 0070  
                 seq@get 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0783                  __ptext1 07B3                  __ptext2 0769  
   __size_of_timer2delay 001A             __size_of_seq 0049     end_of_initialization 07FC  
                seq@j_35 0076      start_initialization 07FC              __end_of_seq 07FC  
              ___latbits 0002            ??_timer2delay 0070      __end_of_timer2delay 0783  
          __size_of_main 0030             timer2delay@i 0070              _timer2delay 0769  
