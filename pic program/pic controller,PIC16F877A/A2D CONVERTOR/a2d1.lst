

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Sat Jan 06 09:54:46 2024

HI-TECH Software Omniscient Code Generator build 3884
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 3884"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           global __tempreg
    39  0000                     __tempreg	set	32
    40                           global __Lcommon, __Hcommon
    41  0000                     __Lcommon set 0x71
    42  0000                     __Hcommon set 0x7E
    43                           global __Lrdata_0, __Hrdata_0
    44  0000                     __Lrdata_0	equ	0x0
    45  0000                     __Hrdata_0	equ	0x1
    46                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    47  0000                     __Lramdata	set	__Lrdata_0
    48  0000                     __Hramdata	set	__Hrdata_0
    49                           	GLOBAL	__databank
    50  0000                     __databank	EQU	0
    51  0000                     _main_tep	equ	??_main+0
    52                           	global	_main_tep
    53  0000                     _main_volt	equ	??_main+2
    54                           	global	_main_volt
    55  0000                     _Adc8_Cha_val	equ	??_Adc8_Cha+0
    56                           	global	_Adc8_Cha_val
    57  0000                     _Lcd8_Display_com	equ	??_Lcd8_Display+0
    58                           	global	_Lcd8_Display_com
    59  0000                     _Lcd8_Display_Lcd_i	equ	??_Lcd8_Display+1
    60                           	global	_Lcd8_Display_Lcd_i
    61  0000                     _Lcd8_Display_word	equ	?_Lcd8_Display+0
    62                           	global	_Lcd8_Display_word
    63  0000                     _Lcd8_Display_n	equ	?_Lcd8_Display+1
    64                           	global	_Lcd8_Display_n
    65  0000                     _Lcd8_Decimal3_com	equ	??_Lcd8_Decimal3+0
    66                           	global	_Lcd8_Decimal3_com
    67  0000                     _Lcd8_Decimal3_Lcd_t	equ	??_Lcd8_Decimal3+1
    68                           	global	_Lcd8_Decimal3_Lcd_t
    69  0000                     _Lcd8_Decimal3_Lcd_h	equ	??_Lcd8_Decimal3+3
    70                           	global	_Lcd8_Decimal3_Lcd_h
    71  0000                     _Lcd8_Decimal3_Lcd_o	equ	??_Lcd8_Decimal3+5
    72                           	global	_Lcd8_Decimal3_Lcd_o
    73  0000                     _Lcd8_Decimal3_Lcd_hr	equ	??_Lcd8_Decimal3+7
    74                           	global	_Lcd8_Decimal3_Lcd_hr
    75  0000                     _Lcd8_Decimal3_val	equ	?_Lcd8_Decimal3+0
    76                           	global	_Lcd8_Decimal3_val
    77  0000                     ___awdiv_sign	equ	??___awdiv+0
    78                           	global	___awdiv_sign
    79  0000                     ___awdiv_counter	equ	??___awdiv+1
    80                           	global	___awdiv_counter
    81  0000                     ___awdiv_quotient	equ	??___awdiv+2
    82                           	global	___awdiv_quotient
    83  0000                     ___awdiv_dividend	equ	?___awdiv+0
    84                           	global	___awdiv_dividend
    85  0000                     ___awdiv_divisor	equ	?___awdiv+2
    86                           	global	___awdiv_divisor
    87  0000                     ___lwmod_counter	equ	??___lwmod+0
    88                           	global	___lwmod_counter
    89  0000                     ___lwmod_dividend	equ	?___lwmod+0
    90                           	global	___lwmod_dividend
    91  0000                     ___lwmod_divisor	equ	?___lwmod+2
    92                           	global	___lwmod_divisor
    93  0000                     ___awmod_sign	equ	??___awmod+0
    94                           	global	___awmod_sign
    95  0000                     ___awmod_counter	equ	??___awmod+1
    96                           	global	___awmod_counter
    97  0000                     ___awmod_dividend	equ	?___awmod+0
    98                           	global	___awmod_dividend
    99  0000                     ___awmod_divisor	equ	?___awmod+2
   100                           	global	___awmod_divisor
   101  0000                     _Lcd8_Write_com	equ	??_Lcd8_Write+0
   102                           	global	_Lcd8_Write_com
   103  0000                     _Lcd8_Write_lr	equ	?_Lcd8_Write+0
   104                           	global	_Lcd8_Write_lr
   105  0000                     ___lwdiv_counter	equ	??___lwdiv+0
   106                           	global	___lwdiv_counter
   107  0000                     ___lwdiv_quotient	equ	??___lwdiv+1
   108                           	global	___lwdiv_quotient
   109  0000                     ___lwdiv_dividend	equ	?___lwdiv+0
   110                           	global	___lwdiv_dividend
   111  0000                     ___lwdiv_divisor	equ	?___lwdiv+2
   112                           	global	___lwdiv_divisor
   113  0000                     _Lcd8_Command_com	equ	??_Lcd8_Command+0
   114                           	global	_Lcd8_Command_com
   115  0000                     _Delay_del	equ	?_Delay+0
   116                           	global	_Delay_del
   117                           ;Data sizes: Strings 34, constant 0, data 0, bs
                                 s 0, persistent 0 stack 25
   118                           	global	_main
   119                           	global	??_main
   120                           	global	?_main
   121                           
   122                           ; *************** function _main **************
                                 *
   123                           ; Defined at:
   124                           ;		line 9 in file "C:\Users\HP\Desktop\pic cont
                                 roller\A2D CONVERTOR\test1.c"
   125                           ; Parameters:
   126                           ;		None
   127                           ; Auto variables:
   128                           ;		tep         	       	type: unsigned int 
   129                           ;		volt        	       	type: unsigned int 
   130                           ; Return value:
   131                           ;		type: void 
   132                           ;		size: 0
   133                           ; Registers used:
   134                           ;		wreg, status,2, status,0, pclath, cstack
   135                           ; Tracked objects:
   136                           ;		On entry : BFF/0
   137                           ;		On exit  : 0/0
   138                           ;		Unchanged: 0/0
   139                           ; Data sizes:
   140                           ;		Autos:    4
   141                           ;		Params:   0
   142                           ;		Temp:     0
   143                           ;		Total:    4
   144                           ; This function calls:
   145                           ;		_Lcd8_Init
   146                           ;		_Delay
   147                           ;		_Lcd8_Display
   148                           ;		_Adc8_Cha
   149                           ;		_Lcd8_Decimal3
   150                           ; This function is called by:
   151                           ;		Startup code after reset
   152                           ; This function uses a non-reentrant model
   153                           ; 
   154                           	psect	maintext,class=CODE,delta=2
   155                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\test1.c"
   156                           	line	9
   157                           ;test1.c: 8: void main()
   158                           ;test1.c: 9: {
   159                           	
   160  0015                     _main:	
   161                           ; Regs used in _main: [wreg+status,2+status,0+p
                                 clath+cstack]
   162                           	line	10
   163                           ;test1.c: 10: TRISB=0x00;
   164  0015  1003               	clrc
   165  0016  1683               	bsf	status, 5	;RP0=1, select bank1
   166  0017  1303               	bcf	status, 6	;RP2=0, select bank1
   167                           	
   168  0018  3000               	movlw	0
   169  0019  1803               	btfsc	status,0
   170  001A  3001               	movlw	1
   171  001B  0086               	movwf	(134)^080h	;volatile
   172                           	line	11
   173                           ;test1.c: 11: TRISA=0xff;
   174                           	
   175  001C  30FF               	movlw	0ffh
   176  001D  0085               	movwf	(133)^080h	;volatile
   177                           	line	12
   178                           ;test1.c: 12: TRISC=0xc0;
   179  001E  30C0               	movlw	(0C0h)
   180                           	
   181  001F  0087               	movwf	(135)^080h	;volatile
   182                           	line	13
   183                           ;test1.c: 13: TRISD=0x00;
   184  0020  1003               	clrc
   185                           	
   186  0021  3000               	movlw	0
   187  0022  1803               	btfsc	status,0
   188  0023  3001               	movlw	1
   189  0024  0088               	movwf	(136)^080h	;volatile
   190                           	line	16
   191                           ;test1.c: 14: unsigned int tep;
   192                           ;test1.c: 15: unsigned int volt;
   193                           ;test1.c: 16: Lcd8_Init();
   194  0025  120A  118A  2352   	fcall	_Lcd8_Init
              120A  118A         
   195                           	line	17
   196                           ;test1.c: 17: Delay(6500);
   197  002A  3064               	movlw	low(01964h)
   198  002B  1283               	bcf	status, 5	;RP0=0, select bank0
   199  002C  1303               	bcf	status, 6	;RP2=0, select bank0
   200                           	
   201  002D  00B3               	movwf	(?_Delay)
   202  002E  3019               	movlw	high(01964h)
   203  002F  00B4               	movwf	((?_Delay))+1
   204  0030  120A  118A  2340   	fcall	_Delay
              120A  118A         
   205                           	line	18
   206                           ;test1.c: 18: Lcd8_Display(0x80,"    WELCOME   
                                   ",16);
   207  0035  3010               	movlw	low(010h)
   208  0036  1283               	bcf	status, 5	;RP0=0, select bank0
   209  0037  1303               	bcf	status, 6	;RP2=0, select bank0
   210                           	
   211  0038  00A5               	movwf	(0+?_Lcd8_Display+01h)&07fh
   212  0039  3000               	movlw	high(010h)
   213  003A  00A6               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   214  003B  3012               	movlw	((STR_1-__stringbase))&0ffh
   215                           	
   216  003C  00A4               	movwf	(?_Lcd8_Display)
   217  003D  3080               	movlw	(080h)
   218  003E  120A  118A  23AD   	fcall	_Lcd8_Display
              120A  118A         
   219                           	line	19
   220                           ;test1.c: 19: Delay(6500);
   221  0043  3064               	movlw	low(01964h)
   222  0044  1283               	bcf	status, 5	;RP0=0, select bank0
   223  0045  1303               	bcf	status, 6	;RP2=0, select bank0
   224                           	
   225  0046  00B3               	movwf	(?_Delay)
   226  0047  3019               	movlw	high(01964h)
   227  0048  00B4               	movwf	((?_Delay))+1
   228  0049  120A  118A  2340   	fcall	_Delay
              120A  118A         
   229                           	line	20
   230                           ;test1.c: 20: RB0=RB1=0;
   231  004E  1283               	bcf	status, 5	;RP0=0, select bank0
   232  004F  1303               	bcf	status, 6	;RP2=0, select bank0
   233  0050  1086               	bcf	(49/8),(49)&7
   234  0051  1006               	bcf	(48/8),(48)&7
   235                           	line	22
   236                           ;test1.c: 22: while(1)
   237                           	
   238  0052                     l194:	
   239                           	line	24
   240                           ;test1.c: 23: {
   241                           ;test1.c: 24: tep=Adc8_Cha(0);
   242  0052  3000               	movlw	(0)
   243  0053  120A  118A  24DC   	fcall	_Adc8_Cha
              120A  118A         
   244  0058  1283               	bcf	status, 5	;RP0=0, select bank0
   245  0059  1303               	bcf	status, 6	;RP2=0, select bank0
   246                           	
   247  005A  0824               	movf	(0+?_Adc8_Cha),w
   248  005B  01A0               	clrf	(_main_tep)
   249  005C  07A0               	addwf	(_main_tep)
   250  005D  0825               	movf	(1+?_Adc8_Cha),w
   251  005E  01A1               	clrf	(_main_tep+1)
   252  005F  07A1               	addwf	(_main_tep+1)
   253                           	line	25
   254                           ;test1.c: 25: volt=Adc8_Cha(1);
   255  0060  3001               	movlw	(01h)
   256  0061  120A  118A  24DC   	fcall	_Adc8_Cha
              120A  118A         
   257  0066  1283               	bcf	status, 5	;RP0=0, select bank0
   258  0067  1303               	bcf	status, 6	;RP2=0, select bank0
   259                           	
   260  0068  0824               	movf	(0+?_Adc8_Cha),w
   261  0069  01A2               	clrf	(_main_volt)
   262  006A  07A2               	addwf	(_main_volt)
   263  006B  0825               	movf	(1+?_Adc8_Cha),w
   264  006C  01A3               	clrf	(_main_volt+1)
   265  006D  07A3               	addwf	(_main_volt+1)
   266                           	line	26
   267                           ;test1.c: 26: if(volt>240 ) {
   268                           	
   269  006E  3000               	movlw	high(0F1h)
   270  006F  0223               	subwf	(_main_volt+1),w
   271  0070  1D03               	skipz
   272  0071  2874               	goto	u3125
   273  0072  30F1               	movlw	low(0F1h)
   274  0073  0222               	subwf	(_main_volt),w
   275  0074                     u3125:
   276  0074  1C03               	skipc
   277  0075  2877               	goto	u3121
   278  0076  2878               	goto	u3120
   279  0077                     u3121:
   280  0077  2884               	goto	l196
   281  0078                     u3120:
   282                           	line	27
   283                           ;test1.c: 27: RB0=RB1=0;
   284  0078  1086               	bcf	(49/8),(49)&7
   285  0079  1006               	bcf	(48/8),(48)&7
   286                           	line	28
   287                           ;test1.c: 28: Lcd8_Decimal3(0xc8,volt);}
   288                           	
   289  007A  0822               	movf	(_main_volt),w
   290  007B  1383               	bcf	status, 7	;select IRP bank0
   291                           	
   292                           	
   293  007C  00A4               	movwf	(?_Lcd8_Decimal3)
   294  007D  30C8               	movlw	(0C8h)
   295  007E  120A  118A  2731   	fcall	_Lcd8_Decimal3
              120A  118A         
   296  0083  290C               	goto	l193
   297                           	line	29
   298                           	
   299  0084                     l196:	
   300                           ;test1.c: 29: else if(volt<190){
   301                           	
   302  0084  3000               	movlw	high(0BEh)
   303  0085  0223               	subwf	(_main_volt+1),w
   304  0086  1D03               	skipz
   305  0087  288A               	goto	u3135
   306  0088  30BE               	movlw	low(0BEh)
   307  0089  0222               	subwf	(_main_volt),w
   308  008A                     u3135:
   309  008A  1803               	skipnc
   310  008B  288D               	goto	u3131
   311  008C  288E               	goto	u3130
   312  008D                     u3131:
   313  008D  289A               	goto	l198
   314  008E                     u3130:
   315                           	line	30
   316                           ;test1.c: 30: RB0=RB1=0;
   317  008E  1086               	bcf	(49/8),(49)&7
   318  008F  1006               	bcf	(48/8),(48)&7
   319                           	line	31
   320                           ;test1.c: 31: Lcd8_Decimal3(0xc8,volt);
   321                           	
   322  0090  0822               	movf	(_main_volt),w
   323  0091  1383               	bcf	status, 7	;select IRP bank0
   324                           	
   325                           	
   326  0092  00A4               	movwf	(?_Lcd8_Decimal3)
   327  0093  30C8               	movlw	(0C8h)
   328  0094  120A  118A  2731   	fcall	_Lcd8_Decimal3
              120A  118A         
   329                           	line	32
   330                           ;test1.c: 32: }
   331  0099  290C               	goto	l193
   332                           	line	33
   333                           	
   334  009A                     l198:	
   335                           	line	35
   336                           ;test1.c: 33: else
   337                           ;test1.c: 34: {
   338                           ;test1.c: 35: if(tep>=40)
   339                           	
   340  009A  3000               	movlw	high(028h)
   341  009B  0221               	subwf	(_main_tep+1),w
   342  009C  1D03               	skipz
   343  009D  28A0               	goto	u3145
   344  009E  3028               	movlw	low(028h)
   345  009F  0220               	subwf	(_main_tep),w
   346  00A0                     u3145:
   347  00A0  1C03               	skipc
   348  00A1  28A3               	goto	u3141
   349  00A2  28A4               	goto	u3140
   350  00A3                     u3141:
   351  00A3  28D3               	goto	l200
   352  00A4                     u3140:
   353                           	line	37
   354                           ;test1.c: 36: {
   355                           ;test1.c: 37: RB0=1;
   356  00A4  1406               	bsf	(48/8),(48)&7
   357                           	line	38
   358                           ;test1.c: 38: Lcd8_Display(0x80,"    value     
                                   ",16);
   359  00A5  3010               	movlw	low(010h)
   360                           	
   361  00A6  00A5               	movwf	(0+?_Lcd8_Display+01h)&07fh
   362  00A7  3000               	movlw	high(010h)
   363  00A8  00A6               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   364  00A9  3001               	movlw	((STR_2-__stringbase))&0ffh
   365                           	
   366  00AA  00A4               	movwf	(?_Lcd8_Display)
   367  00AB  3080               	movlw	(080h)
   368  00AC  120A  118A  23AD   	fcall	_Lcd8_Display
              120A  118A         
   369                           	line	39
   370                           ;test1.c: 39: Lcd8_Decimal3(0xc0,tep);
   371  00B1  1283               	bcf	status, 5	;RP0=0, select bank0
   372  00B2  1303               	bcf	status, 6	;RP2=0, select bank0
   373                           	
   374  00B3  0820               	movf	(_main_tep),w
   375  00B4  1383               	bcf	status, 7	;select IRP bank0
   376                           	
   377                           	
   378  00B5  00A4               	movwf	(?_Lcd8_Decimal3)
   379  00B6  30C0               	movlw	(0C0h)
   380  00B7  120A  118A  2731   	fcall	_Lcd8_Decimal3
              120A  118A         
   381                           	line	40
   382                           ;test1.c: 40: Lcd8_Decimal3(0xc8,volt);
   383  00BC  1283               	bcf	status, 5	;RP0=0, select bank0
   384  00BD  1303               	bcf	status, 6	;RP2=0, select bank0
   385                           	
   386  00BE  0822               	movf	(_main_volt),w
   387  00BF  1383               	bcf	status, 7	;select IRP bank0
   388                           	
   389                           	
   390  00C0  00A4               	movwf	(?_Lcd8_Decimal3)
   391  00C1  30C8               	movlw	(0C8h)
   392  00C2  120A  118A  2731   	fcall	_Lcd8_Decimal3
              120A  118A         
   393                           	line	41
   394                           ;test1.c: 41: Delay(5);
   395  00C7  3005               	movlw	low(05h)
   396  00C8  1283               	bcf	status, 5	;RP0=0, select bank0
   397  00C9  1303               	bcf	status, 6	;RP2=0, select bank0
   398                           	
   399  00CA  00B3               	movwf	(?_Delay)
   400  00CB  3000               	movlw	high(05h)
   401  00CC  00B4               	movwf	((?_Delay))+1
   402  00CD  120A  118A  2340   	fcall	_Delay
              120A  118A         
   403                           	line	42
   404                           ;test1.c: 42: }
   405  00D2  2901               	goto	l201
   406                           	line	43
   407                           	
   408  00D3                     l200:	
   409                           	line	45
   410                           ;test1.c: 43: else
   411                           ;test1.c: 44: {
   412                           ;test1.c: 45: RB0=0;
   413  00D3  1006               	bcf	(48/8),(48)&7
   414                           	line	46
   415                           ;test1.c: 46: Lcd8_Display(0x80,"    value     
                                   ",16);
   416  00D4  3010               	movlw	low(010h)
   417                           	
   418  00D5  00A5               	movwf	(0+?_Lcd8_Display+01h)&07fh
   419  00D6  3000               	movlw	high(010h)
   420  00D7  00A6               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   421  00D8  3001               	movlw	((STR_3-__stringbase))&0ffh
   422                           	
   423  00D9  00A4               	movwf	(?_Lcd8_Display)
   424  00DA  3080               	movlw	(080h)
   425  00DB  120A  118A  23AD   	fcall	_Lcd8_Display
              120A  118A         
   426                           	line	47
   427                           ;test1.c: 47: Lcd8_Decimal3(0xc0,tep);
   428  00E0  1283               	bcf	status, 5	;RP0=0, select bank0
   429  00E1  1303               	bcf	status, 6	;RP2=0, select bank0
   430                           	
   431  00E2  0820               	movf	(_main_tep),w
   432  00E3  1383               	bcf	status, 7	;select IRP bank0
   433                           	
   434                           	
   435  00E4  00A4               	movwf	(?_Lcd8_Decimal3)
   436  00E5  30C0               	movlw	(0C0h)
   437  00E6  120A  118A  2731   	fcall	_Lcd8_Decimal3
              120A  118A         
   438                           	line	48
   439                           ;test1.c: 48: Lcd8_Decimal3(0xc8,volt);
   440  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
   441  00EC  1303               	bcf	status, 6	;RP2=0, select bank0
   442                           	
   443  00ED  0822               	movf	(_main_volt),w
   444  00EE  1383               	bcf	status, 7	;select IRP bank0
   445                           	
   446                           	
   447  00EF  00A4               	movwf	(?_Lcd8_Decimal3)
   448  00F0  30C8               	movlw	(0C8h)
   449  00F1  120A  118A  2731   	fcall	_Lcd8_Decimal3
              120A  118A         
   450                           	line	49
   451                           ;test1.c: 49: Delay(5);
   452  00F6  3005               	movlw	low(05h)
   453  00F7  1283               	bcf	status, 5	;RP0=0, select bank0
   454  00F8  1303               	bcf	status, 6	;RP2=0, select bank0
   455                           	
   456  00F9  00B3               	movwf	(?_Delay)
   457  00FA  3000               	movlw	high(05h)
   458  00FB  00B4               	movwf	((?_Delay))+1
   459  00FC  120A  118A  2340   	fcall	_Delay
              120A  118A         
   460                           	line	50
   461                           	
   462  0101                     l201:	
   463                           	line	51
   464                           ;test1.c: 50: }
   465                           ;test1.c: 51: Delay(65000);
   466  0101  30E8               	movlw	low(0FDE8h)
   467  0102  1283               	bcf	status, 5	;RP0=0, select bank0
   468  0103  1303               	bcf	status, 6	;RP2=0, select bank0
   469                           	
   470  0104  00B3               	movwf	(?_Delay)
   471  0105  30FD               	movlw	high(0FDE8h)
   472  0106  00B4               	movwf	((?_Delay))+1
   473  0107  120A  118A  2340   	fcall	_Delay
              120A  118A         
   474                           	line	52
   475                           	
   476  010C                     l199:	
   477                           	
   478  010C                     l197:	
   479                           	line	53
   480                           	
   481  010C                     l193:	
   482                           	line	22
   483  010C  2852               	goto	l194
   484                           	global	start
   485  010D  120A  118A  2800   	ljmp	start
   486                           ; =============== function _main ends =========
                                 ======
   487                           
   488                           GLOBAL __end_of_main
   489  0110                     	__end_of_main:
   490                           	FNSIZE	_main,4,0
   491                           	psect	maintext
   492                           	line	54
   493                           	signat	_main,88
   494                           	global	_Adc8_Cha
   495                           	global	??_Adc8_Cha
   496                           	global	?_Adc8_Cha
   497                           
   498                           ; *************** function _Adc8_Cha **********
                                 *****
   499                           ; Defined at:
   500                           ;		line 10 in file "C:\Users\HP\Desktop\pic con
                                 troller\A2D CONVERTOR\pic_adc.h"
   501                           ; Parameters:
   502                           ;		val         	reg:   wr	type: unsigned char 
   503                           ; Auto variables:
   504                           ;		val         	       	type: unsigned char 
   505                           ; Return value:
   506                           ;		type: int 
   507                           ;		size: 2
   508                           ; Registers used:
   509                           ;		wreg, status,2, status,0, pclath, cstack
   510                           ; Tracked objects:
   511                           ;		On entry : 0/0
   512                           ;		On exit  : 0/0
   513                           ;		Unchanged: 0/0
   514                           ; Data sizes:
   515                           ;		Autos:    1
   516                           ;		Params:   2
   517                           ;		Temp:     2
   518                           ;		Total:    5
   519                           ; This function calls:
   520                           ;		___lwdiv
   521                           ; This function is called by:
   522                           ;		_main
   523                           ; This function uses a non-reentrant model
   524                           ; 
   525                           	psect	text90,local,class=CODE,delta=2
   526                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_adc.h"
   527                           	line	10
   528                           ;pic_adc.h: 9: Adc8_Cha(unsigned char val)
   529                           ;pic_adc.h: 10: {
   530                           	
   531  04DC                     _Adc8_Cha:	
   532                           ; Regs used in _Adc8_Cha: [wreg+status,2+status
                                 ,0+pclath+cstack]
   533                           ;_Adc8_Cha_val stored from wreg
   534  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
   535  04DD  1303               	bcf	status, 6	;RP2=0, select bank0
   536                           	
   537  04DE  00A6               	movwf	(_Adc8_Cha_val)
   538                           	line	11
   539                           ;pic_adc.h: 11: ADFM=0;
   540  04DF  1683               	bsf	status, 5	;RP0=1, select bank1
   541  04E0  1303               	bcf	status, 6	;RP2=0, select bank1
   542  04E1  139F               	bcf	(1279/8)^080h,(1279)&7
   543                           	line	12
   544                           ;pic_adc.h: 12: adc_del=25;
   545  04E2  3019               	movlw	(019h)
   546  04E3  1283               	bcf	status, 5	;RP0=0, select bank0
   547  04E4  1303               	bcf	status, 6	;RP2=0, select bank0
   548  04E5  00A7               	movwf	(??_Adc8_Cha+1+0)
   549                           	
   550  04E6  0827               	movf	(??_Adc8_Cha+1+0),w
   551  04E7  00FD               	movwf	(125)
   552                           	line	14
   553                           ;pic_adc.h: 14: if(val==0)
   554                           	
   555  04E8  08A6               	movf	(_Adc8_Cha_val),f
   556  04E9  1D03               	skipz
   557  04EA  2CEC               	goto	u2721
   558  04EB  2CED               	goto	u2720
   559  04EC                     u2721:
   560  04EC  2D29               	goto	l2
   561  04ED                     u2720:
   562                           	line	16
   563                           ;pic_adc.h: 15: {
   564                           ;pic_adc.h: 16: adc_temp0=0;
   565  04ED  3000               	movlw	low(0)
   566                           	
   567  04EE  00F3               	movwf	(115)
   568  04EF  3000               	movlw	high(0)
   569  04F0  00F4               	movwf	((115))+1
   570                           	line	17
   571                           ;pic_adc.h: 17: for(adc_j=0;adc_j<10;adc_j++)
   572  04F1  1003               	clrc
   573                           	
   574  04F2  3000               	movlw	0
   575  04F3  1803               	btfsc	status,0
   576  04F4  3001               	movlw	1
   577  04F5  00F9               	movwf	(121)
   578  04F6  2CF7               	goto	l3
   579                           	line	18
   580                           	
   581  04F7                     l3:	
   582                           	line	19
   583                           ;pic_adc.h: 18: {
   584                           ;pic_adc.h: 19: ADCON0=0x00;
   585  04F7  1003               	clrc
   586                           	
   587  04F8  3000               	movlw	0
   588  04F9  1803               	btfsc	status,0
   589  04FA  3001               	movlw	1
   590  04FB  009F               	movwf	(31)	;volatile
   591                           	line	20
   592                           ;pic_adc.h: 20: ADON=1;
   593  04FC  141F               	bsf	(248/8),(248)&7
   594                           	line	21
   595                           ;pic_adc.h: 21: while(adc_del--);
   596  04FD  2CFE               	goto	l6
   597                           	
   598  04FE                     l6:	
   599                           	
   600                           	
   601  04FE  3001               	movlw	low(01h)
   602  04FF  02FD               	subwf	(125),f
   603  0500  087D               	movf	((125))&07fh,w
   604                           	
   605  0501  3AFF               	xorlw	0FFh
   606  0502  1D03               	skipz
   607  0503  2D05               	goto	u2741
   608  0504  2D06               	goto	u2740
   609  0505                     u2741:
   610  0505  2CFE               	goto	l6
   611  0506                     u2740:
   612                           	
   613  0506                     l8:	
   614                           	line	22
   615                           ;pic_adc.h: 22: ADCON0 =0x05;
   616  0506  3005               	movlw	(05h)
   617                           	
   618  0507  009F               	movwf	(31)	;volatile
   619                           	line	23
   620                           ;pic_adc.h: 23: while(ADCON0!=0X01);
   621  0508  2D09               	goto	l9
   622                           	
   623  0509                     l9:	
   624                           	
   625  0509  081F               	movf	(31),w	;volatile
   626                           	
   627  050A  3A01               	xorlw	01h
   628  050B  1D03               	skipz
   629  050C  2D0E               	goto	u2751
   630  050D  2D0F               	goto	u2750
   631  050E                     u2751:
   632  050E  2D09               	goto	l9
   633  050F                     u2750:
   634                           	
   635  050F                     l11:	
   636                           	line	24
   637                           ;pic_adc.h: 24: adc_temp=ADRESH;
   638                           	
   639  050F  081E               	movf	(30),w	;volatile
   640                           	
   641  0510  00A7               	movwf	(??_Adc8_Cha+1+0)
   642  0511  01A8               	clrf	(??_Adc8_Cha+1+0+1)
   643                           	
   644  0512  0827               	movf	0+(??_Adc8_Cha+1+0),w
   645  0513  00F1               	movwf	(113)
   646  0514  0828               	movf	1+(??_Adc8_Cha+1+0),w
   647  0515  00F2               	movwf	(113+1)
   648                           	line	25
   649                           ;pic_adc.h: 25: adc_temp0=adc_temp0+adc_temp;
   650                           	
   651                           	
   652  0516  0871               	movf	(113),w
   653  0517  0773               	addwf	(115),w
   654                           	
   655  0518  00F3               	movwf	(115)
   656  0519  0872               	movf	(113+1),w
   657  051A  1803               	skipnc
   658  051B  0A72               	incf	(113+1),w
   659  051C  0774               	addwf	(115+1),w
   660  051D  00F4               	movwf	1+(115)
   661                           	line	17
   662  051E  3001               	movlw	(01h)
   663  051F  00A7               	movwf	(??_Adc8_Cha+1+0)
   664                           	
   665  0520  0827               	movf	(??_Adc8_Cha+1+0),w
   666  0521  07F9               	addwf	(121),f
   667  0522  300A               	movlw	(0Ah)
   668                           	
   669  0523  0279               	subwf	(121),w
   670  0524  1C03               	skipc
   671  0525  2D27               	goto	u2761
   672  0526  2D28               	goto	u2760
   673  0527                     u2761:
   674  0527  2CF7               	goto	l3
   675  0528                     u2760:
   676                           	
   677  0528                     l4:	
   678                           	line	27
   679                           ;pic_adc.h: 26: }
   680                           ;pic_adc.h: 27: }
   681  0528  2EE2               	goto	l12
   682                           	line	28
   683                           	
   684  0529                     l2:	
   685                           ;pic_adc.h: 28: else if(val==1)
   686                           	
   687  0529  0826               	movf	(_Adc8_Cha_val),w
   688  052A  1383               	bcf	status, 7	;select IRP bank0
   689                           	
   690  052B  3A01               	xorlw	01h
   691  052C  1D03               	skipz
   692  052D  2D2F               	goto	u2771
   693  052E  2D30               	goto	u2770
   694  052F                     u2771:
   695  052F  2D69               	goto	l13
   696  0530                     u2770:
   697                           	line	30
   698                           ;pic_adc.h: 29: {
   699                           ;pic_adc.h: 30: adc_temp0=0;
   700  0530  3000               	movlw	low(0)
   701                           	
   702  0531  00F3               	movwf	(115)
   703  0532  3000               	movlw	high(0)
   704  0533  00F4               	movwf	((115))+1
   705                           	line	31
   706                           ;pic_adc.h: 31: for(adc_j=0;adc_j<10;adc_j++)
   707  0534  1003               	clrc
   708                           	
   709  0535  3000               	movlw	0
   710  0536  1803               	btfsc	status,0
   711  0537  3001               	movlw	1
   712  0538  00F9               	movwf	(121)
   713  0539  2D3A               	goto	l14
   714                           	line	32
   715                           	
   716  053A                     l14:	
   717                           	line	33
   718                           ;pic_adc.h: 32: {
   719                           ;pic_adc.h: 33: ADCON0=0x08;
   720  053A  3008               	movlw	(08h)
   721                           	
   722  053B  009F               	movwf	(31)	;volatile
   723                           	line	34
   724                           ;pic_adc.h: 34: ADON=1;
   725  053C  141F               	bsf	(248/8),(248)&7
   726                           	line	35
   727                           ;pic_adc.h: 35: while(adc_del--);
   728  053D  2D3E               	goto	l17
   729                           	
   730  053E                     l17:	
   731                           	
   732                           	
   733  053E  3001               	movlw	low(01h)
   734  053F  02FD               	subwf	(125),f
   735  0540  087D               	movf	((125))&07fh,w
   736                           	
   737  0541  3AFF               	xorlw	0FFh
   738  0542  1D03               	skipz
   739  0543  2D45               	goto	u2791
   740  0544  2D46               	goto	u2790
   741  0545                     u2791:
   742  0545  2D3E               	goto	l17
   743  0546                     u2790:
   744                           	
   745  0546                     l19:	
   746                           	line	36
   747                           ;pic_adc.h: 36: ADCON0 =0x0d;
   748  0546  300D               	movlw	(0Dh)
   749                           	
   750  0547  009F               	movwf	(31)	;volatile
   751                           	line	37
   752                           ;pic_adc.h: 37: while(ADCON0!=0X09);
   753  0548  2D49               	goto	l20
   754                           	
   755  0549                     l20:	
   756                           	
   757  0549  081F               	movf	(31),w	;volatile
   758                           	
   759  054A  3A09               	xorlw	09h
   760  054B  1D03               	skipz
   761  054C  2D4E               	goto	u2801
   762  054D  2D4F               	goto	u2800
   763  054E                     u2801:
   764  054E  2D49               	goto	l20
   765+ 054F                     u2800:
   766                           	
   767  054F                     l22:	
   768                           	line	38
   769                           ;pic_adc.h: 38: adc_temp=ADRESH;
   770                           	
   771  054F  081E               	movf	(30),w	;volatile
   772                           	
   773  0550  00A7               	movwf	(??_Adc8_Cha+1+0)
   774  0551  01A8               	clrf	(??_Adc8_Cha+1+0+1)
   775                           	
   776  0552  0827               	movf	0+(??_Adc8_Cha+1+0),w
   777  0553  00F1               	movwf	(113)
   778  0554  0828               	movf	1+(??_Adc8_Cha+1+0),w
   779  0555  00F2               	movwf	(113+1)
   780                           	line	39
   781                           ;pic_adc.h: 39: adc_temp0=adc_temp0+adc_temp;
   782                           	
   783                           	
   784  0556  0871               	movf	(113),w
   785  0557  0773               	addwf	(115),w
   786                           	
   787  0558  00F3               	movwf	(115)
   788  0559  0872               	movf	(113+1),w
   789  055A  1803               	skipnc
   790  055B  0A72               	incf	(113+1),w
   791  055C  0774               	addwf	(115+1),w
   792  055D  00F4               	movwf	1+(115)
   793                           	line	31
   794  055E  3001               	movlw	(01h)
   795  055F  00A7               	movwf	(??_Adc8_Cha+1+0)
   796                           	
   797  0560  0827               	movf	(??_Adc8_Cha+1+0),w
   798  0561  07F9               	addwf	(121),f
   799  0562  300A               	movlw	(0Ah)
   800                           	
   801  0563  0279               	subwf	(121),w
   802  0564  1C03               	skipc
   803  0565  2D67               	goto	u2811
   804  0566  2D68               	goto	u2810
   805  0567                     u2811:
   806  0567  2D3A               	goto	l14
   807  0568                     u2810:
   808                           	
   809  0568                     l15:	
   810                           	line	41
   811                           ;pic_adc.h: 40: }
   812                           ;pic_adc.h: 41: }
   813  0568  2EE2               	goto	l12
   814                           	line	42
   815                           	
   816  0569                     l13:	
   817                           ;pic_adc.h: 42: else if(val==2)
   818                           	
   819  0569  0826               	movf	(_Adc8_Cha_val),w
   820                           	
   821  056A  3A02               	xorlw	02h
   822  056B  1D03               	skipz
   823  056C  2D6E               	goto	u2821
   824  056D  2D6F               	goto	u2820
   825  056E                     u2821:
   826  056E  2DA8               	goto	l24
   827  056F                     u2820:
   828                           	line	44
   829                           ;pic_adc.h: 43: {
   830                           ;pic_adc.h: 44: adc_temp0=0;
   831  056F  3000               	movlw	low(0)
   832                           	
   833  0570  00F3               	movwf	(115)
   834  0571  3000               	movlw	high(0)
   835  0572  00F4               	movwf	((115))+1
   836                           	line	45
   837                           ;pic_adc.h: 45: for(adc_j=0;adc_j<10;adc_j++)
   838  0573  1003               	clrc
   839                           	
   840  0574  3000               	movlw	0
   841  0575  1803               	btfsc	status,0
   842  0576  3001               	movlw	1
   843  0577  00F9               	movwf	(121)
   844  0578  2D79               	goto	l25
   845                           	line	46
   846                           	
   847  0579                     l25:	
   848                           	line	47
   849                           ;pic_adc.h: 46: {
   850                           ;pic_adc.h: 47: ADCON0=0x10;
   851  0579  3010               	movlw	(010h)
   852                           	
   853  057A  009F               	movwf	(31)	;volatile
   854                           	line	48
   855                           ;pic_adc.h: 48: ADON=1;
   856  057B  141F               	bsf	(248/8),(248)&7
   857                           	line	49
   858                           ;pic_adc.h: 49: while(adc_del--);
   859  057C  2D7D               	goto	l28
   860                           	
   861  057D                     l28:	
   862                           	
   863                           	
   864  057D  3001               	movlw	low(01h)
   865  057E  02FD               	subwf	(125),f
   866  057F  087D               	movf	((125))&07fh,w
   867                           	
   868  0580  3AFF               	xorlw	0FFh
   869  0581  1D03               	skipz
   870  0582  2D84               	goto	u2841
   871  0583  2D85               	goto	u2840
   872  0584                     u2841:
   873  0584  2D7D               	goto	l28
   874  0585                     u2840:
   875                           	
   876  0585                     l30:	
   877                           	line	50
   878                           ;pic_adc.h: 50: ADCON0 =0x15;
   879  0585  3015               	movlw	(015h)
   880                           	
   881  0586  009F               	movwf	(31)	;volatile
   882                           	line	51
   883                           ;pic_adc.h: 51: while(ADCON0!=0x11);
   884  0587  2D88               	goto	l31
   885                           	
   886  0588                     l31:	
   887                           	
   888  0588  081F               	movf	(31),w	;volatile
   889                           	
   890  0589  3A11               	xorlw	011h
   891  058A  1D03               	skipz
   892  058B  2D8D               	goto	u2851
   893  058C  2D8E               	goto	u2850
   894  058D                     u2851:
   895  058D  2D88               	goto	l31
   896  058E                     u2850:
   897                           	
   898  058E                     l33:	
   899                           	line	52
   900                           ;pic_adc.h: 52: adc_temp=ADRESH;
   901                           	
   902  058E  081E               	movf	(30),w	;volatile
   903                           	
   904  058F  00A7               	movwf	(??_Adc8_Cha+1+0)
   905  0590  01A8               	clrf	(??_Adc8_Cha+1+0+1)
   906                           	
   907  0591  0827               	movf	0+(??_Adc8_Cha+1+0),w
   908  0592  00F1               	movwf	(113)
   909  0593  0828               	movf	1+(??_Adc8_Cha+1+0),w
   910  0594  00F2               	movwf	(113+1)
   911                           	line	53
   912                           ;pic_adc.h: 53: adc_temp0=adc_temp0+adc_temp;
   913                           	
   914                           	
   915  0595  0871               	movf	(113),w
   916  0596  0773               	addwf	(115),w
   917                           	
   918  0597  00F3               	movwf	(115)
   919  0598  0872               	movf	(113+1),w
   920  0599  1803               	skipnc
   921  059A  0A72               	incf	(113+1),w
   922  059B  0774               	addwf	(115+1),w
   923  059C  00F4               	movwf	1+(115)
   924                           	line	45
   925  059D  3001               	movlw	(01h)
   926  059E  00A7               	movwf	(??_Adc8_Cha+1+0)
   927                           	
   928  059F  0827               	movf	(??_Adc8_Cha+1+0),w
   929  05A0  07F9               	addwf	(121),f
   930  05A1  300A               	movlw	(0Ah)
   931                           	
   932  05A2  0279               	subwf	(121),w
   933  05A3  1C03               	skipc
   934  05A4  2DA6               	goto	u2861
   935  05A5  2DA7               	goto	u2860
   936  05A6                     u2861:
   937  05A6  2D79               	goto	l25
   938  05A7                     u2860:
   939                           	
   940  05A7                     l26:	
   941                           	line	55
   942                           ;pic_adc.h: 54: }
   943                           ;pic_adc.h: 55: }
   944  05A7  2EE2               	goto	l12
   945                           	line	56
   946                           	
   947  05A8                     l24:	
   948                           ;pic_adc.h: 56: else if(val==3)
   949                           	
   950  05A8  0826               	movf	(_Adc8_Cha_val),w
   951                           	
   952  05A9  3A03               	xorlw	03h
   953  05AA  1D03               	skipz
   954  05AB  2DAD               	goto	u2871
   955  05AC  2DAE               	goto	u2870
   956  05AD                     u2871:
   957  05AD  2DE7               	goto	l35
   958  05AE                     u2870:
   959                           	line	58
   960                           ;pic_adc.h: 57: {
   961                           ;pic_adc.h: 58: adc_temp0=0;
   962  05AE  3000               	movlw	low(0)
   963                           	
   964  05AF  00F3               	movwf	(115)
   965  05B0  3000               	movlw	high(0)
   966  05B1  00F4               	movwf	((115))+1
   967                           	line	59
   968                           ;pic_adc.h: 59: for(adc_j=0;adc_j<10;adc_j++)
   969  05B2  1003               	clrc
   970                           	
   971  05B3  3000               	movlw	0
   972  05B4  1803               	btfsc	status,0
   973  05B5  3001               	movlw	1
   974  05B6  00F9               	movwf	(121)
   975  05B7  2DB8               	goto	l36
   976                           	line	60
   977                           	
   978  05B8                     l36:	
   979                           	line	61
   980                           ;pic_adc.h: 60: {
   981                           ;pic_adc.h: 61: ADCON0=0x18;
   982  05B8  3018               	movlw	(018h)
   983                           	
   984  05B9  009F               	movwf	(31)	;volatile
   985                           	line	62
   986                           ;pic_adc.h: 62: ADON=1;
   987  05BA  141F               	bsf	(248/8),(248)&7
   988                           	line	63
   989                           ;pic_adc.h: 63: while(adc_del--);
   990  05BB  2DBC               	goto	l39
   991                           	
   992  05BC                     l39:	
   993                           	
   994                           	
   995  05BC  3001               	movlw	low(01h)
   996  05BD  02FD               	subwf	(125),f
   997  05BE  087D               	movf	((125))&07fh,w
   998                           	
   999  05BF  3AFF               	xorlw	0FFh
  1000  05C0  1D03               	skipz
  1001  05C1  2DC3               	goto	u2891
  1002  05C2  2DC4               	goto	u2890
  1003  05C3                     u2891:
  1004  05C3  2DBC               	goto	l39
  1005  05C4                     u2890:
  1006                           	
  1007  05C4                     l41:	
  1008                           	line	64
  1009                           ;pic_adc.h: 64: ADCON0 =0x1d;
  1010  05C4  301D               	movlw	(01Dh)
  1011                           	
  1012  05C5  009F               	movwf	(31)	;volatile
  1013                           	line	65
  1014                           ;pic_adc.h: 65: while(ADCON0!=0x19);
  1015  05C6  2DC7               	goto	l42
  1016                           	
  1017  05C7                     l42:	
  1018                           	
  1019  05C7  081F               	movf	(31),w	;volatile
  1020                           	
  1021  05C8  3A19               	xorlw	019h
  1022  05C9  1D03               	skipz
  1023  05CA  2DCC               	goto	u2901
  1024  05CB  2DCD               	goto	u2900
  1025  05CC                     u2901:
  1026  05CC  2DC7               	goto	l42
  1027  05CD                     u2900:
  1028                           	
  1029  05CD                     l44:	
  1030                           	line	66
  1031                           ;pic_adc.h: 66: adc_temp=ADRESH;
  1032                           	
  1033  05CD  081E               	movf	(30),w	;volatile
  1034                           	
  1035  05CE  00A7               	movwf	(??_Adc8_Cha+1+0)
  1036  05CF  01A8               	clrf	(??_Adc8_Cha+1+0+1)
  1037                           	
  1038  05D0  0827               	movf	0+(??_Adc8_Cha+1+0),w
  1039  05D1  00F1               	movwf	(113)
  1040  05D2  0828               	movf	1+(??_Adc8_Cha+1+0),w
  1041  05D3  00F2               	movwf	(113+1)
  1042                           	line	67
  1043                           ;pic_adc.h: 67: adc_temp0=adc_temp0+adc_temp;
  1044                           	
  1045                           	
  1046  05D4  0871               	movf	(113),w
  1047  05D5  0773               	addwf	(115),w
  1048                           	
  1049  05D6  00F3               	movwf	(115)
  1050  05D7  0872               	movf	(113+1),w
  1051  05D8  1803               	skipnc
  1052  05D9  0A72               	incf	(113+1),w
  1053  05DA  0774               	addwf	(115+1),w
  1054  05DB  00F4               	movwf	1+(115)
  1055                           	line	59
  1056  05DC  3001               	movlw	(01h)
  1057  05DD  00A7               	movwf	(??_Adc8_Cha+1+0)
  1058                           	
  1059  05DE  0827               	movf	(??_Adc8_Cha+1+0),w
  1060  05DF  07F9               	addwf	(121),f
  1061  05E0  300A               	movlw	(0Ah)
  1062                           	
  1063  05E1  0279               	subwf	(121),w
  1064  05E2  1C03               	skipc
  1065  05E3  2DE5               	goto	u2911
  1066  05E4  2DE6               	goto	u2910
  1067  05E5                     u2911:
  1068  05E5  2DB8               	goto	l36
  1069  05E6                     u2910:
  1070                           	
  1071  05E6                     l37:	
  1072                           	line	69
  1073                           ;pic_adc.h: 68: }
  1074                           ;pic_adc.h: 69: }
  1075  05E6  2EE2               	goto	l12
  1076                           	line	70
  1077                           	
  1078  05E7                     l35:	
  1079                           ;pic_adc.h: 70: else if(val==4)
  1080                           	
  1081  05E7  0826               	movf	(_Adc8_Cha_val),w
  1082                           	
  1083  05E8  3A04               	xorlw	04h
  1084  05E9  1D03               	skipz
  1085  05EA  2DEC               	goto	u2921
  1086  05EB  2DED               	goto	u2920
  1087  05EC                     u2921:
  1088  05EC  2E26               	goto	l46
  1089  05ED                     u2920:
  1090                           	line	72
  1091                           ;pic_adc.h: 71: {
  1092                           ;pic_adc.h: 72: adc_temp0=0;
  1093  05ED  3000               	movlw	low(0)
  1094                           	
  1095  05EE  00F3               	movwf	(115)
  1096  05EF  3000               	movlw	high(0)
  1097  05F0  00F4               	movwf	((115))+1
  1098                           	line	73
  1099                           ;pic_adc.h: 73: for(adc_j=0;adc_j<10;adc_j++)
  1100  05F1  1003               	clrc
  1101                           	
  1102  05F2  3000               	movlw	0
  1103  05F3  1803               	btfsc	status,0
  1104  05F4  3001               	movlw	1
  1105  05F5  00F9               	movwf	(121)
  1106  05F6  2DF7               	goto	l47
  1107                           	line	74
  1108                           	
  1109  05F7                     l47:	
  1110                           	line	75
  1111                           ;pic_adc.h: 74: {
  1112                           ;pic_adc.h: 75: ADCON0=0x20;
  1113  05F7  3020               	movlw	(020h)
  1114                           	
  1115  05F8  009F               	movwf	(31)	;volatile
  1116                           	line	76
  1117                           ;pic_adc.h: 76: ADON=1;
  1118  05F9  141F               	bsf	(248/8),(248)&7
  1119                           	line	77
  1120                           ;pic_adc.h: 77: while(adc_del--);
  1121  05FA  2DFB               	goto	l50
  1122                           	
  1123  05FB                     l50:	
  1124                           	
  1125                           	
  1126  05FB  3001               	movlw	low(01h)
  1127  05FC  02FD               	subwf	(125),f
  1128  05FD  087D               	movf	((125))&07fh,w
  1129                           	
  1130  05FE  3AFF               	xorlw	0FFh
  1131  05FF  1D03               	skipz
  1132  0600  2E02               	goto	u2941
  1133  0601  2E03               	goto	u2940
  1134  0602                     u2941:
  1135  0602  2DFB               	goto	l50
  1136  0603                     u2940:
  1137                           	
  1138  0603                     l52:	
  1139                           	line	78
  1140                           ;pic_adc.h: 78: ADCON0 =0x25;
  1141  0603  3025               	movlw	(025h)
  1142                           	
  1143  0604  009F               	movwf	(31)	;volatile
  1144                           	line	79
  1145                           ;pic_adc.h: 79: while(ADCON0!=0x21);
  1146  0605  2E06               	goto	l53
  1147                           	
  1148  0606                     l53:	
  1149                           	
  1150  0606  081F               	movf	(31),w	;volatile
  1151                           	
  1152  0607  3A21               	xorlw	021h
  1153  0608  1D03               	skipz
  1154  0609  2E0B               	goto	u2951
  1155  060A  2E0C               	goto	u2950
  1156  060B                     u2951:
  1157  060B  2E06               	goto	l53
  1158  060C                     u2950:
  1159                           	
  1160  060C                     l55:	
  1161                           	line	80
  1162                           ;pic_adc.h: 80: adc_temp=ADRESH;
  1163                           	
  1164  060C  081E               	movf	(30),w	;volatile
  1165                           	
  1166  060D  00A7               	movwf	(??_Adc8_Cha+1+0)
  1167  060E  01A8               	clrf	(??_Adc8_Cha+1+0+1)
  1168                           	
  1169  060F  0827               	movf	0+(??_Adc8_Cha+1+0),w
  1170  0610  00F1               	movwf	(113)
  1171  0611  0828               	movf	1+(??_Adc8_Cha+1+0),w
  1172  0612  00F2               	movwf	(113+1)
  1173                           	line	81
  1174                           ;pic_adc.h: 81: adc_temp0=adc_temp0+adc_temp;
  1175                           	
  1176                           	
  1177  0613  0871               	movf	(113),w
  1178  0614  0773               	addwf	(115),w
  1179                           	
  1180  0615  00F3               	movwf	(115)
  1181  0616  0872               	movf	(113+1),w
  1182  0617  1803               	skipnc
  1183  0618  0A72               	incf	(113+1),w
  1184  0619  0774               	addwf	(115+1),w
  1185  061A  00F4               	movwf	1+(115)
  1186                           	line	73
  1187  061B  3001               	movlw	(01h)
  1188  061C  00A7               	movwf	(??_Adc8_Cha+1+0)
  1189                           	
  1190  061D  0827               	movf	(??_Adc8_Cha+1+0),w
  1191  061E  07F9               	addwf	(121),f
  1192  061F  300A               	movlw	(0Ah)
  1193                           	
  1194  0620  0279               	subwf	(121),w
  1195  0621  1C03               	skipc
  1196  0622  2E24               	goto	u2961
  1197  0623  2E25               	goto	u2960
  1198  0624                     u2961:
  1199  0624  2DF7               	goto	l47
  1200  0625                     u2960:
  1201                           	
  1202  0625                     l48:	
  1203                           	line	83
  1204                           ;pic_adc.h: 82: }
  1205                           ;pic_adc.h: 83: }
  1206  0625  2EE2               	goto	l12
  1207                           	line	84
  1208                           	
  1209  0626                     l46:	
  1210                           ;pic_adc.h: 84: else if(val==5)
  1211                           	
  1212  0626  0826               	movf	(_Adc8_Cha_val),w
  1213                           	
  1214  0627  3A05               	xorlw	05h
  1215  0628  1D03               	skipz
  1216  0629  2E2B               	goto	u2971
  1217  062A  2E2C               	goto	u2970
  1218  062B                     u2971:
  1219  062B  2E65               	goto	l57
  1220  062C                     u2970:
  1221                           	line	86
  1222                           ;pic_adc.h: 85: {
  1223                           ;pic_adc.h: 86: adc_temp0=0;
  1224  062C  3000               	movlw	low(0)
  1225                           	
  1226  062D  00F3               	movwf	(115)
  1227  062E  3000               	movlw	high(0)
  1228  062F  00F4               	movwf	((115))+1
  1229                           	line	87
  1230                           ;pic_adc.h: 87: for(adc_j=0;adc_j<10;adc_j++)
  1231  0630  1003               	clrc
  1232                           	
  1233  0631  3000               	movlw	0
  1234  0632  1803               	btfsc	status,0
  1235  0633  3001               	movlw	1
  1236  0634  00F9               	movwf	(121)
  1237  0635  2E36               	goto	l58
  1238                           	line	88
  1239                           	
  1240  0636                     l58:	
  1241                           	line	89
  1242                           ;pic_adc.h: 88: {
  1243                           ;pic_adc.h: 89: ADCON0=0x28;
  1244  0636  3028               	movlw	(028h)
  1245                           	
  1246  0637  009F               	movwf	(31)	;volatile
  1247                           	line	90
  1248                           ;pic_adc.h: 90: ADON=1;
  1249  0638  141F               	bsf	(248/8),(248)&7
  1250                           	line	91
  1251                           ;pic_adc.h: 91: while(adc_del--);
  1252  0639  2E3A               	goto	l61
  1253                           	
  1254  063A                     l61:	
  1255                           	
  1256                           	
  1257  063A  3001               	movlw	low(01h)
  1258  063B  02FD               	subwf	(125),f
  1259  063C  087D               	movf	((125))&07fh,w
  1260                           	
  1261  063D  3AFF               	xorlw	0FFh
  1262  063E  1D03               	skipz
  1263  063F  2E41               	goto	u2991
  1264  0640  2E42               	goto	u2990
  1265  0641                     u2991:
  1266  0641  2E3A               	goto	l61
  1267  0642                     u2990:
  1268                           	
  1269  0642                     l63:	
  1270                           	line	92
  1271                           ;pic_adc.h: 92: ADCON0 =0x2d;
  1272  0642  302D               	movlw	(02Dh)
  1273                           	
  1274  0643  009F               	movwf	(31)	;volatile
  1275                           	line	93
  1276                           ;pic_adc.h: 93: while(ADCON0!=0x29);
  1277  0644  2E45               	goto	l64
  1278                           	
  1279  0645                     l64:	
  1280                           	
  1281  0645  081F               	movf	(31),w	;volatile
  1282                           	
  1283  0646  3A29               	xorlw	029h
  1284  0647  1D03               	skipz
  1285  0648  2E4A               	goto	u3001
  1286  0649  2E4B               	goto	u3000
  1287  064A                     u3001:
  1288  064A  2E45               	goto	l64
  1289  064B                     u3000:
  1290                           	
  1291  064B                     l66:	
  1292                           	line	94
  1293                           ;pic_adc.h: 94: adc_temp=ADRESH;
  1294                           	
  1295  064B  081E               	movf	(30),w	;volatile
  1296                           	
  1297  064C  00A7               	movwf	(??_Adc8_Cha+1+0)
  1298  064D  01A8               	clrf	(??_Adc8_Cha+1+0+1)
  1299                           	
  1300  064E  0827               	movf	0+(??_Adc8_Cha+1+0),w
  1301  064F  00F1               	movwf	(113)
  1302  0650  0828               	movf	1+(??_Adc8_Cha+1+0),w
  1303  0651  00F2               	movwf	(113+1)
  1304                           	line	95
  1305                           ;pic_adc.h: 95: adc_temp0=adc_temp0+adc_temp;
  1306                           	
  1307                           	
  1308  0652  0871               	movf	(113),w
  1309  0653  0773               	addwf	(115),w
  1310                           	
  1311  0654  00F3               	movwf	(115)
  1312  0655  0872               	movf	(113+1),w
  1313  0656  1803               	skipnc
  1314  0657  0A72               	incf	(113+1),w
  1315  0658  0774               	addwf	(115+1),w
  1316  0659  00F4               	movwf	1+(115)
  1317                           	line	87
  1318  065A  3001               	movlw	(01h)
  1319  065B  00A7               	movwf	(??_Adc8_Cha+1+0)
  1320                           	
  1321  065C  0827               	movf	(??_Adc8_Cha+1+0),w
  1322  065D  07F9               	addwf	(121),f
  1323  065E  300A               	movlw	(0Ah)
  1324                           	
  1325  065F  0279               	subwf	(121),w
  1326  0660  1C03               	skipc
  1327  0661  2E63               	goto	u3011
  1328  0662  2E64               	goto	u3010
  1329  0663                     u3011:
  1330  0663  2E36               	goto	l58
  1331  0664                     u3010:
  1332                           	
  1333  0664                     l59:	
  1334                           	line	97
  1335                           ;pic_adc.h: 96: }
  1336                           ;pic_adc.h: 97: }
  1337  0664  2EE2               	goto	l12
  1338                           	line	98
  1339                           	
  1340  0665                     l57:	
  1341                           ;pic_adc.h: 98: else if(val==6)
  1342                           	
  1343  0665  0826               	movf	(_Adc8_Cha_val),w
  1344                           	
  1345  0666  3A06               	xorlw	06h
  1346  0667  1D03               	skipz
  1347  0668  2E6A               	goto	u3021
  1348  0669  2E6B               	goto	u3020
  1349  066A                     u3021:
  1350  066A  2EA4               	goto	l68
  1351  066B                     u3020:
  1352                           	line	100
  1353                           ;pic_adc.h: 99: {
  1354                           ;pic_adc.h: 100: adc_temp0=0;
  1355  066B  3000               	movlw	low(0)
  1356                           	
  1357  066C  00F3               	movwf	(115)
  1358  066D  3000               	movlw	high(0)
  1359  066E  00F4               	movwf	((115))+1
  1360                           	line	101
  1361                           ;pic_adc.h: 101: for(adc_j=0;adc_j<10;adc_j++)
  1362  066F  1003               	clrc
  1363                           	
  1364  0670  3000               	movlw	0
  1365  0671  1803               	btfsc	status,0
  1366  0672  3001               	movlw	1
  1367  0673  00F9               	movwf	(121)
  1368  0674  2E75               	goto	l69
  1369                           	line	102
  1370                           	
  1371  0675                     l69:	
  1372                           	line	103
  1373                           ;pic_adc.h: 102: {
  1374                           ;pic_adc.h: 103: ADCON0=0x30;
  1375  0675  3030               	movlw	(030h)
  1376                           	
  1377  0676  009F               	movwf	(31)	;volatile
  1378                           	line	104
  1379                           ;pic_adc.h: 104: ADON=1;
  1380  0677  141F               	bsf	(248/8),(248)&7
  1381                           	line	105
  1382                           ;pic_adc.h: 105: while(adc_del--);
  1383  0678  2E79               	goto	l72
  1384                           	
  1385  0679                     l72:	
  1386                           	
  1387                           	
  1388  0679  3001               	movlw	low(01h)
  1389  067A  02FD               	subwf	(125),f
  1390  067B  087D               	movf	((125))&07fh,w
  1391                           	
  1392  067C  3AFF               	xorlw	0FFh
  1393  067D  1D03               	skipz
  1394  067E  2E80               	goto	u3041
  1395  067F  2E81               	goto	u3040
  1396  0680                     u3041:
  1397  0680  2E79               	goto	l72
  1398  0681                     u3040:
  1399                           	
  1400  0681                     l74:	
  1401                           	line	106
  1402                           ;pic_adc.h: 106: ADCON0 =0x35;
  1403  0681  3035               	movlw	(035h)
  1404                           	
  1405  0682  009F               	movwf	(31)	;volatile
  1406                           	line	107
  1407                           ;pic_adc.h: 107: while(ADCON0!=0x31);
  1408  0683  2E84               	goto	l75
  1409                           	
  1410  0684                     l75:	
  1411                           	
  1412  0684  081F               	movf	(31),w	;volatile
  1413                           	
  1414  0685  3A31               	xorlw	031h
  1415  0686  1D03               	skipz
  1416  0687  2E89               	goto	u3051
  1417  0688  2E8A               	goto	u3050
  1418  0689                     u3051:
  1419  0689  2E84               	goto	l75
  1420  068A                     u3050:
  1421                           	
  1422  068A                     l77:	
  1423                           	line	108
  1424                           ;pic_adc.h: 108: adc_temp=ADRESH;
  1425                           	
  1426  068A  081E               	movf	(30),w	;volatile
  1427                           	
  1428  068B  00A7               	movwf	(??_Adc8_Cha+1+0)
  1429  068C  01A8               	clrf	(??_Adc8_Cha+1+0+1)
  1430                           	
  1431  068D  0827               	movf	0+(??_Adc8_Cha+1+0),w
  1432  068E  00F1               	movwf	(113)
  1433  068F  0828               	movf	1+(??_Adc8_Cha+1+0),w
  1434  0690  00F2               	movwf	(113+1)
  1435                           	line	109
  1436                           ;pic_adc.h: 109: adc_temp0=adc_temp0+adc_temp;
  1437                           	
  1438                           	
  1439  0691  0871               	movf	(113),w
  1440  0692  0773               	addwf	(115),w
  1441                           	
  1442  0693  00F3               	movwf	(115)
  1443  0694  0872               	movf	(113+1),w
  1444  0695  1803               	skipnc
  1445  0696  0A72               	incf	(113+1),w
  1446  0697  0774               	addwf	(115+1),w
  1447  0698  00F4               	movwf	1+(115)
  1448                           	line	101
  1449  0699  3001               	movlw	(01h)
  1450  069A  00A7               	movwf	(??_Adc8_Cha+1+0)
  1451                           	
  1452  069B  0827               	movf	(??_Adc8_Cha+1+0),w
  1453  069C  07F9               	addwf	(121),f
  1454  069D  300A               	movlw	(0Ah)
  1455                           	
  1456  069E  0279               	subwf	(121),w
  1457  069F  1C03               	skipc
  1458  06A0  2EA2               	goto	u3061
  1459  06A1  2EA3               	goto	u3060
  1460  06A2                     u3061:
  1461  06A2  2E75               	goto	l69
  1462  06A3                     u3060:
  1463                           	
  1464  06A3                     l70:	
  1465                           	line	111
  1466                           ;pic_adc.h: 110: }
  1467                           ;pic_adc.h: 111: }
  1468  06A3  2EE2               	goto	l12
  1469                           	line	112
  1470                           	
  1471  06A4                     l68:	
  1472                           ;pic_adc.h: 112: else if(val==7)
  1473                           	
  1474  06A4  0826               	movf	(_Adc8_Cha_val),w
  1475                           	
  1476  06A5  3A07               	xorlw	07h
  1477  06A6  1D03               	skipz
  1478  06A7  2EA9               	goto	u3071
  1479  06A8  2EAA               	goto	u3070
  1480  06A9                     u3071:
  1481  06A9  2EE2               	goto	l12
  1482  06AA                     u3070:
  1483                           	line	114
  1484                           ;pic_adc.h: 113: {
  1485                           ;pic_adc.h: 114: adc_temp0=0;
  1486  06AA  3000               	movlw	low(0)
  1487                           	
  1488  06AB  00F3               	movwf	(115)
  1489  06AC  3000               	movlw	high(0)
  1490  06AD  00F4               	movwf	((115))+1
  1491                           	line	115
  1492                           ;pic_adc.h: 115: for(adc_j=0;adc_j<10;adc_j++)
  1493  06AE  1003               	clrc
  1494                           	
  1495  06AF  3000               	movlw	0
  1496  06B0  1803               	btfsc	status,0
  1497  06B1  3001               	movlw	1
  1498  06B2  00F9               	movwf	(121)
  1499  06B3  2EB4               	goto	l80
  1500                           	line	116
  1501                           	
  1502  06B4                     l80:	
  1503                           	line	117
  1504                           ;pic_adc.h: 116: {
  1505                           ;pic_adc.h: 117: ADCON0=0x38;
  1506  06B4  3038               	movlw	(038h)
  1507                           	
  1508  06B5  009F               	movwf	(31)	;volatile
  1509                           	line	118
  1510                           ;pic_adc.h: 118: ADON=1;
  1511  06B6  141F               	bsf	(248/8),(248)&7
  1512                           	line	119
  1513                           ;pic_adc.h: 119: while(adc_del--);
  1514  06B7  2EB8               	goto	l83
  1515                           	
  1516  06B8                     l83:	
  1517                           	
  1518                           	
  1519  06B8  3001               	movlw	low(01h)
  1520  06B9  02FD               	subwf	(125),f
  1521  06BA  087D               	movf	((125))&07fh,w
  1522                           	
  1523  06BB  3AFF               	xorlw	0FFh
  1524  06BC  1D03               	skipz
  1525  06BD  2EBF               	goto	u3091
  1526  06BE  2EC0               	goto	u3090
  1527  06BF                     u3091:
  1528  06BF  2EB8               	goto	l83
  1529  06C0                     u3090:
  1530                           	
  1531  06C0                     l85:	
  1532                           	line	120
  1533                           ;pic_adc.h: 120: ADCON0 =0x3d;
  1534  06C0  303D               	movlw	(03Dh)
  1535                           	
  1536  06C1  009F               	movwf	(31)	;volatile
  1537                           	line	121
  1538                           ;pic_adc.h: 121: while(ADCON0!=0x39);
  1539  06C2  2EC3               	goto	l86
  1540                           	
  1541  06C3                     l86:	
  1542                           	
  1543  06C3  081F               	movf	(31),w	;volatile
  1544                           	
  1545  06C4  3A39               	xorlw	039h
  1546  06C5  1D03               	skipz
  1547  06C6  2EC8               	goto	u3101
  1548  06C7  2EC9               	goto	u3100
  1549  06C8                     u3101:
  1550  06C8  2EC3               	goto	l86
  1551  06C9                     u3100:
  1552                           	
  1553  06C9                     l88:	
  1554                           	line	122
  1555                           ;pic_adc.h: 122: adc_temp=ADRESH;
  1556                           	
  1557  06C9  081E               	movf	(30),w	;volatile
  1558                           	
  1559  06CA  00A7               	movwf	(??_Adc8_Cha+1+0)
  1560  06CB  01A8               	clrf	(??_Adc8_Cha+1+0+1)
  1561                           	
  1562  06CC  0827               	movf	0+(??_Adc8_Cha+1+0),w
  1563  06CD  00F1               	movwf	(113)
  1564  06CE  0828               	movf	1+(??_Adc8_Cha+1+0),w
  1565  06CF  00F2               	movwf	(113+1)
  1566                           	line	123
  1567                           ;pic_adc.h: 123: adc_temp0=adc_temp0+adc_temp;
  1568                           	
  1569                           	
  1570  06D0  0871               	movf	(113),w
  1571  06D1  0773               	addwf	(115),w
  1572                           	
  1573  06D2  00F3               	movwf	(115)
  1574  06D3  0872               	movf	(113+1),w
  1575  06D4  1803               	skipnc
  1576  06D5  0A72               	incf	(113+1),w
  1577  06D6  0774               	addwf	(115+1),w
  1578  06D7  00F4               	movwf	1+(115)
  1579                           	line	115
  1580  06D8  3001               	movlw	(01h)
  1581  06D9  00A7               	movwf	(??_Adc8_Cha+1+0)
  1582                           	
  1583  06DA  0827               	movf	(??_Adc8_Cha+1+0),w
  1584  06DB  07F9               	addwf	(121),f
  1585  06DC  300A               	movlw	(0Ah)
  1586                           	
  1587  06DD  0279               	subwf	(121),w
  1588  06DE  1C03               	skipc
  1589  06DF  2EE1               	goto	u3111
  1590  06E0  2EE2               	goto	u3110
  1591  06E1                     u3111:
  1592  06E1  2EB4               	goto	l80
  1593  06E2                     u3110:
  1594                           	
  1595  06E2                     l81:	
  1596                           	line	125
  1597                           	
  1598  06E2                     l79:	
  1599                           	line	126
  1600                           	
  1601  06E2                     l78:	
  1602                           	
  1603  06E2                     l67:	
  1604                           	
  1605  06E2                     l56:	
  1606                           	
  1607  06E2                     l45:	
  1608                           	
  1609  06E2                     l34:	
  1610                           	
  1611  06E2                     l23:	
  1612                           	
  1613  06E2                     l12:	
  1614                           ;pic_adc.h: 124: }
  1615                           ;pic_adc.h: 125: }
  1616                           ;pic_adc.h: 126: adc_val=adc_temp0/10;
  1617  06E2  300A               	movlw	low(0Ah)
  1618                           	
  1619  06E3  00B2               	movwf	(0+?___lwdiv+02h)&07fh
  1620  06E4  3000               	movlw	high(0Ah)
  1621  06E5  00B3               	movwf	((0+?___lwdiv+02h)&07fh)+1
  1622                           	
  1623                           	
  1624  06E6  0873               	movf	(115),w
  1625  06E7  01B0               	clrf	(?___lwdiv)
  1626  06E8  07B0               	addwf	(?___lwdiv)
  1627  06E9  0874               	movf	(115+1),w
  1628  06EA  01B1               	clrf	(?___lwdiv+1)
  1629  06EB  07B1               	addwf	(?___lwdiv+1)
  1630  06EC  120A  118A  27B6   	fcall	___lwdiv
              120A  118A         
  1631  06F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1632  06F2  1303               	bcf	status, 6	;RP2=0, select bank0
  1633  06F3  0830               	movf	(0+?___lwdiv),w
  1634                           	
  1635  06F4  00A7               	movwf	(??_Adc8_Cha+1+0)
  1636                           	
  1637  06F5  0827               	movf	(??_Adc8_Cha+1+0),w
  1638  06F6  00FA               	movwf	(122)
  1639                           	line	127
  1640                           	
  1641  06F7  087A               	movf	(122),w
  1642                           	
  1643  06F8  00A7               	movwf	(??_Adc8_Cha+1+0)
  1644  06F9  01A8               	clrf	(??_Adc8_Cha+1+0+1)
  1645                           	
  1646  06FA  0827               	movf	0+(??_Adc8_Cha+1+0),w
  1647  06FB  00A4               	movwf	(?_Adc8_Cha)
  1648  06FC  0828               	movf	1+(??_Adc8_Cha+1+0),w
  1649  06FD  00A5               	movwf	(?_Adc8_Cha+1)
  1650  06FE  2EFF               	goto	l1
  1651                           	line	128
  1652                           ;pic_adc.h: 128: }
  1653  06FF                     l1:	
  1654  06FF  0008               	return
  1655                           ; =============== function _Adc8_Cha ends =====
                                 ==========
  1656                           
  1657                           GLOBAL __end_of_Adc8_Cha
  1658  0700                     	__end_of_Adc8_Cha:
  1659                           	FNSIZE	_Adc8_Cha,3,2
  1660                           	signat	_Adc8_Cha,4218
  1661                           	global	_Lcd8_Display
  1662                           	global	??_Lcd8_Display
  1663                           	global	?_Lcd8_Display
  1664                           
  1665                           ; *************** function _Lcd8_Display ******
                                 *********
  1666                           ; Defined at:
  1667                           ;		line 51 in file "C:\Users\HP\Desktop\pic con
                                 troller\A2D CONVERTOR\pic_lcd8.h"
  1668                           ; Parameters:
  1669                           ;		com         	reg:   wr	type: unsigned char 
  1670                           ;		word        	offs:   0	type: PTR const unsig
                                 ned char ; Largest target is 17
  1671                           ;		 -> STR_3(17), STR_2(17), STR_1(17), 
  1672                           ;		n           	offs:   1	type: unsigned int 
  1673                           ; Auto variables:
  1674                           ;		com         	       	type: unsigned char 
  1675                           ;		Lcd_i       	       	type: unsigned char 
  1676                           ; Return value:
  1677                           ;		type: void 
  1678                           ;		size: 0
  1679                           ; Registers used:
  1680                           ;		wreg, status,2, status,0, pclath, cstack
  1681                           ; Tracked objects:
  1682                           ;		On entry : 300/0
  1683                           ;		On exit  : 0/0
  1684                           ;		Unchanged: 0/0
  1685                           ; Data sizes:
  1686                           ;		Autos:    2
  1687                           ;		Params:   3
  1688                           ;		Temp:     2
  1689                           ;		Total:    7
  1690                           ; This function calls:
  1691                           ;		_Lcd8_Write
  1692                           ; This function is called by:
  1693                           ;		_main
  1694                           ; This function uses a non-reentrant model
  1695                           ; 
  1696                           	psect	text91,local,class=CODE,delta=2
  1697                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_lcd8.h"
  1698                           	line	51
  1699                           ;pic_lcd8.h: 50: void Lcd8_Display(unsigned cha
                                 r com,const unsigned char *word,unsigned int n)
  1700                           ;pic_lcd8.h: 51: {
  1701                           	
  1702  03AD                     _Lcd8_Display:	
  1703                           ; Regs used in _Lcd8_Display: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  1704                           ;_Lcd8_Display_com stored from wreg
  1705                           	line	54
  1706                           	
  1707  03AD  00A7               	movwf	(_Lcd8_Display_com)
  1708                           ;pic_lcd8.h: 52: unsigned char Lcd_i;
  1709                           ;pic_lcd8.h: 54: for(Lcd_i=0;Lcd_i<n;Lcd_i++)
  1710  03AE  1003               	clrc
  1711                           	
  1712  03AF  3000               	movlw	0
  1713  03B0  1803               	btfsc	status,0
  1714  03B1  3001               	movlw	1
  1715  03B2  00A8               	movwf	(_Lcd8_Display_Lcd_i)
  1716  03B3  2BC9               	goto	l184
  1717                           	line	55
  1718                           	
  1719  03B4                     l181:	
  1720                           	line	56
  1721                           ;pic_lcd8.h: 55: {
  1722                           ;pic_lcd8.h: 56: Lcd8_Write(com+Lcd_i,word[Lcd_
                                 i]);
  1723                           	
  1724                           	
  1725  03B4  0824               	movf	(_Lcd8_Display_word),w
  1726                           	
  1727  03B5  0728               	addwf	(_Lcd8_Display_Lcd_i),w
  1728  03B6  120A  118A  2709   	fcall	stringdir
              120A  118A         
  1729                           	
  1730  03BB  00B0               	movwf	(?_Lcd8_Write)
  1731                           	
  1732  03BC  0828               	movf	(_Lcd8_Display_Lcd_i),w
  1733                           	
  1734                           	
  1735  03BD  0727               	addwf	(_Lcd8_Display_com),w
  1736  03BE  120A  118A  2389   	fcall	_Lcd8_Write
              120A  118A         
  1737                           	line	54
  1738  03C3  3001               	movlw	(01h)
  1739  03C4  1283               	bcf	status, 5	;RP0=0, select bank0
  1740  03C5  1303               	bcf	status, 6	;RP2=0, select bank0
  1741  03C6  00A9               	movwf	(??_Lcd8_Display+2+0)
  1742                           	
  1743  03C7  0829               	movf	(??_Lcd8_Display+2+0),w
  1744  03C8  07A8               	addwf	(_Lcd8_Display_Lcd_i),f
  1745                           	
  1746  03C9                     l184:	
  1747                           	
  1748                           	
  1749  03C9  0828               	movf	(_Lcd8_Display_Lcd_i),w
  1750  03CA  1383               	bcf	status, 7	;select IRP bank0
  1751                           	
  1752  03CB  00A9               	movwf	(??_Lcd8_Display+2+0)
  1753  03CC  01AA               	clrf	(??_Lcd8_Display+2+0+1)
  1754  03CD  0826               	movf	(_Lcd8_Display_n+1),w
  1755  03CE  022A               	subwf	1+(??_Lcd8_Display+2+0),w
  1756  03CF  1D03               	skipz
  1757  03D0  2BD3               	goto	u1185
  1758  03D1  0825               	movf	(_Lcd8_Display_n),w
  1759  03D2  0229               	subwf	0+(??_Lcd8_Display+2+0),w
  1760  03D3                     u1185:
  1761  03D3  1C03               	skipc
  1762  03D4  2BD6               	goto	u1181
  1763  03D5  2BD7               	goto	u1180
  1764  03D6                     u1181:
  1765  03D6  2BB4               	goto	l181
  1766  03D7                     u1180:
  1767                           	
  1768  03D7                     l182:	
  1769                           	line	58
  1770                           ;pic_lcd8.h: 57: }
  1771                           ;pic_lcd8.h: 58: }
  1772  03D7                     l180:	
  1773  03D7  0008               	return
  1774                           ; =============== function _Lcd8_Display ends =
                                 ==============
  1775                           
  1776                           GLOBAL __end_of_Lcd8_Display
  1777  03D8                     	__end_of_Lcd8_Display:
  1778                           	FNSIZE	_Lcd8_Display,4,3
  1779                           	signat	_Lcd8_Display,12408
  1780                           	global	_Lcd8_Init
  1781                           	global	??_Lcd8_Init
  1782                           	global	?_Lcd8_Init
  1783                           
  1784                           ; *************** function _Lcd8_Init *********
                                 ******
  1785                           ; Defined at:
  1786                           ;		line 21 in file "C:\Users\HP\Desktop\pic con
                                 troller\A2D CONVERTOR\pic_lcd8.h"
  1787                           ; Parameters:
  1788                           ;		None
  1789                           ; Auto variables:
  1790                           ;		None
  1791                           ; Return value:
  1792                           ;		type: void 
  1793                           ;		size: 0
  1794                           ; Registers used:
  1795                           ;		wreg, status,2, status,0, pclath, cstack
  1796                           ; Tracked objects:
  1797                           ;		On entry : BFF/100
  1798                           ;		On exit  : 0/0
  1799                           ;		Unchanged: 0/0
  1800                           ; Data sizes:
  1801                           ;		Autos:    0
  1802                           ;		Params:   0
  1803                           ;		Temp:     0
  1804                           ;		Total:    0
  1805                           ; This function calls:
  1806                           ;		_Lcd8_Command
  1807                           ; This function is called by:
  1808                           ;		_main
  1809                           ; This function uses a non-reentrant model
  1810                           ; 
  1811                           	psect	text92,local,class=CODE,delta=2
  1812                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_lcd8.h"
  1813                           	line	21
  1814                           ;pic_lcd8.h: 20: void Lcd8_Init()
  1815                           ;pic_lcd8.h: 21: {
  1816                           	
  1817  0352                     _Lcd8_Init:	
  1818                           ; Regs used in _Lcd8_Init: [wreg+status,2+statu
                                 s,0+pclath+cstack]
  1819                           	line	22
  1820                           ;pic_lcd8.h: 22: Lcd8_Command(0x38);
  1821  0352  3038               	movlw	(038h)
  1822  0353  120A  118A  236B   	fcall	_Lcd8_Command
              120A  118A         
  1823                           	line	23
  1824                           ;pic_lcd8.h: 23: Lcd8_Command(0x06);
  1825  0358  3006               	movlw	(06h)
  1826  0359  120A  118A  236B   	fcall	_Lcd8_Command
              120A  118A         
  1827                           	line	24
  1828                           ;pic_lcd8.h: 24: Lcd8_Command(0x0c);
  1829  035E  300C               	movlw	(0Ch)
  1830  035F  120A  118A  236B   	fcall	_Lcd8_Command
              120A  118A         
  1831                           	line	25
  1832                           ;pic_lcd8.h: 25: Lcd8_Command(0x01);
  1833  0364  3001               	movlw	(01h)
  1834  0365  120A  118A  236B   	fcall	_Lcd8_Command
              120A  118A         
  1835                           	line	26
  1836                           ;pic_lcd8.h: 26: }
  1837  036A                     l177:	
  1838  036A  0008               	return
  1839                           ; =============== function _Lcd8_Init ends ====
                                 ===========
  1840                           
  1841                           GLOBAL __end_of_Lcd8_Init
  1842  036B                     	__end_of_Lcd8_Init:
  1843                           	FNSIZE	_Lcd8_Init,0,0
  1844                           	signat	_Lcd8_Init,88
  1845                           	global	_Lcd8_Decimal3
  1846                           	global	??_Lcd8_Decimal3
  1847                           	global	?_Lcd8_Decimal3
  1848                           
  1849                           ; *************** function _Lcd8_Decimal3 *****
                                 **********
  1850                           ; Defined at:
  1851                           ;		line 74 in file "C:\Users\HP\Desktop\pic con
                                 troller\A2D CONVERTOR\pic_lcd8.h"
  1852                           ; Parameters:
  1853                           ;		com         	reg:   wr	type: unsigned char 
  1854                           ;		val         	offs:   0	type: unsigned char 
  1855                           ; Auto variables:
  1856                           ;		com         	       	type: unsigned char 
  1857                           ;		Lcd_o       	       	type: unsigned int 
  1858                           ;		Lcd_h       	       	type: unsigned int 
  1859                           ;		Lcd_t       	       	type: unsigned int 
  1860                           ;		Lcd_hr      	       	type: unsigned int 
  1861                           ; Return value:
  1862                           ;		type: void 
  1863                           ;		size: 0
  1864                           ; Registers used:
  1865                           ;		wreg, status,2, status,0, pclath, cstack
  1866                           ; Tracked objects:
  1867                           ;		On entry : B00/0
  1868                           ;		On exit  : 0/0
  1869                           ;		Unchanged: 0/0
  1870                           ; Data sizes:
  1871                           ;		Autos:    9
  1872                           ;		Params:   1
  1873                           ;		Temp:     2
  1874                           ;		Total:   12
  1875                           ; This function calls:
  1876                           ;		___awdiv
  1877                           ;		___awmod
  1878                           ;		___lwdiv
  1879                           ;		___lwmod
  1880                           ;		_Lcd8_Write
  1881                           ; This function is called by:
  1882                           ;		_main
  1883                           ; This function uses a non-reentrant model
  1884                           ; 
  1885                           	psect	text93,local,class=CODE,delta=2
  1886                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_lcd8.h"
  1887                           	line	74
  1888                           ;pic_lcd8.h: 73: void Lcd8_Decimal3(unsigned ch
                                 ar com,unsigned char val)
  1889                           ;pic_lcd8.h: 74: {
  1890                           	
  1891  0731                     _Lcd8_Decimal3:	
  1892                           ; Regs used in _Lcd8_Decimal3: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
  1893                           ;_Lcd8_Decimal3_com stored from wreg
  1894                           	line	77
  1895                           	
  1896  0731  00A5               	movwf	(_Lcd8_Decimal3_com)
  1897                           ;pic_lcd8.h: 75: unsigned int Lcd_h,Lcd_hr,Lcd_
                                 t,Lcd_o;
  1898                           ;pic_lcd8.h: 77: Lcd_h=val/100;
  1899  0732  3064               	movlw	low(064h)
  1900                           	
  1901  0733  00B2               	movwf	(0+?___awdiv+02h)&07fh
  1902  0734  3000               	movlw	high(064h)
  1903  0735  00B3               	movwf	((0+?___awdiv+02h)&07fh)+1
  1904                           	
  1905  0736  0824               	movf	(_Lcd8_Decimal3_val),w
  1906                           	
  1907  0737  00AE               	movwf	(??_Lcd8_Decimal3+9+0)
  1908  0738  01AF               	clrf	(??_Lcd8_Decimal3+9+0+1)
  1909                           	
  1910  0739  082E               	movf	0+(??_Lcd8_Decimal3+9+0),w
  1911  073A  00B0               	movwf	(?___awdiv)
  1912  073B  082F               	movf	1+(??_Lcd8_Decimal3+9+0),w
  1913  073C  00B1               	movwf	(?___awdiv+1)
  1914  073D  120A  118A  246B   	fcall	___awdiv
              120A  118A         
  1915  0742  1283               	bcf	status, 5	;RP0=0, select bank0
  1916  0743  1303               	bcf	status, 6	;RP2=0, select bank0
  1917                           	
  1918  0744  0830               	movf	(0+?___awdiv),w
  1919  0745  01A8               	clrf	(_Lcd8_Decimal3_Lcd_h)
  1920  0746  07A8               	addwf	(_Lcd8_Decimal3_Lcd_h)
  1921  0747  0831               	movf	(1+?___awdiv),w
  1922  0748  01A9               	clrf	(_Lcd8_Decimal3_Lcd_h+1)
  1923  0749  07A9               	addwf	(_Lcd8_Decimal3_Lcd_h+1)
  1924                           	line	78
  1925                           ;pic_lcd8.h: 78: Lcd_hr=val%100;
  1926  074A  3064               	movlw	low(064h)
  1927                           	
  1928  074B  00B2               	movwf	(0+?___awmod+02h)&07fh
  1929  074C  3000               	movlw	high(064h)
  1930  074D  00B3               	movwf	((0+?___awmod+02h)&07fh)+1
  1931                           	
  1932  074E  0824               	movf	(_Lcd8_Decimal3_val),w
  1933  074F  1383               	bcf	status, 7	;select IRP bank0
  1934                           	
  1935  0750  00AE               	movwf	(??_Lcd8_Decimal3+9+0)
  1936  0751  01AF               	clrf	(??_Lcd8_Decimal3+9+0+1)
  1937                           	
  1938  0752  082E               	movf	0+(??_Lcd8_Decimal3+9+0),w
  1939  0753  00B0               	movwf	(?___awmod)
  1940  0754  082F               	movf	1+(??_Lcd8_Decimal3+9+0),w
  1941  0755  00B1               	movwf	(?___awmod+1)
  1942  0756  120A  118A  2410   	fcall	___awmod
              120A  118A         
  1943  075B  1283               	bcf	status, 5	;RP0=0, select bank0
  1944  075C  1303               	bcf	status, 6	;RP2=0, select bank0
  1945                           	
  1946  075D  0830               	movf	(0+?___awmod),w
  1947  075E  01AC               	clrf	(_Lcd8_Decimal3_Lcd_hr)
  1948  075F  07AC               	addwf	(_Lcd8_Decimal3_Lcd_hr)
  1949  0760  0831               	movf	(1+?___awmod),w
  1950  0761  01AD               	clrf	(_Lcd8_Decimal3_Lcd_hr+1)
  1951  0762  07AD               	addwf	(_Lcd8_Decimal3_Lcd_hr+1)
  1952                           	line	79
  1953                           ;pic_lcd8.h: 79: Lcd_t=Lcd_hr/10;
  1954  0763  300A               	movlw	low(0Ah)
  1955                           	
  1956  0764  00B2               	movwf	(0+?___lwdiv+02h)&07fh
  1957  0765  3000               	movlw	high(0Ah)
  1958  0766  00B3               	movwf	((0+?___lwdiv+02h)&07fh)+1
  1959                           	
  1960                           	
  1961  0767  082C               	movf	(_Lcd8_Decimal3_Lcd_hr),w
  1962  0768  01B0               	clrf	(?___lwdiv)
  1963  0769  07B0               	addwf	(?___lwdiv)
  1964  076A  082D               	movf	(_Lcd8_Decimal3_Lcd_hr+1),w
  1965  076B  01B1               	clrf	(?___lwdiv+1)
  1966  076C  07B1               	addwf	(?___lwdiv+1)
  1967  076D  120A  118A  27B6   	fcall	___lwdiv
              120A  118A         
  1968  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  1969  0773  1303               	bcf	status, 6	;RP2=0, select bank0
  1970                           	
  1971  0774  0830               	movf	(0+?___lwdiv),w
  1972  0775  01A6               	clrf	(_Lcd8_Decimal3_Lcd_t)
  1973  0776  07A6               	addwf	(_Lcd8_Decimal3_Lcd_t)
  1974  0777  0831               	movf	(1+?___lwdiv),w
  1975  0778  01A7               	clrf	(_Lcd8_Decimal3_Lcd_t+1)
  1976  0779  07A7               	addwf	(_Lcd8_Decimal3_Lcd_t+1)
  1977                           	line	80
  1978                           ;pic_lcd8.h: 80: Lcd_o=Lcd_hr%10;
  1979  077A  300A               	movlw	low(0Ah)
  1980                           	
  1981  077B  00B2               	movwf	(0+?___lwmod+02h)&07fh
  1982  077C  3000               	movlw	high(0Ah)
  1983  077D  00B3               	movwf	((0+?___lwmod+02h)&07fh)+1
  1984                           	
  1985                           	
  1986  077E  082C               	movf	(_Lcd8_Decimal3_Lcd_hr),w
  1987  077F  01B0               	clrf	(?___lwmod)
  1988  0780  07B0               	addwf	(?___lwmod)
  1989  0781  082D               	movf	(_Lcd8_Decimal3_Lcd_hr+1),w
  1990  0782  01B1               	clrf	(?___lwmod+1)
  1991  0783  07B1               	addwf	(?___lwmod+1)
  1992  0784  120A  118A  23D8   	fcall	___lwmod
              120A  118A         
  1993  0789  1283               	bcf	status, 5	;RP0=0, select bank0
  1994  078A  1303               	bcf	status, 6	;RP2=0, select bank0
  1995                           	
  1996  078B  0830               	movf	(0+?___lwmod),w
  1997  078C  01AA               	clrf	(_Lcd8_Decimal3_Lcd_o)
  1998  078D  07AA               	addwf	(_Lcd8_Decimal3_Lcd_o)
  1999  078E  0831               	movf	(1+?___lwmod),w
  2000  078F  01AB               	clrf	(_Lcd8_Decimal3_Lcd_o+1)
  2001  0790  07AB               	addwf	(_Lcd8_Decimal3_Lcd_o+1)
  2002                           	line	82
  2003                           ;pic_lcd8.h: 82: Lcd8_Write(com,Lcd_h+0x30);
  2004                           	
  2005  0791  0828               	movf	(_Lcd8_Decimal3_Lcd_h),w
  2006  0792  1383               	bcf	status, 7	;select IRP bank0
  2007                           	
  2008  0793  3E30               	addlw	030h
  2009                           	
  2010  0794  00B0               	movwf	(?_Lcd8_Write)
  2011                           	
  2012  0795  0825               	movf	(_Lcd8_Decimal3_com),w
  2013                           	
  2014  0796  120A  118A  2389   	fcall	_Lcd8_Write
              120A  118A         
  2015                           	line	83
  2016                           ;pic_lcd8.h: 83: Lcd8_Write(com+1,Lcd_t+0x30);
  2017  079B  1283               	bcf	status, 5	;RP0=0, select bank0
  2018  079C  1303               	bcf	status, 6	;RP2=0, select bank0
  2019                           	
  2020  079D  0826               	movf	(_Lcd8_Decimal3_Lcd_t),w
  2021  079E  1383               	bcf	status, 7	;select IRP bank0
  2022                           	
  2023  079F  3E30               	addlw	030h
  2024                           	
  2025  07A0  00B0               	movwf	(?_Lcd8_Write)
  2026                           	
  2027  07A1  0825               	movf	(_Lcd8_Decimal3_com),w
  2028                           	
  2029  07A2  3E01               	addlw	01h
  2030  07A3  120A  118A  2389   	fcall	_Lcd8_Write
              120A  118A         
  2031                           	line	84
  2032                           ;pic_lcd8.h: 84: Lcd8_Write(com+2,Lcd_o+0x30);
  2033  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2034  07A9  1303               	bcf	status, 6	;RP2=0, select bank0
  2035                           	
  2036  07AA  082A               	movf	(_Lcd8_Decimal3_Lcd_o),w
  2037  07AB  1383               	bcf	status, 7	;select IRP bank0
  2038                           	
  2039  07AC  3E30               	addlw	030h
  2040                           	
  2041  07AD  00B0               	movwf	(?_Lcd8_Write)
  2042                           	
  2043  07AE  0825               	movf	(_Lcd8_Decimal3_com),w
  2044                           	
  2045  07AF  3E02               	addlw	02h
  2046  07B0  120A  118A  2389   	fcall	_Lcd8_Write
              120A  118A         
  2047                           	line	85
  2048                           ;pic_lcd8.h: 85: }
  2049  07B5                     l186:	
  2050  07B5  0008               	return
  2051                           ; =============== function _Lcd8_Decimal3 ends 
                                 ===============
  2052                           
  2053                           GLOBAL __end_of_Lcd8_Decimal3
  2054  07B6                     	__end_of_Lcd8_Decimal3:
  2055                           	FNSIZE	_Lcd8_Decimal3,11,1
  2056                           	signat	_Lcd8_Decimal3,8312
  2057                           	global	___awdiv
  2058                           	global	??___awdiv
  2059                           	global	?___awdiv
  2060                           
  2061                           ; *************** function ___awdiv ***********
                                 ****
  2062                           ; Defined at:
  2063                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\awdiv.c"
  2064                           ; Parameters:
  2065                           ;		dividend    	offs:   0	type: int 
  2066                           ;		divisor     	offs:   2	type: int 
  2067                           ; Auto variables:
  2068                           ;		counter     	       	type: unsigned char 
  2069                           ;		sign        	       	type: unsigned char 
  2070                           ;		quotient    	       	type: int 
  2071                           ; Return value:
  2072                           ;		type: int 
  2073                           ;		size: 2
  2074                           ; Registers used:
  2075                           ;		wreg, status,2, status,0
  2076                           ; Tracked objects:
  2077                           ;		On entry : B00/0
  2078                           ;		On exit  : 0/0
  2079                           ;		Unchanged: 0/0
  2080                           ; Data sizes:
  2081                           ;		Autos:    4
  2082                           ;		Params:   4
  2083                           ;		Temp:     1
  2084                           ;		Total:    9
  2085                           ; This function calls:
  2086                           ;		Nothing
  2087                           ; This function is called by:
  2088                           ;		_Lcd8_Decimal3
  2089                           ; This function uses a non-reentrant model
  2090                           ; 
  2091                           	psect	text94,local,class=CODE,delta=2
  2092                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\awdiv.c"
  2093                           	line	5
  2094                           	
  2095  046B                     ___awdiv:	
  2096                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  2097                           	line	9
  2098  046B  1003               	clrc
  2099                           	
  2100  046C  3000               	movlw	0
  2101  046D  1803               	btfsc	status,0
  2102  046E  3001               	movlw	1
  2103  046F  00B4               	movwf	(___awdiv_sign)
  2104                           	line	10
  2105                           	
  2106  0470  1FB3               	btfss	(___awdiv_divisor+1),7
  2107  0471  2C73               	goto	u1761
  2108  0472  2C74               	goto	u1760
  2109  0473                     u1761:
  2110  0473  2C7C               	goto	l367
  2111  0474                     u1760:
  2112                           	line	11
  2113                           	
  2114  0474  09B2               	comf	(___awdiv_divisor),f
  2115  0475  09B3               	comf	(___awdiv_divisor+1),f
  2116  0476  0AB2               	incf	(___awdiv_divisor),f
  2117  0477  1903               	skipnz
  2118  0478  0AB3               	incf	(___awdiv_divisor+1),f
  2119                           	
  2120                           	line	12
  2121                           	
  2122  0479  01B4               	clrf	(___awdiv_sign)
  2123  047A  1403               	bsf	status,0
  2124  047B  0DB4               	rlf	(___awdiv_sign),f
  2125                           	line	13
  2126                           	
  2127  047C                     l367:	
  2128                           	line	14
  2129                           	
  2130  047C  1FB1               	btfss	(___awdiv_dividend+1),7
  2131  047D  2C7F               	goto	u1771
  2132  047E  2C80               	goto	u1770
  2133  047F                     u1771:
  2134  047F  2C89               	goto	l368
  2135  0480                     u1770:
  2136                           	line	15
  2137                           	
  2138  0480  09B0               	comf	(___awdiv_dividend),f
  2139  0481  09B1               	comf	(___awdiv_dividend+1),f
  2140  0482  0AB0               	incf	(___awdiv_dividend),f
  2141  0483  1903               	skipnz
  2142  0484  0AB1               	incf	(___awdiv_dividend+1),f
  2143                           	
  2144                           	line	16
  2145  0485  3001               	movlw	(01h)
  2146  0486  00B8               	movwf	(??___awdiv+4+0)
  2147                           	
  2148  0487  0838               	movf	(??___awdiv+4+0),w
  2149  0488  06B4               	xorwf	(___awdiv_sign),f
  2150                           	line	17
  2151                           	
  2152  0489                     l368:	
  2153                           	line	18
  2154  0489  3000               	movlw	low(0)
  2155                           	
  2156  048A  00B6               	movwf	(___awdiv_quotient)
  2157  048B  3000               	movlw	high(0)
  2158  048C  00B7               	movwf	((___awdiv_quotient))+1
  2159                           	line	19
  2160                           	
  2161  048D  0833               	movf	((___awdiv_divisor+1))&07fh,w
  2162  048E  0432               	iorwf	((___awdiv_divisor))&07fh,w
  2163  048F  1903               	skipnz
  2164  0490  2C92               	goto	u1781
  2165  0491  2C93               	goto	u1780
  2166  0492                     u1781:
  2167  0492  2CCB               	goto	l369
  2168  0493                     u1780:
  2169                           	line	20
  2170                           	
  2171  0493  01B5               	clrf	(___awdiv_counter)
  2172  0494  1403               	bsf	status,0
  2173  0495  0DB5               	rlf	(___awdiv_counter),f
  2174                           	line	21
  2175  0496  2CA2               	goto	l370
  2176                           	
  2177  0497                     l371:	
  2178                           	line	22
  2179                           	
  2180  0497  3001               	movlw	01h
  2181  0498                     u1795:
  2182  0498  1003               	clrc
  2183  0499  0DB2               	rlf	(___awdiv_divisor),f
  2184  049A  0DB3               	rlf	(___awdiv_divisor+1),f
  2185  049B  3EFF               	addlw	-1
  2186  049C  1D03               	skipz
  2187  049D  2C98               	goto	u1795
  2188                           	line	23
  2189  049E  3001               	movlw	(01h)
  2190  049F  00B8               	movwf	(??___awdiv+4+0)
  2191                           	
  2192  04A0  0838               	movf	(??___awdiv+4+0),w
  2193  04A1  07B5               	addwf	(___awdiv_counter),f
  2194                           	line	24
  2195                           	
  2196  04A2                     l370:	
  2197                           	line	21
  2198                           	
  2199  04A2  1FB3               	btfss	(___awdiv_divisor+1),(15)&7
  2200  04A3  2CA5               	goto	u1801
  2201  04A4  2CA6               	goto	u1800
  2202  04A5                     u1801:
  2203  04A5  2C97               	goto	l371
  2204  04A6                     u1800:
  2205                           	
  2206  04A6                     l372:	
  2207                           	line	25
  2208                           	
  2209  04A6                     l375:	
  2210                           	line	26
  2211                           	
  2212  04A6  3001               	movlw	01h
  2213  04A7                     u1815:
  2214  04A7  1003               	clrc
  2215  04A8  0DB6               	rlf	(___awdiv_quotient),f
  2216  04A9  0DB7               	rlf	(___awdiv_quotient+1),f
  2217  04AA  3EFF               	addlw	-1
  2218  04AB  1D03               	skipz
  2219  04AC  2CA7               	goto	u1815
  2220                           	line	27
  2221                           	
  2222                           	
  2223  04AD  0833               	movf	(___awdiv_divisor+1),w
  2224  04AE  0231               	subwf	(___awdiv_dividend+1),w
  2225  04AF  1D03               	skipz
  2226  04B0  2CB3               	goto	u1825
  2227  04B1  0832               	movf	(___awdiv_divisor),w
  2228  04B2  0230               	subwf	(___awdiv_dividend),w
  2229  04B3                     u1825:
  2230  04B3  1C03               	skipc
  2231  04B4  2CB6               	goto	u1821
  2232  04B5  2CB7               	goto	u1820
  2233  04B6                     u1821:
  2234  04B6  2CBE               	goto	l376
  2235  04B7                     u1820:
  2236                           	line	28
  2237                           	
  2238                           	
  2239  04B7  0832               	movf	(___awdiv_divisor),w
  2240  04B8  02B0               	subwf	(___awdiv_dividend),f
  2241  04B9  0833               	movf	(___awdiv_divisor+1),w
  2242  04BA  1C03               	skipc
  2243  04BB  03B1               	decf	(___awdiv_dividend+1),f
  2244  04BC  02B1               	subwf	(___awdiv_dividend+1),f
  2245                           	line	29
  2246                           	
  2247  04BD  1436               	bsf	(___awdiv_quotient)+(0/8),(0)&7
  2248                           	line	30
  2249                           	
  2250  04BE                     l376:	
  2251                           	line	31
  2252                           	
  2253  04BE  3001               	movlw	01h
  2254  04BF                     u1835:
  2255  04BF  1003               	clrc
  2256  04C0  0CB3               	rrf	(___awdiv_divisor+1),f
  2257  04C1  0CB2               	rrf	(___awdiv_divisor),f
  2258  04C2  3EFF               	addlw	-1
  2259  04C3  1D03               	skipz
  2260  04C4  2CBF               	goto	u1835
  2261                           	line	32
  2262                           	
  2263                           	
  2264  04C5  3001               	movlw	low(01h)
  2265  04C6  02B5               	subwf	(___awdiv_counter),f
  2266  04C7  1D03               	btfss	status,2
  2267  04C8  2CCA               	goto	u1841
  2268  04C9  2CCB               	goto	u1840
  2269  04CA                     u1841:
  2270  04CA  2CA6               	goto	l375
  2271  04CB                     u1840:
  2272                           	
  2273  04CB                     l374:	
  2274                           	line	33
  2275                           	
  2276  04CB                     l369:	
  2277                           	line	34
  2278                           	
  2279  04CB  08B4               	movf	(___awdiv_sign),f
  2280  04CC  1D03               	skipz
  2281  04CD  2CCF               	goto	u1850
  2282  04CE  2CD4               	goto	l377
  2283  04CF                     u1850:
  2284                           	line	35
  2285                           	
  2286  04CF  09B6               	comf	(___awdiv_quotient),f
  2287  04D0  09B7               	comf	(___awdiv_quotient+1),f
  2288  04D1  0AB6               	incf	(___awdiv_quotient),f
  2289  04D2  1903               	skipnz
  2290  04D3  0AB7               	incf	(___awdiv_quotient+1),f
  2291                           	
  2292                           	
  2293  04D4                     l377:	
  2294                           	line	36
  2295                           	
  2296                           	
  2297  04D4  0836               	movf	(___awdiv_quotient),w
  2298  04D5  01B0               	clrf	(?___awdiv)
  2299  04D6  07B0               	addwf	(?___awdiv)
  2300  04D7  0837               	movf	(___awdiv_quotient+1),w
  2301  04D8  01B1               	clrf	(?___awdiv+1)
  2302  04D9  07B1               	addwf	(?___awdiv+1)
  2303  04DA  2CDB               	goto	l366
  2304                           	line	37
  2305  04DB                     l366:	
  2306  04DB  0008               	return
  2307                           ; =============== function ___awdiv ends ======
                                 =========
  2308                           
  2309                           GLOBAL __end_of___awdiv
  2310  04DC                     	__end_of___awdiv:
  2311                           	FNSIZE	___awdiv,5,4
  2312                           	signat	___awdiv,8314
  2313                           	global	___lwmod
  2314                           	global	??___lwmod
  2315                           	global	?___lwmod
  2316                           
  2317                           ; *************** function ___lwmod ***********
                                 ****
  2318                           ; Defined at:
  2319                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\lwmod.c"
  2320                           ; Parameters:
  2321                           ;		dividend    	offs:   0	type: unsigned int 
  2322                           ;		divisor     	offs:   2	type: unsigned int 
  2323                           ; Auto variables:
  2324                           ;		counter     	       	type: unsigned char 
  2325                           ; Return value:
  2326                           ;		type: unsigned int 
  2327                           ;		size: 2
  2328                           ; Registers used:
  2329                           ;		wreg, status,2, status,0
  2330                           ; Tracked objects:
  2331                           ;		On entry : 300/0
  2332                           ;		On exit  : 0/0
  2333                           ;		Unchanged: 0/0
  2334                           ; Data sizes:
  2335                           ;		Autos:    1
  2336                           ;		Params:   4
  2337                           ;		Temp:     1
  2338                           ;		Total:    6
  2339                           ; This function calls:
  2340                           ;		Nothing
  2341                           ; This function is called by:
  2342                           ;		_Lcd8_Decimal3
  2343                           ; This function uses a non-reentrant model
  2344                           ; 
  2345                           	psect	text95,local,class=CODE,delta=2
  2346                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\lwmod.c"
  2347                           	line	5
  2348                           	
  2349  03D8                     ___lwmod:	
  2350                           ; Regs used in ___lwmod: [wreg+status,2+status,
                                 0]
  2351                           	line	8
  2352                           	
  2353  03D8  0833               	movf	((___lwmod_divisor+1))&07fh,w
  2354  03D9  0432               	iorwf	((___lwmod_divisor))&07fh,w
  2355  03DA  1903               	skipnz
  2356  03DB  2BDD               	goto	u1301
  2357  03DC  2BDE               	goto	u1300
  2358  03DD                     u1301:
  2359  03DD  2C0E               	goto	l222
  2360  03DE                     u1300:
  2361                           	line	9
  2362                           	
  2363  03DE  01B4               	clrf	(___lwmod_counter)
  2364  03DF  1403               	bsf	status,0
  2365  03E0  0DB4               	rlf	(___lwmod_counter),f
  2366                           	line	10
  2367  03E1  2BED               	goto	l223
  2368                           	
  2369  03E2                     l224:	
  2370                           	line	11
  2371                           	
  2372  03E2  3001               	movlw	01h
  2373  03E3                     u1315:
  2374  03E3  1003               	clrc
  2375  03E4  0DB2               	rlf	(___lwmod_divisor),f
  2376  03E5  0DB3               	rlf	(___lwmod_divisor+1),f
  2377  03E6  3EFF               	addlw	-1
  2378  03E7  1D03               	skipz
  2379  03E8  2BE3               	goto	u1315
  2380                           	line	12
  2381  03E9  3001               	movlw	(01h)
  2382  03EA  00B5               	movwf	(??___lwmod+1+0)
  2383                           	
  2384  03EB  0835               	movf	(??___lwmod+1+0),w
  2385  03EC  07B4               	addwf	(___lwmod_counter),f
  2386                           	line	13
  2387                           	
  2388  03ED                     l223:	
  2389                           	line	10
  2390                           	
  2391  03ED  1FB3               	btfss	(___lwmod_divisor+1),(15)&7
  2392  03EE  2BF0               	goto	u1321
  2393  03EF  2BF1               	goto	u1320
  2394  03F0                     u1321:
  2395  03F0  2BE2               	goto	l224
  2396  03F1                     u1320:
  2397                           	
  2398  03F1                     l225:	
  2399                           	line	14
  2400                           	
  2401  03F1                     l228:	
  2402                           	line	15
  2403                           	
  2404                           	
  2405  03F1  0833               	movf	(___lwmod_divisor+1),w
  2406  03F2  0231               	subwf	(___lwmod_dividend+1),w
  2407  03F3  1D03               	skipz
  2408  03F4  2BF7               	goto	u1335
  2409  03F5  0832               	movf	(___lwmod_divisor),w
  2410  03F6  0230               	subwf	(___lwmod_dividend),w
  2411  03F7                     u1335:
  2412  03F7  1C03               	skipc
  2413  03F8  2BFA               	goto	u1331
  2414  03F9  2BFB               	goto	u1330
  2415  03FA                     u1331:
  2416  03FA  2C01               	goto	l229
  2417  03FB                     u1330:
  2418                           	line	16
  2419                           	
  2420                           	
  2421  03FB  0832               	movf	(___lwmod_divisor),w
  2422  03FC  02B0               	subwf	(___lwmod_dividend),f
  2423  03FD  0833               	movf	(___lwmod_divisor+1),w
  2424  03FE  1C03               	skipc
  2425  03FF  03B1               	decf	(___lwmod_dividend+1),f
  2426  0400  02B1               	subwf	(___lwmod_dividend+1),f
  2427                           	
  2428  0401                     l229:	
  2429                           	line	17
  2430                           	
  2431  0401  3001               	movlw	01h
  2432  0402                     u1345:
  2433  0402  1003               	clrc
  2434  0403  0CB3               	rrf	(___lwmod_divisor+1),f
  2435  0404  0CB2               	rrf	(___lwmod_divisor),f
  2436  0405  3EFF               	addlw	-1
  2437  0406  1D03               	skipz
  2438  0407  2C02               	goto	u1345
  2439                           	line	18
  2440                           	
  2441                           	
  2442  0408  3001               	movlw	low(01h)
  2443  0409  02B4               	subwf	(___lwmod_counter),f
  2444  040A  1D03               	btfss	status,2
  2445  040B  2C0D               	goto	u1351
  2446  040C  2C0E               	goto	u1350
  2447  040D                     u1351:
  2448  040D  2BF1               	goto	l228
  2449  040E                     u1350:
  2450                           	
  2451  040E                     l227:	
  2452                           	line	19
  2453                           	
  2454  040E                     l222:	
  2455                           	line	20
  2456  040E  2C0F               	goto	l221
  2457                           	line	21
  2458  040F                     l221:	
  2459  040F  0008               	return
  2460                           ; =============== function ___lwmod ends ======
                                 =========
  2461                           
  2462                           GLOBAL __end_of___lwmod
  2463  0410                     	__end_of___lwmod:
  2464                           	FNSIZE	___lwmod,2,4
  2465                           	signat	___lwmod,8314
  2466                           	global	___awmod
  2467                           	global	??___awmod
  2468                           	global	?___awmod
  2469                           
  2470                           ; *************** function ___awmod ***********
                                 ****
  2471                           ; Defined at:
  2472                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\awmod.c"
  2473                           ; Parameters:
  2474                           ;		dividend    	offs:   0	type: int 
  2475                           ;		divisor     	offs:   2	type: int 
  2476                           ; Auto variables:
  2477                           ;		sign        	       	type: unsigned char 
  2478                           ;		counter     	       	type: unsigned char 
  2479                           ; Return value:
  2480                           ;		type: int 
  2481                           ;		size: 2
  2482                           ; Registers used:
  2483                           ;		wreg, status,2, status,0
  2484                           ; Tracked objects:
  2485                           ;		On entry : B00/0
  2486                           ;		On exit  : 0/0
  2487                           ;		Unchanged: 0/0
  2488                           ; Data sizes:
  2489                           ;		Autos:    2
  2490                           ;		Params:   4
  2491                           ;		Temp:     1
  2492                           ;		Total:    7
  2493                           ; This function calls:
  2494                           ;		Nothing
  2495                           ; This function is called by:
  2496                           ;		_Lcd8_Decimal3
  2497                           ; This function uses a non-reentrant model
  2498                           ; 
  2499                           	psect	text96,local,class=CODE,delta=2
  2500                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\awmod.c"
  2501                           	line	5
  2502                           	
  2503  0410                     ___awmod:	
  2504                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  2505                           	line	8
  2506  0410  1003               	clrc
  2507                           	
  2508  0411  3000               	movlw	0
  2509  0412  1803               	btfsc	status,0
  2510  0413  3001               	movlw	1
  2511  0414  00B4               	movwf	(___awmod_sign)
  2512                           	line	9
  2513                           	
  2514  0415  1FB1               	btfss	(___awmod_dividend+1),7
  2515  0416  2C18               	goto	u1871
  2516  0417  2C19               	goto	u1870
  2517  0418                     u1871:
  2518  0418  2C21               	goto	l449
  2519  0419                     u1870:
  2520                           	line	10
  2521                           	
  2522  0419  09B0               	comf	(___awmod_dividend),f
  2523  041A  09B1               	comf	(___awmod_dividend+1),f
  2524  041B  0AB0               	incf	(___awmod_dividend),f
  2525  041C  1903               	skipnz
  2526  041D  0AB1               	incf	(___awmod_dividend+1),f
  2527                           	
  2528                           	line	11
  2529                           	
  2530  041E  01B4               	clrf	(___awmod_sign)
  2531  041F  1403               	bsf	status,0
  2532  0420  0DB4               	rlf	(___awmod_sign),f
  2533                           	line	12
  2534                           	
  2535  0421                     l449:	
  2536                           	line	13
  2537                           	
  2538  0421  1FB3               	btfss	(___awmod_divisor+1),7
  2539  0422  2C24               	goto	u1881
  2540  0423  2C25               	goto	u1880
  2541  0424                     u1881:
  2542  0424  2C2A               	goto	l450
  2543  0425                     u1880:
  2544                           	line	14
  2545                           	
  2546  0425  09B2               	comf	(___awmod_divisor),f
  2547  0426  09B3               	comf	(___awmod_divisor+1),f
  2548  0427  0AB2               	incf	(___awmod_divisor),f
  2549  0428  1903               	skipnz
  2550  0429  0AB3               	incf	(___awmod_divisor+1),f
  2551                           	
  2552                           	
  2553  042A                     l450:	
  2554                           	line	15
  2555                           	
  2556  042A  0833               	movf	((___awmod_divisor+1))&07fh,w
  2557  042B  0432               	iorwf	((___awmod_divisor))&07fh,w
  2558  042C  1903               	skipnz
  2559  042D  2C2F               	goto	u1891
  2560  042E  2C30               	goto	u1890
  2561  042F                     u1891:
  2562  042F  2C60               	goto	l451
  2563  0430                     u1890:
  2564                           	line	16
  2565                           	
  2566  0430  01B5               	clrf	(___awmod_counter)
  2567  0431  1403               	bsf	status,0
  2568  0432  0DB5               	rlf	(___awmod_counter),f
  2569                           	line	17
  2570  0433  2C3F               	goto	l452
  2571                           	
  2572  0434                     l453:	
  2573                           	line	18
  2574                           	
  2575  0434  3001               	movlw	01h
  2576  0435                     u1905:
  2577  0435  1003               	clrc
  2578  0436  0DB2               	rlf	(___awmod_divisor),f
  2579  0437  0DB3               	rlf	(___awmod_divisor+1),f
  2580  0438  3EFF               	addlw	-1
  2581  0439  1D03               	skipz
  2582  043A  2C35               	goto	u1905
  2583                           	line	19
  2584  043B  3001               	movlw	(01h)
  2585  043C  00B6               	movwf	(??___awmod+2+0)
  2586                           	
  2587  043D  0836               	movf	(??___awmod+2+0),w
  2588  043E  07B5               	addwf	(___awmod_counter),f
  2589                           	line	20
  2590                           	
  2591  043F                     l452:	
  2592                           	line	17
  2593                           	
  2594  043F  1FB3               	btfss	(___awmod_divisor+1),(15)&7
  2595  0440  2C42               	goto	u1911
  2596  0441  2C43               	goto	u1910
  2597  0442                     u1911:
  2598  0442  2C34               	goto	l453
  2599  0443                     u1910:
  2600                           	
  2601  0443                     l454:	
  2602                           	line	21
  2603                           	
  2604  0443                     l457:	
  2605                           	line	22
  2606                           	
  2607                           	
  2608  0443  0833               	movf	(___awmod_divisor+1),w
  2609  0444  0231               	subwf	(___awmod_dividend+1),w
  2610  0445  1D03               	skipz
  2611  0446  2C49               	goto	u1925
  2612  0447  0832               	movf	(___awmod_divisor),w
  2613  0448  0230               	subwf	(___awmod_dividend),w
  2614  0449                     u1925:
  2615  0449  1C03               	skipc
  2616  044A  2C4C               	goto	u1921
  2617  044B  2C4D               	goto	u1920
  2618  044C                     u1921:
  2619  044C  2C53               	goto	l458
  2620  044D                     u1920:
  2621                           	line	23
  2622                           	
  2623                           	
  2624  044D  0832               	movf	(___awmod_divisor),w
  2625  044E  02B0               	subwf	(___awmod_dividend),f
  2626  044F  0833               	movf	(___awmod_divisor+1),w
  2627  0450  1C03               	skipc
  2628  0451  03B1               	decf	(___awmod_dividend+1),f
  2629  0452  02B1               	subwf	(___awmod_dividend+1),f
  2630                           	
  2631  0453                     l458:	
  2632                           	line	24
  2633                           	
  2634  0453  3001               	movlw	01h
  2635  0454                     u1935:
  2636  0454  1003               	clrc
  2637  0455  0CB3               	rrf	(___awmod_divisor+1),f
  2638  0456  0CB2               	rrf	(___awmod_divisor),f
  2639  0457  3EFF               	addlw	-1
  2640  0458  1D03               	skipz
  2641  0459  2C54               	goto	u1935
  2642                           	line	25
  2643                           	
  2644                           	
  2645  045A  3001               	movlw	low(01h)
  2646  045B  02B5               	subwf	(___awmod_counter),f
  2647  045C  1D03               	btfss	status,2
  2648  045D  2C5F               	goto	u1941
  2649  045E  2C60               	goto	u1940
  2650  045F                     u1941:
  2651  045F  2C43               	goto	l457
  2652  0460                     u1940:
  2653                           	
  2654  0460                     l456:	
  2655                           	line	26
  2656                           	
  2657  0460                     l451:	
  2658                           	line	27
  2659                           	
  2660  0460  08B4               	movf	(___awmod_sign),f
  2661  0461  1D03               	skipz
  2662  0462  2C64               	goto	u1950
  2663  0463  2C69               	goto	l459
  2664  0464                     u1950:
  2665                           	line	28
  2666                           	
  2667  0464  09B0               	comf	(___awmod_dividend),f
  2668  0465  09B1               	comf	(___awmod_dividend+1),f
  2669  0466  0AB0               	incf	(___awmod_dividend),f
  2670  0467  1903               	skipnz
  2671  0468  0AB1               	incf	(___awmod_dividend+1),f
  2672                           	
  2673                           	
  2674  0469                     l459:	
  2675                           	line	29
  2676  0469  2C6A               	goto	l448
  2677                           	line	30
  2678  046A                     l448:	
  2679  046A  0008               	return
  2680                           ; =============== function ___awmod ends ======
                                 =========
  2681                           
  2682                           GLOBAL __end_of___awmod
  2683  046B                     	__end_of___awmod:
  2684                           	FNSIZE	___awmod,3,4
  2685                           	signat	___awmod,8314
  2686                           	global	_Lcd8_Write
  2687                           	global	??_Lcd8_Write
  2688                           	global	?_Lcd8_Write
  2689                           
  2690                           ; *************** function _Lcd8_Write ********
                                 *******
  2691                           ; Defined at:
  2692                           ;		line 39 in file "C:\Users\HP\Desktop\pic con
                                 troller\A2D CONVERTOR\pic_lcd8.h"
  2693                           ; Parameters:
  2694                           ;		com         	reg:   wr	type: unsigned char 
  2695                           ;		lr          	offs:   0	type: unsigned char 
  2696                           ; Auto variables:
  2697                           ;		com         	       	type: unsigned char 
  2698                           ; Return value:
  2699                           ;		type: void 
  2700                           ;		size: 0
  2701                           ; Registers used:
  2702                           ;		wreg, status,2, status,0, pclath, cstack
  2703                           ; Tracked objects:
  2704                           ;		On entry : B00/0
  2705                           ;		On exit  : 0/0
  2706                           ;		Unchanged: 0/0
  2707                           ; Data sizes:
  2708                           ;		Autos:    1
  2709                           ;		Params:   1
  2710                           ;		Temp:     0
  2711                           ;		Total:    2
  2712                           ; This function calls:
  2713                           ;		_Lcd8_Command
  2714                           ;		_Delay
  2715                           ; This function is called by:
  2716                           ;		_Lcd8_Display
  2717                           ;		_Lcd8_Decimal3
  2718                           ; This function uses a non-reentrant model
  2719                           ; 
  2720                           	psect	text97,local,class=CODE,delta=2
  2721                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_lcd8.h"
  2722                           	line	39
  2723                           ;pic_lcd8.h: 38: void Lcd8_Write(unsigned char 
                                 com,unsigned char lr)
  2724                           ;pic_lcd8.h: 39: {
  2725                           	
  2726  0389                     _Lcd8_Write:	
  2727                           ; Regs used in _Lcd8_Write: [wreg+status,2+stat
                                 us,0+pclath+cstack]
  2728                           ;_Lcd8_Write_com stored from wreg
  2729                           	
  2730  0389  00B1               	movwf	(_Lcd8_Write_com)
  2731                           	line	40
  2732                           ;pic_lcd8.h: 40: Lcd8_Command(com);
  2733                           	
  2734  038A  0831               	movf	(_Lcd8_Write_com),w
  2735                           	
  2736  038B  120A  118A  236B   	fcall	_Lcd8_Command
              120A  118A         
  2737                           	line	42
  2738                           ;pic_lcd8.h: 42: PORTD=lr;
  2739  0390  1283               	bcf	status, 5	;RP0=0, select bank0
  2740  0391  1303               	bcf	status, 6	;RP2=0, select bank0
  2741                           	
  2742  0392  0830               	movf	(_Lcd8_Write_lr),w
  2743  0393  1383               	bcf	status, 7	;select IRP bank0
  2744                           	
  2745                           	
  2746  0394  0088               	movwf	(8)	;volatile
  2747                           	line	43
  2748                           ;pic_lcd8.h: 43: Lcd_en=1;
  2749  0395  1687               	bsf	(61/8),(61)&7
  2750                           	line	44
  2751                           ;pic_lcd8.h: 44: Lcd_rs=1;
  2752  0396  1607               	bsf	(60/8),(60)&7
  2753                           	line	45
  2754                           ;pic_lcd8.h: 45: Delay(125);
  2755  0397  307D               	movlw	low(07Dh)
  2756                           	
  2757  0398  00B3               	movwf	(?_Delay)
  2758  0399  3000               	movlw	high(07Dh)
  2759  039A  00B4               	movwf	((?_Delay))+1
  2760  039B  120A  118A  2340   	fcall	_Delay
              120A  118A         
  2761                           	line	46
  2762                           ;pic_lcd8.h: 46: Lcd_en=0;
  2763  03A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2764  03A1  1303               	bcf	status, 6	;RP2=0, select bank0
  2765  03A2  1287               	bcf	(61/8),(61)&7
  2766                           	line	47
  2767                           ;pic_lcd8.h: 47: Delay(125);
  2768  03A3  307D               	movlw	low(07Dh)
  2769                           	
  2770  03A4  00B3               	movwf	(?_Delay)
  2771  03A5  3000               	movlw	high(07Dh)
  2772  03A6  00B4               	movwf	((?_Delay))+1
  2773  03A7  120A  118A  2340   	fcall	_Delay
              120A  118A         
  2774                           	line	48
  2775                           ;pic_lcd8.h: 48: }
  2776  03AC                     l179:	
  2777  03AC  0008               	return
  2778                           ; =============== function _Lcd8_Write ends ===
                                 ============
  2779                           
  2780                           GLOBAL __end_of_Lcd8_Write
  2781  03AD                     	__end_of_Lcd8_Write:
  2782                           	FNSIZE	_Lcd8_Write,1,1
  2783                           	signat	_Lcd8_Write,8312
  2784                           	global	___lwdiv
  2785                           	global	??___lwdiv
  2786                           	global	?___lwdiv
  2787                           
  2788                           ; *************** function ___lwdiv ***********
                                 ****
  2789                           ; Defined at:
  2790                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\lwdiv.c"
  2791                           ; Parameters:
  2792                           ;		dividend    	offs:   0	type: unsigned int 
  2793                           ;		divisor     	offs:   2	type: unsigned int 
  2794                           ; Auto variables:
  2795                           ;		counter     	       	type: unsigned char 
  2796                           ;		quotient    	       	type: unsigned int 
  2797                           ; Return value:
  2798                           ;		type: unsigned int 
  2799                           ;		size: 2
  2800                           ; Registers used:
  2801                           ;		wreg, status,2, status,0
  2802                           ; Tracked objects:
  2803                           ;		On entry : 300/0
  2804                           ;		On exit  : 0/0
  2805                           ;		Unchanged: 0/0
  2806                           ; Data sizes:
  2807                           ;		Autos:    3
  2808                           ;		Params:   4
  2809                           ;		Temp:     1
  2810                           ;		Total:    8
  2811                           ; This function calls:
  2812                           ;		Nothing
  2813                           ; This function is called by:
  2814                           ;		_Adc8_Cha
  2815                           ;		_Lcd8_Decimal3
  2816                           ; This function uses a non-reentrant model
  2817                           ; 
  2818                           	psect	text98,local,class=CODE,delta=2
  2819                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\lwdiv.c"
  2820                           	line	5
  2821                           	
  2822  07B6                     ___lwdiv:	
  2823                           ; Regs used in ___lwdiv: [wreg+status,2+status,
                                 0]
  2824                           	line	9
  2825  07B6  3000               	movlw	low(0)
  2826                           	
  2827  07B7  00B5               	movwf	(___lwdiv_quotient)
  2828  07B8  3000               	movlw	high(0)
  2829  07B9  00B6               	movwf	((___lwdiv_quotient))+1
  2830                           	line	10
  2831                           	
  2832  07BA  0833               	movf	((___lwdiv_divisor+1))&07fh,w
  2833  07BB  0432               	iorwf	((___lwdiv_divisor))&07fh,w
  2834  07BC  1903               	skipnz
  2835  07BD  2FBF               	goto	u3151
  2836  07BE  2FC0               	goto	u3150
  2837  07BF                     u3151:
  2838  07BF  2FF8               	goto	l213
  2839  07C0                     u3150:
  2840                           	line	11
  2841                           	
  2842  07C0  01B4               	clrf	(___lwdiv_counter)
  2843  07C1  1403               	bsf	status,0
  2844  07C2  0DB4               	rlf	(___lwdiv_counter),f
  2845                           	line	12
  2846  07C3  2FCF               	goto	l214
  2847                           	
  2848  07C4                     l215:	
  2849                           	line	13
  2850                           	
  2851  07C4  3001               	movlw	01h
  2852  07C5                     u3165:
  2853  07C5  1003               	clrc
  2854  07C6  0DB2               	rlf	(___lwdiv_divisor),f
  2855  07C7  0DB3               	rlf	(___lwdiv_divisor+1),f
  2856  07C8  3EFF               	addlw	-1
  2857  07C9  1D03               	skipz
  2858  07CA  2FC5               	goto	u3165
  2859                           	line	14
  2860  07CB  3001               	movlw	(01h)
  2861  07CC  00B7               	movwf	(??___lwdiv+3+0)
  2862                           	
  2863  07CD  0837               	movf	(??___lwdiv+3+0),w
  2864  07CE  07B4               	addwf	(___lwdiv_counter),f
  2865                           	line	15
  2866                           	
  2867  07CF                     l214:	
  2868                           	line	12
  2869                           	
  2870  07CF  1FB3               	btfss	(___lwdiv_divisor+1),(15)&7
  2871  07D0  2FD2               	goto	u3171
  2872  07D1  2FD3               	goto	u3170
  2873  07D2                     u3171:
  2874  07D2  2FC4               	goto	l215
  2875  07D3                     u3170:
  2876                           	
  2877  07D3                     l216:	
  2878                           	line	16
  2879                           	
  2880  07D3                     l219:	
  2881                           	line	17
  2882                           	
  2883  07D3  3001               	movlw	01h
  2884  07D4                     u3185:
  2885  07D4  1003               	clrc
  2886  07D5  0DB5               	rlf	(___lwdiv_quotient),f
  2887  07D6  0DB6               	rlf	(___lwdiv_quotient+1),f
  2888  07D7  3EFF               	addlw	-1
  2889  07D8  1D03               	skipz
  2890  07D9  2FD4               	goto	u3185
  2891                           	line	18
  2892                           	
  2893                           	
  2894  07DA  0833               	movf	(___lwdiv_divisor+1),w
  2895  07DB  0231               	subwf	(___lwdiv_dividend+1),w
  2896  07DC  1D03               	skipz
  2897  07DD  2FE0               	goto	u3195
  2898  07DE  0832               	movf	(___lwdiv_divisor),w
  2899  07DF  0230               	subwf	(___lwdiv_dividend),w
  2900  07E0                     u3195:
  2901  07E0  1C03               	skipc
  2902  07E1  2FE3               	goto	u3191
  2903  07E2  2FE4               	goto	u3190
  2904  07E3                     u3191:
  2905  07E3  2FEB               	goto	l220
  2906  07E4                     u3190:
  2907                           	line	19
  2908                           	
  2909                           	
  2910  07E4  0832               	movf	(___lwdiv_divisor),w
  2911  07E5  02B0               	subwf	(___lwdiv_dividend),f
  2912  07E6  0833               	movf	(___lwdiv_divisor+1),w
  2913  07E7  1C03               	skipc
  2914  07E8  03B1               	decf	(___lwdiv_dividend+1),f
  2915  07E9  02B1               	subwf	(___lwdiv_dividend+1),f
  2916                           	line	20
  2917                           	
  2918  07EA  1435               	bsf	(___lwdiv_quotient)+(0/8),(0)&7
  2919                           	line	21
  2920                           	
  2921  07EB                     l220:	
  2922                           	line	22
  2923                           	
  2924  07EB  3001               	movlw	01h
  2925  07EC                     u3205:
  2926  07EC  1003               	clrc
  2927  07ED  0CB3               	rrf	(___lwdiv_divisor+1),f
  2928  07EE  0CB2               	rrf	(___lwdiv_divisor),f
  2929  07EF  3EFF               	addlw	-1
  2930  07F0  1D03               	skipz
  2931  07F1  2FEC               	goto	u3205
  2932                           	line	23
  2933                           	
  2934                           	
  2935  07F2  3001               	movlw	low(01h)
  2936  07F3  02B4               	subwf	(___lwdiv_counter),f
  2937  07F4  1D03               	btfss	status,2
  2938  07F5  2FF7               	goto	u3211
  2939  07F6  2FF8               	goto	u3210
  2940  07F7                     u3211:
  2941  07F7  2FD3               	goto	l219
  2942  07F8                     u3210:
  2943                           	
  2944  07F8                     l218:	
  2945                           	line	24
  2946                           	
  2947  07F8                     l213:	
  2948                           	line	25
  2949                           	
  2950                           	
  2951  07F8  0835               	movf	(___lwdiv_quotient),w
  2952  07F9  01B0               	clrf	(?___lwdiv)
  2953  07FA  07B0               	addwf	(?___lwdiv)
  2954  07FB  0836               	movf	(___lwdiv_quotient+1),w
  2955  07FC  01B1               	clrf	(?___lwdiv+1)
  2956  07FD  07B1               	addwf	(?___lwdiv+1)
  2957  07FE  2FFF               	goto	l212
  2958                           	line	26
  2959  07FF                     l212:	
  2960  07FF  0008               	return
  2961                           ; =============== function ___lwdiv ends ======
                                 =========
  2962                           
  2963                           GLOBAL __end_of___lwdiv
  2964  0800                     	__end_of___lwdiv:
  2965                           	FNSIZE	___lwdiv,4,4
  2966                           	signat	___lwdiv,8314
  2967                           	global	_Lcd8_Command
  2968                           	global	??_Lcd8_Command
  2969                           	global	?_Lcd8_Command
  2970                           
  2971                           ; *************** function _Lcd8_Command ******
                                 *********
  2972                           ; Defined at:
  2973                           ;		line 29 in file "C:\Users\HP\Desktop\pic con
                                 troller\A2D CONVERTOR\pic_lcd8.h"
  2974                           ; Parameters:
  2975                           ;		com         	reg:   wr	type: unsigned char 
  2976                           ; Auto variables:
  2977                           ;		com         	       	type: unsigned char 
  2978                           ; Return value:
  2979                           ;		type: void 
  2980                           ;		size: 0
  2981                           ; Registers used:
  2982                           ;		wreg, status,2, status,0, pclath, cstack
  2983                           ; Tracked objects:
  2984                           ;		On entry : 0/100
  2985                           ;		On exit  : 0/0
  2986                           ;		Unchanged: 0/0
  2987                           ; Data sizes:
  2988                           ;		Autos:    1
  2989                           ;		Params:   0
  2990                           ;		Temp:     0
  2991                           ;		Total:    1
  2992                           ; This function calls:
  2993                           ;		_Delay
  2994                           ; This function is called by:
  2995                           ;		_Lcd8_Init
  2996                           ;		_Lcd8_Write
  2997                           ; This function uses a non-reentrant model
  2998                           ; 
  2999                           	psect	text99,local,class=CODE,delta=2
  3000                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_lcd8.h"
  3001                           	line	29
  3002                           ;pic_lcd8.h: 28: void Lcd8_Command(unsigned cha
                                 r com)
  3003                           ;pic_lcd8.h: 29: {
  3004                           	
  3005  036B                     _Lcd8_Command:	
  3006                           ; Regs used in _Lcd8_Command: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  3007                           ;_Lcd8_Command_com stored from wreg
  3008  036B  1283               	bcf	status, 5	;RP0=0, select bank0
  3009  036C  1303               	bcf	status, 6	;RP2=0, select bank0
  3010                           	
  3011  036D  00B2               	movwf	(_Lcd8_Command_com)
  3012                           	line	30
  3013                           ;pic_lcd8.h: 30: PORTD=com;
  3014                           	
  3015  036E  0832               	movf	(_Lcd8_Command_com),w
  3016  036F  1383               	bcf	status, 7	;select IRP bank0
  3017                           	
  3018                           	
  3019  0370  0088               	movwf	(8)	;volatile
  3020                           	line	31
  3021                           ;pic_lcd8.h: 31: Lcd_en=1;
  3022  0371  1687               	bsf	(61/8),(61)&7
  3023                           	line	32
  3024                           ;pic_lcd8.h: 32: Lcd_rs=0;
  3025  0372  1207               	bcf	(60/8),(60)&7
  3026                           	line	33
  3027                           ;pic_lcd8.h: 33: Delay(125);
  3028  0373  307D               	movlw	low(07Dh)
  3029                           	
  3030  0374  00B3               	movwf	(?_Delay)
  3031  0375  3000               	movlw	high(07Dh)
  3032  0376  00B4               	movwf	((?_Delay))+1
  3033  0377  120A  118A  2340   	fcall	_Delay
              120A  118A         
  3034                           	line	34
  3035                           ;pic_lcd8.h: 34: Lcd_en=0;
  3036  037C  1283               	bcf	status, 5	;RP0=0, select bank0
  3037  037D  1303               	bcf	status, 6	;RP2=0, select bank0
  3038  037E  1287               	bcf	(61/8),(61)&7
  3039                           	line	35
  3040                           ;pic_lcd8.h: 35: Delay(125);
  3041  037F  307D               	movlw	low(07Dh)
  3042                           	
  3043  0380  00B3               	movwf	(?_Delay)
  3044  0381  3000               	movlw	high(07Dh)
  3045  0382  00B4               	movwf	((?_Delay))+1
  3046  0383  120A  118A  2340   	fcall	_Delay
              120A  118A         
  3047                           	line	36
  3048                           ;pic_lcd8.h: 36: }
  3049  0388                     l178:	
  3050  0388  0008               	return
  3051                           ; =============== function _Lcd8_Command ends =
                                 ==============
  3052                           
  3053                           GLOBAL __end_of_Lcd8_Command
  3054  0389                     	__end_of_Lcd8_Command:
  3055                           	FNSIZE	_Lcd8_Command,1,0
  3056                           	signat	_Lcd8_Command,4216
  3057                           	global	_Delay
  3058                           	global	??_Delay
  3059                           	global	?_Delay
  3060                           
  3061                           ; *************** function _Delay *************
                                 **
  3062                           ; Defined at:
  3063                           ;		line 106 in file "C:\Users\HP\Desktop\pic co
                                 ntroller\A2D CONVERTOR\pic_lcd8.h"
  3064                           ; Parameters:
  3065                           ;		del         	offs:   0	type: unsigned int 
  3066                           ; Auto variables:
  3067                           ;		None
  3068                           ; Return value:
  3069                           ;		type: void 
  3070                           ;		size: 0
  3071                           ; Registers used:
  3072                           ;		wreg
  3073                           ; Tracked objects:
  3074                           ;		On entry : 300/0
  3075                           ;		On exit  : 0/0
  3076                           ;		Unchanged: 0/0
  3077                           ; Data sizes:
  3078                           ;		Autos:    0
  3079                           ;		Params:   2
  3080                           ;		Temp:     0
  3081                           ;		Total:    2
  3082                           ; This function calls:
  3083                           ;		Nothing
  3084                           ; This function is called by:
  3085                           ;		_Lcd8_Command
  3086                           ;		_Lcd8_Write
  3087                           ;		_main
  3088                           ; This function uses a non-reentrant model
  3089                           ; 
  3090                           	psect	text100,local,class=CODE,delta=2
  3091                           	file	"C:\Users\HP\Desktop\pic controller\A2D C
                                 ONVERTOR\pic_lcd8.h"
  3092                           	line	106
  3093                           ;pic_lcd8.h: 105: void Delay(unsigned int del)
  3094                           ;pic_lcd8.h: 106: {
  3095                           	
  3096  0340                     _Delay:	
  3097                           ; Regs used in _Delay: [wreg]
  3098                           	line	107
  3099                           ;pic_lcd8.h: 107: while(del--);
  3100  0340  2B41               	goto	l189
  3101                           	
  3102  0341                     l189:	
  3103                           	
  3104  0341  3001               	movlw	low(01h)
  3105  0342  02B3               	subwf	(_Delay_del),f
  3106  0343  3000               	movlw	high(01h)
  3107  0344  1C03               	skipc
  3108  0345  03B4               	decf	(_Delay_del+1),f
  3109  0346  02B4               	subwf	(_Delay_del+1),f
  3110  0347  30FF               	movlw	high(0FFFFh)
  3111  0348  0634               	xorwf	((_Delay_del+1))&07fh,w
  3112  0349  1D03               	skipz
  3113  034A  2B4D               	goto	u1195
  3114  034B  30FF               	movlw	low(0FFFFh)
  3115  034C  0633               	xorwf	((_Delay_del))&07fh,w
  3116  034D                     u1195:
  3117                           
  3118  034D  1D03               	skipz
  3119  034E  2B50               	goto	u1191
  3120  034F  2B51               	goto	u1190
  3121  0350                     u1191:
  3122  0350  2B41               	goto	l189
  3123  0351                     u1190:
  3124                           	
  3125  0351                     l191:	
  3126                           	line	108
  3127                           ;pic_lcd8.h: 108: }
  3128  0351                     l188:	
  3129  0351  0008               	return
  3130                           ; =============== function _Delay ends ========
                                 =======
  3131                           
  3132                           GLOBAL __end_of_Delay
  3133  0352                     	__end_of_Delay:
  3134                           	FNSIZE	_Delay,0,2
  3135                           	signat	_Delay,4216
  3136                           	FNCALL	_main,_Lcd8_Init
  3137                           	FNCALL	_main,_Delay
  3138                           	FNCALL	_main,_Lcd8_Display
  3139                           	FNCALL	_main,_Adc8_Cha
  3140                           	FNCALL	_main,_Lcd8_Decimal3
  3141                           	FNCALL	_Adc8_Cha,___lwdiv
  3142                           	FNCALL	_Lcd8_Display,_Lcd8_Write
  3143                           	FNCALL	_Lcd8_Init,_Lcd8_Command
  3144                           	FNCALL	_Lcd8_Decimal3,___awdiv
  3145                           	FNCALL	_Lcd8_Decimal3,___awmod
  3146                           	FNCALL	_Lcd8_Decimal3,___lwdiv
  3147                           	FNCALL	_Lcd8_Decimal3,___lwmod
  3148                           	FNCALL	_Lcd8_Decimal3,_Lcd8_Write
  3149                           	FNCALL	_Lcd8_Write,_Lcd8_Command
  3150                           	FNCALL	_Lcd8_Write,_Delay
  3151                           	FNCALL	_Lcd8_Command,_Delay
  3152                           	FNROOT	_main
  3153                           	psect	strings,class=CODE,delta=2,reloc=256
  3154                           	global	stringdir,stringtab,__stringbase,string
                                 jmp
  3155  0700                     stringtab:
  3156  0700  00FE               	movwf	(btemp)&07Fh
  3157  0701  1FFE               	btfss	(btemp)&07Fh,7
  3158  0702  2F08               	goto	stringcode
  3159  0703  1383               	bcf	status,7
  3160  0704  187E               	btfsc	btemp&7Fh,0
  3161  0705  1783               	bsf	status,7
  3162  0706  0800               	movf	indf,w
  3163  0707  0008               	return
  3164  0708                     stringcode:
  3165  0708  0804               	movf	fsr,w
  3166  0709                     stringdir:
  3167  0709  00FE               movwf btemp&07Fh
  3168  070A  3007               movlw high(stringdir)
  3169  070B  008A               movwf pclath
  3170  070C  087E               movf btemp&07Fh,w
  3171  070D                     stringjmp:
  3172  070D  0782               	addwf pc
  3173  070E                     __stringbase:
  3174  070E  3400               	retlw	0
  3175                           	global	_adc_hbit
  3176                           	psect	common,class=COMMON,space=1
  3177                           
  3178                           	DABS	1,117,2	;_adc_hbit
  3179  0000                     	_adc_hbit	set	0x75
  3180                           
  3181                           	global	_adc_lbit
  3182                           
  3183                           	DABS	1,119,2	;_adc_lbit
  3184  0000                     	_adc_lbit	set	0x77
  3185                           
  3186                           	global	_adc_temp
  3187                           
  3188                           	DABS	1,113,2	;_adc_temp
  3189  0000                     	_adc_temp	set	0x71
  3190                           
  3191                           	global	_adc_temp0
  3192                           
  3193                           	DABS	1,115,2	;_adc_temp0
  3194  0000                     	_adc_temp0	set	0x73
  3195                           
  3196                           	global	_adc_val1
  3197                           
  3198                           	DABS	1,123,2	;_adc_val1
  3199  0000                     	_adc_val1	set	0x7B
  3200                           
  3201                           	global	_adc_del
  3202                           
  3203                           	DABS	1,125,1	;_adc_del
  3204  0000                     	_adc_del	set	0x7D
  3205                           
  3206                           	global	_adc_j
  3207                           
  3208                           	DABS	1,121,1	;_adc_j
  3209  0000                     	_adc_j	set	0x79
  3210                           
  3211                           	global	_adc_val
  3212                           
  3213                           	DABS	1,122,1	;_adc_val
  3214  0000                     	_adc_val	set	0x7A
  3215                           
  3216                           	global	_ADCON0
  3217  0000                     	_ADCON0	set	0x1F
  3218                           
  3219                           	global	_ADCON1
  3220                           	global	_ADCON1
  3221  0000                     	_ADCON1	set	0x9F
  3222                           
  3223                           	global	_ADRESH
  3224  0000                     	_ADRESH	set	0x1E
  3225                           
  3226                           	global	_ADRESL
  3227  0000                     	_ADRESL	set	0x9E
  3228                           
  3229                           	global	_CCP1CON
  3230                           	global	_CCP1CON
  3231  0000                     	_CCP1CON	set	0x17
  3232                           
  3233                           	global	_CCP2CON
  3234                           	global	_CCP2CON
  3235  0000                     	_CCP2CON	set	0x1D
  3236                           
  3237                           	global	_CCPR1H
  3238                           	global	_CCPR1H
  3239  0000                     	_CCPR1H	set	0x16
  3240                           
  3241                           	global	_CCPR1L
  3242                           	global	_CCPR1L
  3243  0000                     	_CCPR1L	set	0x15
  3244                           
  3245                           	global	_CCPR2H
  3246                           	global	_CCPR2H
  3247  0000                     	_CCPR2H	set	0x1C
  3248                           
  3249                           	global	_CCPR2L
  3250                           	global	_CCPR2L
  3251  0000                     	_CCPR2L	set	0x1B
  3252                           
  3253                           	global	_CMCON
  3254                           	global	_CMCON
  3255  0000                     	_CMCON	set	0x9C
  3256                           
  3257                           	global	_CVRCON
  3258                           	global	_CVRCON
  3259  0000                     	_CVRCON	set	0x9D
  3260                           
  3261                           	global	_EEADR
  3262                           	global	_EEADR
  3263  0000                     	_EEADR	set	0x10D
  3264                           
  3265                           	global	_EEADRH
  3266                           	global	_EEADRH
  3267  0000                     	_EEADRH	set	0x10F
  3268                           
  3269                           	global	_EEADRL
  3270                           	global	_EEADRL
  3271  0000                     	_EEADRL	set	0x10D
  3272                           
  3273                           	global	_EECON1
  3274                           	global	_EECON1
  3275  0000                     	_EECON1	set	0x18C
  3276                           
  3277                           	global	_EECON2
  3278                           	global	_EECON2
  3279  0000                     	_EECON2	set	0x18D
  3280                           
  3281                           	global	_EEDATA
  3282                           	global	_EEDATA
  3283  0000                     	_EEDATA	set	0x10C
  3284                           
  3285                           	global	_EEDATH
  3286                           	global	_EEDATH
  3287  0000                     	_EEDATH	set	0x10E
  3288                           
  3289                           	global	_FSR
  3290                           	global	_FSR
  3291  0000                     	_FSR	set	0x4
  3292                           
  3293                           	global	_INDF
  3294                           	global	_INDF
  3295  0000                     	_INDF	set	0x0
  3296                           
  3297                           	global	_INTCON
  3298                           	global	_INTCON
  3299  0000                     	_INTCON	set	0xB
  3300                           
  3301                           	global	_OPTION
  3302                           	global	_OPTION
  3303  0000                     	_OPTION	set	0x81
  3304                           
  3305                           	global	_PCL
  3306                           	global	_PCL
  3307  0000                     	_PCL	set	0x2
  3308                           
  3309                           	global	_PCLATH
  3310                           	global	_PCLATH
  3311  0000                     	_PCLATH	set	0xA
  3312                           
  3313                           	global	_PCON
  3314                           	global	_PCON
  3315  0000                     	_PCON	set	0x8E
  3316                           
  3317                           	global	_PIE1
  3318                           	global	_PIE1
  3319  0000                     	_PIE1	set	0x8C
  3320                           
  3321                           	global	_PIE2
  3322                           	global	_PIE2
  3323  0000                     	_PIE2	set	0x8D
  3324                           
  3325                           	global	_PIR1
  3326                           	global	_PIR1
  3327  0000                     	_PIR1	set	0xC
  3328                           
  3329                           	global	_PIR2
  3330                           	global	_PIR2
  3331  0000                     	_PIR2	set	0xD
  3332                           
  3333                           	global	_PORTA
  3334                           	global	_PORTA
  3335  0000                     	_PORTA	set	0x5
  3336                           
  3337                           	global	_PORTB
  3338                           	global	_PORTB
  3339  0000                     	_PORTB	set	0x6
  3340                           
  3341                           	global	_PORTC
  3342                           	global	_PORTC
  3343  0000                     	_PORTC	set	0x7
  3344                           
  3345                           	global	_PORTD
  3346  0000                     	_PORTD	set	0x8
  3347                           
  3348                           	global	_PORTE
  3349                           	global	_PORTE
  3350  0000                     	_PORTE	set	0x9
  3351                           
  3352                           	global	_PR2
  3353                           	global	_PR2
  3354  0000                     	_PR2	set	0x92
  3355                           
  3356                           	global	_RCREG
  3357                           	global	_RCREG
  3358  0000                     	_RCREG	set	0x1A
  3359                           
  3360                           	global	_RCSTA
  3361                           	global	_RCSTA
  3362  0000                     	_RCSTA	set	0x18
  3363                           
  3364                           	global	_SPBRG
  3365                           	global	_SPBRG
  3366  0000                     	_SPBRG	set	0x99
  3367                           
  3368                           	global	_SSPADD
  3369                           	global	_SSPADD
  3370  0000                     	_SSPADD	set	0x93
  3371                           
  3372                           	global	_SSPBUF
  3373                           	global	_SSPBUF
  3374  0000                     	_SSPBUF	set	0x13
  3375                           
  3376                           	global	_SSPCON
  3377                           	global	_SSPCON
  3378  0000                     	_SSPCON	set	0x14
  3379                           
  3380                           	global	_SSPCON2
  3381                           	global	_SSPCON2
  3382  0000                     	_SSPCON2	set	0x91
  3383                           
  3384                           	global	_SSPSTAT
  3385                           	global	_SSPSTAT
  3386  0000                     	_SSPSTAT	set	0x94
  3387                           
  3388                           	global	_STATUS
  3389                           	global	_STATUS
  3390  0000                     	_STATUS	set	0x3
  3391                           
  3392                           	global	_T1CON
  3393                           	global	_T1CON
  3394  0000                     	_T1CON	set	0x10
  3395                           
  3396                           	global	_T2CON
  3397                           	global	_T2CON
  3398  0000                     	_T2CON	set	0x12
  3399                           
  3400                           	global	_TMR0
  3401                           	global	_TMR0
  3402  0000                     	_TMR0	set	0x1
  3403                           
  3404                           	global	_TMR1H
  3405                           	global	_TMR1H
  3406  0000                     	_TMR1H	set	0xF
  3407                           
  3408                           	global	_TMR1L
  3409                           	global	_TMR1L
  3410  0000                     	_TMR1L	set	0xE
  3411                           
  3412                           	global	_TMR2
  3413                           	global	_TMR2
  3414  0000                     	_TMR2	set	0x11
  3415                           
  3416                           	global	_TRISA
  3417  0000                     	_TRISA	set	0x85
  3418                           
  3419                           	global	_TRISB
  3420  0000                     	_TRISB	set	0x86
  3421                           
  3422                           	global	_TRISC
  3423  0000                     	_TRISC	set	0x87
  3424                           
  3425                           	global	_TRISD
  3426  0000                     	_TRISD	set	0x88
  3427                           
  3428                           	global	_TRISE
  3429                           	global	_TRISE
  3430  0000                     	_TRISE	set	0x89
  3431                           
  3432                           	global	_TXREG
  3433                           	global	_TXREG
  3434  0000                     	_TXREG	set	0x19
  3435                           
  3436                           	global	_TXSTA
  3437                           	global	_TXSTA
  3438  0000                     	_TXSTA	set	0x98
  3439                           
  3440                           	global	_ACKDT
  3441                           	global	_ACKDT
  3442  0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  3443                           
  3444                           	global	_ACKEN
  3445                           	global	_ACKEN
  3446  0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  3447                           
  3448                           	global	_ACKSTAT
  3449                           	global	_ACKSTAT
  3450  0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  3451                           
  3452                           	global	_ADCS0
  3453                           	global	_ADCS0
  3454  0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  3455                           
  3456                           	global	_ADCS1
  3457                           	global	_ADCS1
  3458  0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  3459                           
  3460                           	global	_ADCS2
  3461                           	global	_ADCS2
  3462  0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  3463                           
  3464                           	global	_ADDEN
  3465                           	global	_ADDEN
  3466  0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  3467                           
  3468                           	global	_ADFM
  3469  0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  3470                           
  3471                           	global	_ADGO
  3472                           	global	_ADGO
  3473  0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  3474                           
  3475                           	global	_ADIE
  3476                           	global	_ADIE
  3477  0000                     	_ADIE	set	0x466	;byte address: 0x8C
  3478                           
  3479                           	global	_ADIF
  3480                           	global	_ADIF
  3481  0000                     	_ADIF	set	0x66	;byte address: 0xC
  3482                           
  3483                           	global	_ADON
  3484  0000                     	_ADON	set	0xF8	;byte address: 0x1F
  3485                           
  3486                           	global	_BCLIE
  3487                           	global	_BCLIE
  3488  0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  3489                           
  3490                           	global	_BCLIF
  3491                           	global	_BCLIF
  3492  0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  3493                           
  3494                           	global	_BF
  3495                           	global	_BF
  3496  0000                     	_BF	set	0x4A0	;byte address: 0x94
  3497                           
  3498                           	global	_BOR
  3499                           	global	_BOR
  3500  0000                     	_BOR	set	0x470	;byte address: 0x8E
  3501                           
  3502                           	global	_BRGH
  3503                           	global	_BRGH
  3504  0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  3505                           
  3506                           	global	_C1INV
  3507                           	global	_C1INV
  3508  0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  3509                           
  3510                           	global	_C1OUT
  3511                           	global	_C1OUT
  3512  0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  3513                           
  3514                           	global	_C2INV
  3515                           	global	_C2INV
  3516  0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  3517                           
  3518                           	global	_C2OUT
  3519                           	global	_C2OUT
  3520  0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  3521                           
  3522                           	global	_CARRY
  3523                           	global	_CARRY
  3524  0000                     	_CARRY	set	0x18	;byte address: 0x3
  3525                           
  3526                           	global	_CCP1IE
  3527                           	global	_CCP1IE
  3528  0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  3529                           
  3530                           	global	_CCP1IF
  3531                           	global	_CCP1IF
  3532  0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  3533                           
  3534                           	global	_CCP1M0
  3535                           	global	_CCP1M0
  3536  0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  3537                           
  3538                           	global	_CCP1M1
  3539                           	global	_CCP1M1
  3540  0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  3541                           
  3542                           	global	_CCP1M2
  3543                           	global	_CCP1M2
  3544  0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  3545                           
  3546                           	global	_CCP1M3
  3547                           	global	_CCP1M3
  3548  0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  3549                           
  3550                           	global	_CCP1X
  3551                           	global	_CCP1X
  3552  0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  3553                           
  3554                           	global	_CCP1Y
  3555                           	global	_CCP1Y
  3556  0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  3557                           
  3558                           	global	_CCP2IE
  3559                           	global	_CCP2IE
  3560  0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  3561                           
  3562                           	global	_CCP2IF
  3563                           	global	_CCP2IF
  3564  0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  3565                           
  3566                           	global	_CCP2M0
  3567                           	global	_CCP2M0
  3568  0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  3569                           
  3570                           	global	_CCP2M1
  3571                           	global	_CCP2M1
  3572  0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  3573                           
  3574                           	global	_CCP2M2
  3575                           	global	_CCP2M2
  3576  0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  3577                           
  3578                           	global	_CCP2M3
  3579                           	global	_CCP2M3
  3580  0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  3581                           
  3582                           	global	_CCP2X
  3583                           	global	_CCP2X
  3584  0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  3585                           
  3586                           	global	_CCP2Y
  3587                           	global	_CCP2Y
  3588  0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  3589                           
  3590                           	global	_CHS0
  3591                           	global	_CHS0
  3592  0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  3593                           
  3594                           	global	_CHS1
  3595                           	global	_CHS1
  3596  0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  3597                           
  3598                           	global	_CHS2
  3599                           	global	_CHS2
  3600  0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  3601                           
  3602                           	global	_CIS
  3603                           	global	_CIS
  3604  0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  3605                           
  3606                           	global	_CKE
  3607                           	global	_CKE
  3608  0000                     	_CKE	set	0x4A6	;byte address: 0x94
  3609                           
  3610                           	global	_CKP
  3611                           	global	_CKP
  3612  0000                     	_CKP	set	0xA4	;byte address: 0x14
  3613                           
  3614                           	global	_CM0
  3615                           	global	_CM0
  3616  0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  3617                           
  3618                           	global	_CM1
  3619                           	global	_CM1
  3620  0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  3621                           
  3622                           	global	_CM2
  3623                           	global	_CM2
  3624  0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  3625                           
  3626                           	global	_CMIE
  3627                           	global	_CMIE
  3628  0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  3629                           
  3630                           	global	_CMIF
  3631                           	global	_CMIF
  3632  0000                     	_CMIF	set	0x6E	;byte address: 0xD
  3633                           
  3634                           	global	_CREN
  3635                           	global	_CREN
  3636  0000                     	_CREN	set	0xC4	;byte address: 0x18
  3637                           
  3638                           	global	_CSRC
  3639                           	global	_CSRC
  3640  0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  3641                           
  3642                           	global	_CVR0
  3643                           	global	_CVR0
  3644  0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  3645                           
  3646                           	global	_CVR1
  3647                           	global	_CVR1
  3648  0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  3649                           
  3650                           	global	_CVR2
  3651                           	global	_CVR2
  3652  0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  3653                           
  3654                           	global	_CVR3
  3655                           	global	_CVR3
  3656  0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  3657                           
  3658                           	global	_CVREN
  3659                           	global	_CVREN
  3660  0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  3661                           
  3662                           	global	_CVROE
  3663                           	global	_CVROE
  3664  0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  3665                           
  3666                           	global	_CVRR
  3667                           	global	_CVRR
  3668  0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  3669                           
  3670                           	global	_DA
  3671                           	global	_DA
  3672  0000                     	_DA	set	0x4A5	;byte address: 0x94
  3673                           
  3674                           	global	_DC
  3675                           	global	_DC
  3676  0000                     	_DC	set	0x19	;byte address: 0x3
  3677                           
  3678                           	global	_EEIE
  3679                           	global	_EEIE
  3680  0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  3681                           
  3682                           	global	_EEIF
  3683                           	global	_EEIF
  3684  0000                     	_EEIF	set	0x6C	;byte address: 0xD
  3685                           
  3686                           	global	_EEPGD
  3687                           	global	_EEPGD
  3688  0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  3689                           
  3690                           	global	_FERR
  3691                           	global	_FERR
  3692  0000                     	_FERR	set	0xC2	;byte address: 0x18
  3693                           
  3694                           	global	_GCEN
  3695                           	global	_GCEN
  3696  0000                     	_GCEN	set	0x48F	;byte address: 0x91
  3697                           
  3698                           	global	_GIE
  3699                           	global	_GIE
  3700  0000                     	_GIE	set	0x5F	;byte address: 0xB
  3701                           
  3702                           	global	_GODONE
  3703                           	global	_GODONE
  3704  0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  3705                           
  3706                           	global	_IBF
  3707                           	global	_IBF
  3708  0000                     	_IBF	set	0x44F	;byte address: 0x89
  3709                           
  3710                           	global	_IBOV
  3711                           	global	_IBOV
  3712  0000                     	_IBOV	set	0x44D	;byte address: 0x89
  3713                           
  3714                           	global	_INTE
  3715                           	global	_INTE
  3716  0000                     	_INTE	set	0x5C	;byte address: 0xB
  3717                           
  3718                           	global	_INTEDG
  3719                           	global	_INTEDG
  3720  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  3721                           
  3722                           	global	_INTF
  3723                           	global	_INTF
  3724  0000                     	_INTF	set	0x59	;byte address: 0xB
  3725                           
  3726                           	global	_IRP
  3727                           	global	_IRP
  3728  0000                     	_IRP	set	0x1F	;byte address: 0x3
  3729                           
  3730                           	global	_Lcd_en
  3731  0000                     	_Lcd_en	set	0x3D	;byte address: 0x7
  3732                           
  3733                           	global	_Lcd_rs
  3734  0000                     	_Lcd_rs	set	0x3C	;byte address: 0x7
  3735                           
  3736                           	global	_OBF
  3737                           	global	_OBF
  3738  0000                     	_OBF	set	0x44E	;byte address: 0x89
  3739                           
  3740                           	global	_OERR
  3741                           	global	_OERR
  3742  0000                     	_OERR	set	0xC1	;byte address: 0x18
  3743                           
  3744                           	global	_PCFG0
  3745                           	global	_PCFG0
  3746  0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  3747                           
  3748                           	global	_PCFG1
  3749                           	global	_PCFG1
  3750  0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  3751                           
  3752                           	global	_PCFG2
  3753                           	global	_PCFG2
  3754  0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  3755                           
  3756                           	global	_PCFG3
  3757                           	global	_PCFG3
  3758  0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  3759                           
  3760                           	global	_PD
  3761                           	global	_PD
  3762  0000                     	_PD	set	0x1B	;byte address: 0x3
  3763                           
  3764                           	global	_PEIE
  3765                           	global	_PEIE
  3766  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  3767                           
  3768                           	global	_PEN
  3769                           	global	_PEN
  3770  0000                     	_PEN	set	0x48A	;byte address: 0x91
  3771                           
  3772                           	global	_POR
  3773                           	global	_POR
  3774  0000                     	_POR	set	0x471	;byte address: 0x8E
  3775                           
  3776                           	global	_PS0
  3777                           	global	_PS0
  3778  0000                     	_PS0	set	0x408	;byte address: 0x81
  3779                           
  3780                           	global	_PS1
  3781                           	global	_PS1
  3782  0000                     	_PS1	set	0x409	;byte address: 0x81
  3783                           
  3784                           	global	_PS2
  3785                           	global	_PS2
  3786  0000                     	_PS2	set	0x40A	;byte address: 0x81
  3787                           
  3788                           	global	_PSA
  3789                           	global	_PSA
  3790  0000                     	_PSA	set	0x40B	;byte address: 0x81
  3791                           
  3792                           	global	_PSPIE
  3793                           	global	_PSPIE
  3794  0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  3795                           
  3796                           	global	_PSPIF
  3797                           	global	_PSPIF
  3798  0000                     	_PSPIF	set	0x67	;byte address: 0xC
  3799                           
  3800                           	global	_PSPMODE
  3801                           	global	_PSPMODE
  3802  0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  3803                           
  3804                           	global	_RA0
  3805                           	global	_RA0
  3806  0000                     	_RA0	set	0x28	;byte address: 0x5
  3807                           
  3808                           	global	_RA1
  3809                           	global	_RA1
  3810  0000                     	_RA1	set	0x29	;byte address: 0x5
  3811                           
  3812                           	global	_RA2
  3813                           	global	_RA2
  3814  0000                     	_RA2	set	0x2A	;byte address: 0x5
  3815                           
  3816                           	global	_RA3
  3817                           	global	_RA3
  3818  0000                     	_RA3	set	0x2B	;byte address: 0x5
  3819                           
  3820                           	global	_RA4
  3821                           	global	_RA4
  3822  0000                     	_RA4	set	0x2C	;byte address: 0x5
  3823                           
  3824                           	global	_RA5
  3825                           	global	_RA5
  3826  0000                     	_RA5	set	0x2D	;byte address: 0x5
  3827                           
  3828                           	global	_RB0
  3829  0000                     	_RB0	set	0x30	;byte address: 0x6
  3830                           
  3831                           	global	_RB1
  3832  0000                     	_RB1	set	0x31	;byte address: 0x6
  3833                           
  3834                           	global	_RB2
  3835                           	global	_RB2
  3836  0000                     	_RB2	set	0x32	;byte address: 0x6
  3837                           
  3838                           	global	_RB3
  3839                           	global	_RB3
  3840  0000                     	_RB3	set	0x33	;byte address: 0x6
  3841                           
  3842                           	global	_RB4
  3843                           	global	_RB4
  3844  0000                     	_RB4	set	0x34	;byte address: 0x6
  3845                           
  3846                           	global	_RB5
  3847                           	global	_RB5
  3848  0000                     	_RB5	set	0x35	;byte address: 0x6
  3849                           
  3850                           	global	_RB6
  3851                           	global	_RB6
  3852  0000                     	_RB6	set	0x36	;byte address: 0x6
  3853                           
  3854                           	global	_RB7
  3855                           	global	_RB7
  3856  0000                     	_RB7	set	0x37	;byte address: 0x6
  3857                           
  3858                           	global	_RBIE
  3859                           	global	_RBIE
  3860  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  3861                           
  3862                           	global	_RBIF
  3863                           	global	_RBIF
  3864  0000                     	_RBIF	set	0x58	;byte address: 0xB
  3865                           
  3866                           	global	_RBPU
  3867                           	global	_RBPU
  3868  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  3869                           
  3870                           	global	_RC0
  3871                           	global	_RC0
  3872  0000                     	_RC0	set	0x38	;byte address: 0x7
  3873                           
  3874                           	global	_RC1
  3875                           	global	_RC1
  3876  0000                     	_RC1	set	0x39	;byte address: 0x7
  3877                           
  3878                           	global	_RC2
  3879                           	global	_RC2
  3880  0000                     	_RC2	set	0x3A	;byte address: 0x7
  3881                           
  3882                           	global	_RC3
  3883                           	global	_RC3
  3884  0000                     	_RC3	set	0x3B	;byte address: 0x7
  3885                           
  3886                           	global	_RC4
  3887                           	global	_RC4
  3888  0000                     	_RC4	set	0x3C	;byte address: 0x7
  3889                           
  3890                           	global	_RC5
  3891                           	global	_RC5
  3892  0000                     	_RC5	set	0x3D	;byte address: 0x7
  3893                           
  3894                           	global	_RC6
  3895                           	global	_RC6
  3896  0000                     	_RC6	set	0x3E	;byte address: 0x7
  3897                           
  3898                           	global	_RC7
  3899                           	global	_RC7
  3900  0000                     	_RC7	set	0x3F	;byte address: 0x7
  3901                           
  3902                           	global	_RCEN
  3903                           	global	_RCEN
  3904  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  3905                           
  3906                           	global	_RCIE
  3907                           	global	_RCIE
  3908  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  3909                           
  3910                           	global	_RCIF
  3911                           	global	_RCIF
  3912  0000                     	_RCIF	set	0x65	;byte address: 0xC
  3913                           
  3914                           	global	_RD
  3915                           	global	_RD
  3916  0000                     	_RD	set	0xC60	;byte address: 0x18C
  3917                           
  3918                           	global	_RD0
  3919                           	global	_RD0
  3920  0000                     	_RD0	set	0x40	;byte address: 0x8
  3921                           
  3922                           	global	_RD1
  3923                           	global	_RD1
  3924  0000                     	_RD1	set	0x41	;byte address: 0x8
  3925                           
  3926                           	global	_RD2
  3927                           	global	_RD2
  3928  0000                     	_RD2	set	0x42	;byte address: 0x8
  3929                           
  3930                           	global	_RD3
  3931                           	global	_RD3
  3932  0000                     	_RD3	set	0x43	;byte address: 0x8
  3933                           
  3934                           	global	_RD4
  3935                           	global	_RD4
  3936  0000                     	_RD4	set	0x44	;byte address: 0x8
  3937                           
  3938                           	global	_RD5
  3939                           	global	_RD5
  3940  0000                     	_RD5	set	0x45	;byte address: 0x8
  3941                           
  3942                           	global	_RD6
  3943                           	global	_RD6
  3944  0000                     	_RD6	set	0x46	;byte address: 0x8
  3945                           
  3946                           	global	_RD7
  3947                           	global	_RD7
  3948  0000                     	_RD7	set	0x47	;byte address: 0x8
  3949                           
  3950                           	global	_RE0
  3951                           	global	_RE0
  3952  0000                     	_RE0	set	0x48	;byte address: 0x9
  3953                           
  3954                           	global	_RE1
  3955                           	global	_RE1
  3956  0000                     	_RE1	set	0x49	;byte address: 0x9
  3957                           
  3958                           	global	_RE2
  3959                           	global	_RE2
  3960  0000                     	_RE2	set	0x4A	;byte address: 0x9
  3961                           
  3962                           	global	_RP0
  3963                           	global	_RP0
  3964  0000                     	_RP0	set	0x1D	;byte address: 0x3
  3965                           
  3966                           	global	_RP1
  3967                           	global	_RP1
  3968  0000                     	_RP1	set	0x1E	;byte address: 0x3
  3969                           
  3970                           	global	_RSEN
  3971                           	global	_RSEN
  3972  0000                     	_RSEN	set	0x489	;byte address: 0x91
  3973                           
  3974                           	global	_RW
  3975                           	global	_RW
  3976  0000                     	_RW	set	0x4A2	;byte address: 0x94
  3977                           
  3978                           	global	_RX9
  3979                           	global	_RX9
  3980  0000                     	_RX9	set	0xC6	;byte address: 0x18
  3981                           
  3982                           	global	_RX9D
  3983                           	global	_RX9D
  3984  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  3985                           
  3986                           	global	_SEN
  3987                           	global	_SEN
  3988  0000                     	_SEN	set	0x488	;byte address: 0x91
  3989                           
  3990                           	global	_SMP
  3991                           	global	_SMP
  3992  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  3993                           
  3994                           	global	_SPEN
  3995                           	global	_SPEN
  3996  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  3997                           
  3998                           	global	_SREN
  3999                           	global	_SREN
  4000  0000                     	_SREN	set	0xC5	;byte address: 0x18
  4001                           
  4002                           	global	_SSPEN
  4003                           	global	_SSPEN
  4004  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  4005                           
  4006                           	global	_SSPIE
  4007                           	global	_SSPIE
  4008  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  4009                           
  4010                           	global	_SSPIF
  4011                           	global	_SSPIF
  4012  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  4013                           
  4014                           	global	_SSPM0
  4015                           	global	_SSPM0
  4016  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  4017                           
  4018                           	global	_SSPM1
  4019                           	global	_SSPM1
  4020  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  4021                           
  4022                           	global	_SSPM2
  4023                           	global	_SSPM2
  4024  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  4025                           
  4026                           	global	_SSPM3
  4027                           	global	_SSPM3
  4028  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  4029                           
  4030                           	global	_SSPOV
  4031                           	global	_SSPOV
  4032  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  4033                           
  4034                           	global	_START
  4035                           	global	_START
  4036  0000                     	_START	set	0x4A3	;byte address: 0x94
  4037                           
  4038                           	global	_STOP
  4039                           	global	_STOP
  4040  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  4041                           
  4042                           	global	_SYNC
  4043                           	global	_SYNC
  4044  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  4045                           
  4046                           	global	_T0CS
  4047                           	global	_T0CS
  4048  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  4049                           
  4050                           	global	_T0IE
  4051                           	global	_T0IE
  4052  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  4053                           
  4054                           	global	_T0IF
  4055                           	global	_T0IF
  4056  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  4057                           
  4058                           	global	_T0SE
  4059                           	global	_T0SE
  4060  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  4061                           
  4062                           	global	_T1CKPS0
  4063                           	global	_T1CKPS0
  4064  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  4065                           
  4066                           	global	_T1CKPS1
  4067                           	global	_T1CKPS1
  4068  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  4069                           
  4070                           	global	_T1OSCEN
  4071                           	global	_T1OSCEN
  4072  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  4073                           
  4074                           	global	_T1SYNC
  4075                           	global	_T1SYNC
  4076  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  4077                           
  4078                           	global	_T2CKPS0
  4079                           	global	_T2CKPS0
  4080  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  4081                           
  4082                           	global	_T2CKPS1
  4083                           	global	_T2CKPS1
  4084  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  4085                           
  4086                           	global	_TMR0IE
  4087                           	global	_TMR0IE
  4088  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  4089                           
  4090                           	global	_TMR0IF
  4091                           	global	_TMR0IF
  4092  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  4093                           
  4094                           	global	_TMR1CS
  4095                           	global	_TMR1CS
  4096  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  4097                           
  4098                           	global	_TMR1IE
  4099                           	global	_TMR1IE
  4100  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  4101                           
  4102                           	global	_TMR1IF
  4103                           	global	_TMR1IF
  4104  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  4105                           
  4106                           	global	_TMR1ON
  4107                           	global	_TMR1ON
  4108  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  4109                           
  4110                           	global	_TMR2IE
  4111                           	global	_TMR2IE
  4112  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  4113                           
  4114                           	global	_TMR2IF
  4115                           	global	_TMR2IF
  4116  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  4117                           
  4118                           	global	_TMR2ON
  4119                           	global	_TMR2ON
  4120  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  4121                           
  4122                           	global	_TO
  4123                           	global	_TO
  4124  0000                     	_TO	set	0x1C	;byte address: 0x3
  4125                           
  4126                           	global	_TOUTPS0
  4127                           	global	_TOUTPS0
  4128  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  4129                           
  4130                           	global	_TOUTPS1
  4131                           	global	_TOUTPS1
  4132  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  4133                           
  4134                           	global	_TOUTPS2
  4135                           	global	_TOUTPS2
  4136  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  4137                           
  4138                           	global	_TOUTPS3
  4139                           	global	_TOUTPS3
  4140  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  4141                           
  4142                           	global	_TRISA0
  4143                           	global	_TRISA0
  4144  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  4145                           
  4146                           	global	_TRISA1
  4147                           	global	_TRISA1
  4148  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  4149                           
  4150                           	global	_TRISA2
  4151                           	global	_TRISA2
  4152  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  4153                           
  4154                           	global	_TRISA3
  4155                           	global	_TRISA3
  4156  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  4157                           
  4158                           	global	_TRISA4
  4159                           	global	_TRISA4
  4160  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  4161                           
  4162                           	global	_TRISA5
  4163                           	global	_TRISA5
  4164  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  4165                           
  4166                           	global	_TRISB0
  4167                           	global	_TRISB0
  4168  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  4169                           
  4170                           	global	_TRISB1
  4171                           	global	_TRISB1
  4172  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  4173                           
  4174                           	global	_TRISB2
  4175                           	global	_TRISB2
  4176  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  4177                           
  4178                           	global	_TRISB3
  4179                           	global	_TRISB3
  4180  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  4181                           
  4182                           	global	_TRISB4
  4183                           	global	_TRISB4
  4184  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  4185                           
  4186                           	global	_TRISB5
  4187                           	global	_TRISB5
  4188  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  4189                           
  4190                           	global	_TRISB6
  4191                           	global	_TRISB6
  4192  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  4193                           
  4194                           	global	_TRISB7
  4195                           	global	_TRISB7
  4196  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  4197                           
  4198                           	global	_TRISC0
  4199                           	global	_TRISC0
  4200  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  4201                           
  4202                           	global	_TRISC1
  4203                           	global	_TRISC1
  4204  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  4205                           
  4206                           	global	_TRISC2
  4207                           	global	_TRISC2
  4208  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  4209                           
  4210                           	global	_TRISC3
  4211                           	global	_TRISC3
  4212  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  4213                           
  4214                           	global	_TRISC4
  4215                           	global	_TRISC4
  4216  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  4217                           
  4218                           	global	_TRISC5
  4219                           	global	_TRISC5
  4220  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  4221                           
  4222                           	global	_TRISC6
  4223                           	global	_TRISC6
  4224  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  4225                           
  4226                           	global	_TRISC7
  4227                           	global	_TRISC7
  4228  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  4229                           
  4230                           	global	_TRISD0
  4231                           	global	_TRISD0
  4232  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  4233                           
  4234                           	global	_TRISD1
  4235                           	global	_TRISD1
  4236  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  4237                           
  4238                           	global	_TRISD2
  4239                           	global	_TRISD2
  4240  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  4241                           
  4242                           	global	_TRISD3
  4243                           	global	_TRISD3
  4244  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  4245                           
  4246                           	global	_TRISD4
  4247                           	global	_TRISD4
  4248  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  4249                           
  4250                           	global	_TRISD5
  4251                           	global	_TRISD5
  4252  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  4253                           
  4254                           	global	_TRISD6
  4255                           	global	_TRISD6
  4256  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  4257                           
  4258                           	global	_TRISD7
  4259                           	global	_TRISD7
  4260  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  4261                           
  4262                           	global	_TRISE0
  4263                           	global	_TRISE0
  4264  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  4265                           
  4266                           	global	_TRISE1
  4267                           	global	_TRISE1
  4268  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  4269                           
  4270                           	global	_TRISE2
  4271                           	global	_TRISE2
  4272  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  4273                           
  4274                           	global	_TRMT
  4275                           	global	_TRMT
  4276  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  4277                           
  4278                           	global	_TX9
  4279                           	global	_TX9
  4280  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  4281                           
  4282                           	global	_TX9D
  4283                           	global	_TX9D
  4284  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  4285                           
  4286                           	global	_TXEN
  4287                           	global	_TXEN
  4288  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  4289                           
  4290                           	global	_TXIE
  4291                           	global	_TXIE
  4292  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  4293                           
  4294                           	global	_TXIF
  4295                           	global	_TXIF
  4296  0000                     	_TXIF	set	0x64	;byte address: 0xC
  4297                           
  4298                           	global	_UA
  4299                           	global	_UA
  4300  0000                     	_UA	set	0x4A1	;byte address: 0x94
  4301                           
  4302                           	global	_WCOL
  4303                           	global	_WCOL
  4304  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  4305                           
  4306                           	global	_WR
  4307                           	global	_WR
  4308  0000                     	_WR	set	0xC61	;byte address: 0x18C
  4309                           
  4310                           	global	_WREN
  4311                           	global	_WREN
  4312  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  4313                           
  4314                           	global	_WRERR
  4315                           	global	_WRERR
  4316  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  4317                           
  4318                           	global	_ZERO
  4319                           	global	_ZERO
  4320  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  4321                           
  4322                           	psect	strings
  4323                           	
  4324  070F                     STR_2:	
  4325  070F  3420               	retlw	32	;' '
  4326  0710  3420               	retlw	32	;' '
  4327  0711  3420               	retlw	32	;' '
  4328  0712  3420               	retlw	32	;' '
  4329  0713  3476               	retlw	118	;'v'
  4330  0714  3461               	retlw	97	;'a'
  4331  0715  346C               	retlw	108	;'l'
  4332  0716  3475               	retlw	117	;'u'
  4333  0717  3465               	retlw	101	;'e'
  4334  0718  3420               	retlw	32	;' '
  4335  0719  3420               	retlw	32	;' '
  4336  071A  3420               	retlw	32	;' '
  4337  071B  3420               	retlw	32	;' '
  4338  071C  3420               	retlw	32	;' '
  4339  071D  3420               	retlw	32	;' '
  4340  071E  3420               	retlw	32	;' '
  4341  071F  3400               	retlw	0
  4342                           	
  4343  0720                     STR_1:	
  4344  0720  3420               	retlw	32	;' '
  4345  0721  3420               	retlw	32	;' '
  4346  0722  3420               	retlw	32	;' '
  4347  0723  3420               	retlw	32	;' '
  4348  0724  3457               	retlw	87	;'W'
  4349  0725  3445               	retlw	69	;'E'
  4350  0726  344C               	retlw	76	;'L'
  4351  0727  3443               	retlw	67	;'C'
  4352  0728  344F               	retlw	79	;'O'
  4353  0729  344D               	retlw	77	;'M'
  4354  072A  3445               	retlw	69	;'E'
  4355  072B  3420               	retlw	32	;' '
  4356  072C  3420               	retlw	32	;' '
  4357  072D  3420               	retlw	32	;' '
  4358  072E  3420               	retlw	32	;' '
  4359  072F  3420               	retlw	32	;' '
  4360  0730  3400               	retlw	0
  4361  0000                     STR_3	equ	STR_2+0
  4362                           	PSECT	fnauto0,class=BANK0,space=1
  4363                           	FNCONF	fnauto0,??,?
  4364                           
  4365                           	DABS	1,126,2	;btemp
  4366                           	global	btemp
  4367  0000                     	btemp set 07Eh
  4368                           apbank macro
  4369                           	bcf	status,5
  4370                           	bcf	status,6
  4371  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Sat Jan 06 09:54:46 2024

                    l1 06FF                      l2 0529  
                    l3 04F7                      l4 0528  
                    l6 04FE                      l8 0506  
                    l9 0509              __Lrdata_0 0000  
                    pc 0002              __Lramdata 0000  
                   l11 050F                     l20 0549  
                   l12 06E2                     _DA 04A5  
                   l13 0569                     _BF 04A0  
                   l30 0585                     l22 054F  
                   l14 053A                     _DC 0019  
                   l23 06E2                     l31 0588  
                   l15 0568                     l24 05A8  
                   l41 05C4                     l33 058E  
                   l25 0579                     l17 053E  
                   l34 06E2                     l50 05FB  
                   l42 05C7                     l26 05A7  
                   l35 05E7                     l19 0546  
                   l52 0603                     l44 05CD  
                   l36 05B8                     l28 057D  
                   l45 06E2                     l61 063A  
                   l53 0606                     l37 05E6  
                   l70 06A3                     l46 0626  
                   l63 0642                     l55 060C  
                   l47 05F7                     l39 05BC  
                   l56 06E2                     l80 06B4  
                   l72 0679                     l64 0645  
                   l48 0625                     l81 06E2  
                   l57 0665                     l74 0681  
                   l66 064B                     l58 0636  
                   l67 06E2                     l83 06B8  
                   l75 0684                     l59 0664  
                   l68 06A4                     l85 06C0  
                   l77 068A                     l69 0675  
                   l78 06E2                     l86 06C3  
                   l79 06E2                     l88 06C9  
                   _PD 001B                     _RD 0C60  
                   _UA 04A1                     _TO 001C  
                   _RW 04A2                     _WR 0C61  
                   fsr 0004          _Lcd8_Write_lr 0030  
     _Lcd8_Command_com 0032        ___lwmod_divisor 0032  
      ___lwmod_counter 0034                    l200 00D3  
                  l201 0101                    l212 07FF  
                  l220 07EB                    l213 07F8  
                  l221 040F                    l214 07CF  
                  l222 040E                    l215 07C4  
                  l223 03ED                    l216 07D3  
                  l224 03E2                    l225 03F1  
                  l218 07F8                    l219 07D3  
                  l227 040E                    l228 03F1  
                  l180 03D7                    l229 0401  
                  l181 03B4                    l182 03D7  
                  l191 0351                    l184 03C9  
                  l177 036A                    l193 010C  
                  l178 0388                    l450 042A  
                  l370 04A2                    l186 07B5  
                  l194 0052                    l179 03AC  
                  l451 0460                    l371 0497  
                  l188 0351                    l452 043F  
                  l372 04A6                    l196 0084  
                  l189 0341                    l453 0434  
                  l197 010C                    _CM0 04E0  
                  l454 0443                    l366 04DB  
                  l374 04CB                    l198 009A  
                  _CM1 04E1                    l375 04A6  
                  l367 047C                    l199 010C  
                  _CM2 04E2                    l448 046A  
                  l456 0460                    l376 04BE  
                  l368 0489                    l457 0443  
                  l449 0421                    l377 04D4  
                  l369 04CB                    l458 0453  
                  l459 0469                    _CKE 04A6  
                  _IBF 044F                    _CIS 04E3  
                  _CKP 00A4                    _GIE 005F  
                  _BOR 0470                    _RA0 0028  
                  _RA1 0029                    _RB0 0030  
                  _RA2 002A                    _RB1 0031  
                  _RA3 002B                    _RC0 0038  
                  _RB2 0032                    _RA4 002C  
                  _RC1 0039                    _RB3 0033  
                  _RA5 002D                    _RD0 0040  
                  _RC2 003A                    _RB4 0034  
                  _RD1 0041                    _RC3 003B  
                  _RB5 0035                    _RE0 0048  
                  _RD2 0042                    _RC4 003C  
                  _RB6 0036                    _RE1 0049  
                  _RD3 0043                    _RC5 003D  
                  _RB7 0037                    _RE2 004A  
                  _RD4 0044                    _RC6 003E  
                  _RD5 0045                    _RC7 003F  
                  _RD6 0046                    _OBF 044E  
                  _RD7 0047                    _FSR 0004  
                  _PCL 0002                    _PS0 0408  
                  _PR2 0092                    _PS1 0409  
                  _RP0 001D                    _PS2 040A  
                  _PEN 048A                    _IRP 001F  
                  _RP1 001E                    _SEN 0488  
                  _PSA 040B       _Lcd8_Display_com 0027  
                  _POR 0471                    _RX9 00C6  
                  _SMP 04A7                    _TX9 04C6  
             _adc_hbit 0075               _adc_lbit 0077  
             _adc_val1 007B               _adc_temp 0071  
       _Lcd8_Write_com 0031                    indf 0000  
     ___lwmod_dividend 0030                ??_Delay 0035  
     ___lwdiv_dividend 0030                   _ADIE 0466  
                 _ADIF 0066                   _ADFM 04FF  
                 _ADGO 00FA               __tempreg 0020  
                 _ADON 00F8                   _CHS0 00FB  
                 _CHS1 00FC                   _CHS2 00FD  
                 _EEIE 046C                   _EEIF 006C  
                 STR_1 0720                   STR_2 070F  
                 STR_3 070F                   _GCEN 048F  
                 _CMIE 046E                   _CMIF 006E  
                 _BRGH 04C2                   _T0IE 005D  
                 _T0IF 005A                   _CREN 00C4  
                 _T0CS 040D                   _FERR 00C2  
                 _IBOV 044D                   _CVR0 04E8  
                 u1300 03DE                   _CVR1 04E9  
                 u1301 03DD                   _CVR2 04EA  
                 _CVR3 04EB                   u1320 03F1  
                 u3000 064B                   u1321 03F0  
                 u3001 064A                   u1330 03FB  
                 u3010 0664                   _T0SE 040C  
                 _CSRC 04C7                   u1331 03FA  
                 u1315 03E3                   u3011 0663  
                 u1180 03D7                   u3100 06C9  
                 u3020 066B                   u1181 03D6  
                 u3101 06C8                   u3021 066A  
                 _INDF 0000                   u1190 0351  
                 u1350 040E                   u3110 06E2  
                 u1191 0350                   u1351 040D  
                 u1335 03F7                   u3111 06E1  
                 u3040 0681                   u3120 0078  
                 u1345 0402                   u1185 03D3  
                 u3041 0680                   u3121 0077  
                 u3210 07F8                   u3050 068A  
                 u3130 008E                   u1195 034D  
                 u3211 07F7                   u3051 0689  
                 u3131 008D                   u3060 06A3  
                 u3140 00A4                   u3205 07EC  
                 u3061 06A2                   u3141 00A3  
                 u3125 0074                   u3150 07C0  
                 u3070 06AA                   u3151 07BF  
                 u3071 06A9                   u3135 008A  
                 u1800 04A6                   u1801 04A5  
                 u3145 00A0                   u3170 07D3  
                 u3090 06C0                   u3171 07D2  
                 u3091 06BF                   u1820 04B7  
                 u3165 07C5                   u1821 04B6  
                 u3190 07E4                   u1910 0443  
                 _PIE1 008C                   u3191 07E3  
                 u1911 0442                   u1815 04A7  
                 _PIE2 008D                   u1920 044D  
                 u1840 04CB                   u1760 0474  
                 u2800 054F                   u2720 04ED  
                 u3185 07D4                   u1921 044C  
                 u1905 0435                   u1841 04CA  
                 u1825 04B3                   u1761 0473  
                 u2801 054E                   u2721 04EC  
                 u1850 04CF                   u1770 0480  
                 u2810 0568                   u3195 07E0  
                 u1835 04BF                   u1771 047F  
                 u2811 0567                   u1940 0460  
                 u1780 0493                   u2900 05CD  
                 u2820 056F                   u2740 0506  
                 u1941 045F                   u1925 0449  
                 u1781 0492                   u2901 05CC  
                 u2821 056E                   u2741 0505  
                 _CVRR 04ED                   u1950 0464  
                 u1870 0419                   u2910 05E6  
                 u2750 050F                   u1935 0454  
                 u1871 0418                   u2911 05E5  
                 u2751 050E                   u1880 0425  
                 u2920 05ED                   u2840 0585  
                 u2760 0528                   u1881 0424  
                 u2921 05EC                   u2841 0584  
                 u2761 0527                   u1890 0430  
                 u2850 058E                   u2770 0530  
                 _PEIE 005E                   u1891 042F  
                 u1795 0498                   u2851 058D  
                 u2771 052F                   u2940 0603  
                 u2860 05A7                   _INTE 005C  
                 u2941 0602                   u2861 05A6  
                 _INTF 0059                   u2950 060C  
                 u2870 05AE                   u2790 0546  
                 _RBIE 005B                   u2951 060B  
                 u2871 05AD                   u2791 0545  
                 _RBIF 0058                   u2960 0625  
                 u2961 0624                   u2970 062C  
                 u2890 05C4                   _RCIE 0465  
                 u2971 062B                   u2891 05C3  
                 _RCIF 0065                   _RCEN 048B  
                 u2990 0642                   u2991 0641  
                 _PCON 008E                   _PIR1 000C  
                 _PIR2 000D                   _OERR 00C1  
                 _RBPU 040F                   _RX9D 00C0  
                 _TMR0 0001                   _TMR2 0011  
                 _WCOL 00A7                   _SPEN 00C7  
                 _RSEN 0489              __databank 0000  
                 _TX9D 04C0                   _SREN 00C5  
                 _TRMT 04C1                   _STOP 04A4  
                 _ZERO 001A                   _TXIE 0464  
                 _WREN 0C62                   _TXIF 0064  
                 _TXEN 04C5                   _SYNC 04C4  
    _Lcd8_Display_word 0024              _adc_temp0 0073  
        ?_Lcd8_Command 0032          ?_Lcd8_Display 0024  
                 _main 0015               _main_tep 0020  
                 btemp 007E                   start 0000  
         ___awdiv_sign 0034      _Lcd8_Decimal3_com 0025  
    _Lcd8_Decimal3_val 0024        ___awmod_divisor 0032  
      ___awmod_counter 0035           ___awmod_sign 0034  
     __end_of_Adc8_Cha 0700        __end_of___awdiv 04DC  
      __end_of___awmod 046B              stringcode 0708  
        __end_of_Delay 0352        __end_of___lwdiv 0800  
     ___lwdiv_quotient 0035        __end_of___lwmod 0410  
              _CCP1CON 0017                _CCP2CON 001D  
              _ACKSTAT 048E                  _C1INV 04E4  
   _Lcd8_Display_Lcd_i 0028                  _C2INV 04E5  
                _C1OUT 04E6                  _C2OUT 04E7  
                _ADCS0 00FE                  _ADCS1 00FF  
                _ADCS2 04FE                  _ADDEN 00C3  
                ?_main 0020                  _ACKEN 048C  
                _ACKDT 048D                  _BCLIE 046B  
                _BCLIF 006B                  _CCP1X 00BD  
                _CCP1Y 00BC                  _CCP2X 00ED  
                _CCP2Y 00EC                  _EEADR 010D  
                _CARRY 0018                  _EEPGD 0C67  
                _CMCON 009C         ?_Lcd8_Decimal3 0024  
                _T1CON 0010                  _T2CON 0012  
              _T1CKPS0 0084                _T1CKPS1 0085  
                _PCFG0 04F8                  _PCFG1 04F9  
                _PCFG2 04FA                  _PCFG3 04FB  
              _T2CKPS0 0090                _T2CKPS1 0091  
                _CVREN 04EF                  _CVROE 04EE  
                _RCREG 001A                  _RCSTA 0018  
                _TMR1H 000F                  _TMR1L 000E  
                _SPBRG 0099                  _PORTA 0005  
                _PORTB 0006        ??_Lcd8_Decimal3 0025  
              _T1OSCEN 0083                  _PORTC 0007  
                _PORTD 0008                  _PORTE 0009  
                _PSPIE 0467                  _PSPIF 0067  
                _START 04A3                  _SSPM0 00A0  
                _SSPM1 00A1                  _SSPM2 00A2  
                _SSPM3 00A3                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087  
                _TRISD 0088                  _SSPIE 0463  
                _TRISE 0089                  _SSPIF 0063  
                _SSPEN 00A5                  _SSPOV 00A6  
                _WRERR 0C63                  _TXREG 0019  
                _TXSTA 0098                  _Delay 0340  
                _adc_j 0079                _PSPMODE 044C  
            _main_volt 0022                _SSPCON2 0091  
              _SSPSTAT 0094                _TOUTPS0 0093  
              _TOUTPS1 0094                _TOUTPS2 0095  
              _TOUTPS3 0096                  pclath 000A  
                status 0003       ___awmod_dividend 0030  
           _Lcd8_Write 0389     __end_of_Lcd8_Write 03AD  
     ___awdiv_dividend 0030            __stringbase 070E  
         _Adc8_Cha_val 0026                ___awdiv 046B  
              ___awmod 0410                _adc_del 007D  
             ?___awdiv 0030               ?___awmod 0030  
              _adc_val 007A                ___lwdiv 07B6  
              ___lwmod 03D8               ?___lwdiv 0030  
             ?___lwmod 0030              ??___awdiv 0034  
            ??___awmod 0034            ?_Lcd8_Write 0030  
            ??___lwdiv 0034              ??___lwmod 0034  
               ??_main 0020        ___lwdiv_divisor 0032  
      ___lwdiv_counter 0034                 ?_Delay 0033  
             stringdir 0709               stringjmp 070D  
             stringtab 0700                 _ADCON0 001F  
               _ADCON1 009F                 _CCP1M0 00B8  
               _CCP1M1 00B9                 _CCP1M2 00BA  
               _CCP1M3 00BB                 _CCP2M0 00E8  
               _CCP2M1 00E9                 _CCP2M2 00EA  
               _CCP2M3 00EB                 _CCP1IE 0462  
               _CCP1IF 0062                 _CCP2IE 0468  
               _CCP2IF 0068                 _ADRESH 001E  
               _EEADRH 010F                 _ADRESL 009E  
               _EEADRL 010D                 _EEDATA 010C  
               _CCPR1H 0016                 _EEDATH 010E  
               _CCPR2H 001C                 _CCPR1L 0015  
               _CCPR2L 001B                 _EECON1 018C  
               _EECON2 018D           __end_of_main 0110  
     ___awdiv_quotient 0036                 _GODONE 00FA  
               _CVRCON 009D                 _T1SYNC 0082  
               _INTEDG 040E                 _PCLATH 000A  
               _INTCON 000B           ??_Lcd8_Write 0031  
               _TMR0IE 005D                 _TMR0IF 005A  
               _TMR1IE 0460                 _TMR1IF 0060  
               _TMR1CS 0081                 _TMR2IE 0461  
               _TMR2IF 0061                 _TMR1ON 0080  
               _OPTION 0081                 _TMR2ON 0092  
       ??_Lcd8_Command 0032                 _SSPADD 0093  
               _TRISA0 0428                 _TRISA1 0429  
               _TRISB0 0430                 _TRISA2 042A  
               _TRISB1 0431                 _TRISA3 042B  
               _TRISC0 0438                 _TRISB2 0432  
               _TRISA4 042C                 _TRISC1 0439  
               _TRISB3 0433                 _TRISA5 042D  
               _TRISD0 0440                 _TRISC2 043A  
               _TRISB4 0434                 _TRISD1 0441  
               _TRISC3 043B                 _TRISB5 0435  
       ??_Lcd8_Display 0027                 _TRISE0 0448  
               _TRISD2 0442                 _TRISC4 043C  
               _TRISB6 0436                 _TRISE1 0449  
               _TRISD3 0443                 _TRISC5 043D  
               _TRISB7 0437                 _TRISE2 044A  
               _TRISD4 0444                 _TRISC6 043E  
               _TRISD5 0445                 _TRISC7 043F  
               _TRISD6 0446                 _TRISD7 0447  
               _STATUS 0003                 _SSPCON 0014  
               _SSPBUF 0013                 _Lcd_en 003D  
               _Lcd_rs 003C              _Lcd8_Init 0352  
    __end_of_Lcd8_Init 036B        ___awdiv_divisor 0032  
       _Lcd8_Display_n 0025        ___awdiv_counter 0035  
           ?_Lcd8_Init 0024   _Lcd8_Decimal3_Lcd_hr 002C  
            _Delay_del 0033               _Adc8_Cha 04DC  
            ?_Adc8_Cha 0024          _Lcd8_Decimal3 0731  
           ??_Adc8_Cha 0026            ??_Lcd8_Init 0024  
  _Lcd8_Decimal3_Lcd_h 0028    _Lcd8_Decimal3_Lcd_o 002A  
  _Lcd8_Decimal3_Lcd_t 0026  __end_of_Lcd8_Decimal3 07B6  
         _Lcd8_Command 036B           _Lcd8_Display 03AD  
 __end_of_Lcd8_Command 0389   __end_of_Lcd8_Display 03D8  
             __Hcommon 007E              __Hrdata_0 0001  
            __Hramdata 0001               __Lcommon 0071  
