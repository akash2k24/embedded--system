

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Tue Dec 26 11:10:11 2023

HI-TECH Software Omniscient Code Generator build 3884
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 3884"
     2                           
     3                           	processor	16F877A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           global __tempreg
    39  0000                     __tempreg	set	32
    40                           global __Lrbss_0, __Hrbss_0
    41  0000                     __Lrbss_0 set 0x36
    42  0000                     __Hrbss_0 set 0x69
    43                           global __Lrbss_0, __Hrbss_0
    44  0000                     __Lrbss_0 set 0x6A
    45  0000                     __Hrbss_0 set 0x7E
    46                           global __Lrbss_1, __Hrbss_1
    47  0000                     __Lrbss_1 set 0xEA
    48  0000                     __Hrbss_1 set 0xF0
    49                           global __Lrdata_1, __Hrdata_1
    50  0000                     __Lrdata_1	equ	0xE1
    51  0000                     __Hrdata_1	equ	0xEA
    52                           global __Lramdata, __Lrdata_1, __Hramdata, __Hr
                                 data_1
    53  0000                     __Lramdata	set	__Lrdata_1
    54  0000                     __Hramdata	set	__Hrdata_1
    55                           	GLOBAL	__databank
    56  0000                     __databank	EQU	1
    57  0000                     _Lcd8_Decimal3_com	equ	??_Lcd8_Decimal3+0
    58                           	global	_Lcd8_Decimal3_com
    59  0000                     _Lcd8_Decimal3_Lcd_h	equ	??_Lcd8_Decimal3+1
    60                           	global	_Lcd8_Decimal3_Lcd_h
    61  0000                     _Lcd8_Decimal3_Lcd_t	equ	??_Lcd8_Decimal3+3
    62                           	global	_Lcd8_Decimal3_Lcd_t
    63  0000                     _Lcd8_Decimal3_Lcd_o	equ	??_Lcd8_Decimal3+5
    64                           	global	_Lcd8_Decimal3_Lcd_o
    65  0000                     _Lcd8_Decimal3_Lcd_hr	equ	??_Lcd8_Decimal3+7
    66                           	global	_Lcd8_Decimal3_Lcd_hr
    67  0000                     _Lcd8_Decimal3_val	equ	?_Lcd8_Decimal3+0
    68                           	global	_Lcd8_Decimal3_val
    69  0000                     _Serial_Init_baud	equ	?_Serial_Init+0
    70                           	global	_Serial_Init_baud
    71  0000                     _Adc8_Cha_val	equ	??_Adc8_Cha+0
    72                           	global	_Adc8_Cha_val
    73  0000                     _Receive_rece	equ	??_Receive+0
    74                           	global	_Receive_rece
    75  0000                     _Lcd8_Display_com	equ	??_Lcd8_Display+0
    76                           	global	_Lcd8_Display_com
    77  0000                     _Lcd8_Display_Lcd_i	equ	??_Lcd8_Display+1
    78                           	global	_Lcd8_Display_Lcd_i
    79  0000                     _Lcd8_Display_word	equ	?_Lcd8_Display+0
    80                           	global	_Lcd8_Display_word
    81  0000                     _Lcd8_Display_n	equ	?_Lcd8_Display+1
    82                           	global	_Lcd8_Display_n
    83  0000                     ___lwmod_counter	equ	??___lwmod+0
    84                           	global	___lwmod_counter
    85  0000                     ___lwmod_dividend	equ	?___lwmod+0
    86                           	global	___lwmod_dividend
    87  0000                     ___lwmod_divisor	equ	?___lwmod+2
    88                           	global	___lwmod_divisor
    89  0000                     ___awdiv_counter	equ	??___awdiv+0
    90                           	global	___awdiv_counter
    91  0000                     ___awdiv_sign	equ	??___awdiv+1
    92                           	global	___awdiv_sign
    93  0000                     ___awdiv_quotient	equ	??___awdiv+2
    94                           	global	___awdiv_quotient
    95  0000                     ___awdiv_dividend	equ	?___awdiv+0
    96                           	global	___awdiv_dividend
    97  0000                     ___awdiv_divisor	equ	?___awdiv+2
    98                           	global	___awdiv_divisor
    99  0000                     ___awmod_sign	equ	??___awmod+0
   100                           	global	___awmod_sign
   101  0000                     ___awmod_counter	equ	??___awmod+1
   102                           	global	___awmod_counter
   103  0000                     ___awmod_dividend	equ	?___awmod+0
   104                           	global	___awmod_dividend
   105  0000                     ___awmod_divisor	equ	?___awmod+2
   106                           	global	___awmod_divisor
   107  0000                     ___lwdiv_counter	equ	??___lwdiv+0
   108                           	global	___lwdiv_counter
   109  0000                     ___lwdiv_quotient	equ	??___lwdiv+1
   110                           	global	___lwdiv_quotient
   111  0000                     ___lwdiv_dividend	equ	?___lwdiv+0
   112                           	global	___lwdiv_dividend
   113  0000                     ___lwdiv_divisor	equ	?___lwdiv+2
   114                           	global	___lwdiv_divisor
   115  0000                     _Lcd8_Write_com	equ	??_Lcd8_Write+0
   116                           	global	_Lcd8_Write_com
   117  0000                     _Lcd8_Write_lr	equ	?_Lcd8_Write+0
   118                           	global	_Lcd8_Write_lr
   119  0000                     _Baudrate_baud	equ	?_Baudrate+0
   120                           	global	_Baudrate_baud
   121  0000                     _Lcd8_Command_com	equ	??_Lcd8_Command+0
   122                           	global	_Lcd8_Command_com
   123  0000                     _Delay_del	equ	?_Delay+0
   124                           	global	_Delay_del
   125                           ;Data sizes: Strings 123, constant 0, data 9, b
                                 ss 0, persistent 0 stack 21
   126                           	global	_main
   127                           	global	??_main
   128                           	global	?_main
   129                           
   130                           ; *************** function _main **************
                                 *
   131                           ; Defined at:
   132                           ;		line 25 in file "G:\accelerometer contol rob
                                 ot tx\CEP0896.C"
   133                           ; Parameters:
   134                           ;		None
   135                           ; Auto variables:
   136                           ;		None
   137                           ; Return value:
   138                           ;		type: void 
   139                           ;		size: 0
   140                           ; Registers used:
   141                           ;		wreg, status,2, status,0, pclath, cstack
   142                           ; Tracked objects:
   143                           ;		On entry : BFF/0
   144                           ;		On exit  : 0/0
   145                           ;		Unchanged: 0/0
   146                           ; Data sizes:
   147                           ;		Autos:    0
   148                           ;		Params:   0
   149                           ;		Temp:     0
   150                           ;		Total:    0
   151                           ; This function calls:
   152                           ;		_Lcd8_Init
   153                           ;		_Delay
   154                           ;		_Lcd8_Display
   155                           ;		_Serial_Init
   156                           ;		_Receive
   157                           ;		_Lcd8_Command
   158                           ;		_Adc8_Cha
   159                           ;		_Lcd8_Decimal3
   160                           ; This function is called by:
   161                           ;		Startup code after reset
   162                           ; This function uses a non-reentrant model
   163                           ; 
   164                           	psect	maintext,class=CODE,delta=2
   165                           	file	"G:\accelerometer contol robot tx\CEP0896
                                 .C"
   166                           	line	25
   167                           ;CEP0896.C: 13: unsigned int count,sec,b,temp,p
                                 res,hb,st,shb,sp,a=0,n1=0,n2=0,n3=0,x,y,z;
   168                           ;CEP0896.C: 14: unsigned char cu=0xc0,kc,val1[1
                                 2],s=0,j=0,u=0,qq=1;
   169                           ;CEP0896.C: 15: unsigned char c[5]={'1','2','3'
                                 ,'4'};
   170                           ;CEP0896.C: 17: unsigned int aa,add=0xc0,ss=0,f
                                 [5],i;
   171                           ;CEP0896.C: 19: void Gsm_Send();
   172                           ;CEP0896.C: 20: void Gsm();
   173                           ;CEP0896.C: 21: void number_entering();
   174                           ;CEP0896.C: 22: void keypad();
   175                           ;CEP0896.C: 23: void keypadd();
   176                           ;CEP0896.C: 24: void main()
   177                           ;CEP0896.C: 25: {
   178                           	
   179  0030                     _main:	
   180                           ; Regs used in _main: [wreg+status,2+status,0+p
                                 clath+cstack]
   181                           	line	26
   182                           ;CEP0896.C: 26: TRISC=0xC0;
   183  0030  30C0               	movlw	(0C0h)
   184  0031  1683               	bsf	status, 5	;RP0=1, select bank1
   185  0032  1303               	bcf	status, 6	;RP2=0, select bank1
   186                           	
   187  0033  0087               	movwf	(135)^080h	;volatile
   188                           	line	27
   189                           ;CEP0896.C: 27: TRISD=0x00;
   190  0034  1003               	clrc
   191                           	
   192  0035  3000               	movlw	0
   193  0036  1803               	btfsc	status,0
   194  0037  3001               	movlw	1
   195  0038  0088               	movwf	(136)^080h	;volatile
   196                           	line	28
   197                           ;CEP0896.C: 28: TRISB=0x00;
   198  0039  1003               	clrc
   199                           	
   200  003A  3000               	movlw	0
   201  003B  1803               	btfsc	status,0
   202  003C  3001               	movlw	1
   203  003D  0086               	movwf	(134)^080h	;volatile
   204                           	line	29
   205                           ;CEP0896.C: 29: TRISA=0x0f;
   206  003E  300F               	movlw	(0Fh)
   207                           	
   208  003F  0085               	movwf	(133)^080h	;volatile
   209                           	line	32
   210                           ;CEP0896.C: 32: Lcd8_Init();
   211  0040  120A  158A  27E7   	fcall	_Lcd8_Init
              120A  118A         
   212                           	line	33
   213                           ;CEP0896.C: 33: Delay(6500);
   214  0045  3064               	movlw	low(01964h)
   215  0046  1283               	bcf	status, 5	;RP0=0, select bank0
   216  0047  1303               	bcf	status, 6	;RP2=0, select bank0
   217                           	
   218  0048  00AF               	movwf	(?_Delay)
   219  0049  3019               	movlw	high(01964h)
   220  004A  00B0               	movwf	((?_Delay))+1
   221  004B  120A  118A  27EE   	fcall	_Delay
              120A  118A         
   222                           	line	34
   223                           ;CEP0896.C: 34: Lcd8_Display(0x80,"--HAND MOVEM
                                 ENT-",16);
   224  0050  3010               	movlw	low(010h)
   225  0051  1283               	bcf	status, 5	;RP0=0, select bank0
   226  0052  1303               	bcf	status, 6	;RP2=0, select bank0
   227                           	
   228  0053  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   229  0054  3000               	movlw	high(010h)
   230  0055  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   231  0056  3012               	movlw	((STR_1-__stringbase))&0ffh
   232                           	
   233  0057  00A0               	movwf	(?_Lcd8_Display)
   234  0058  3080               	movlw	(080h)
   235  0059  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   236                           	line	35
   237                           ;CEP0896.C: 35: Lcd8_Display(0xC0,"BSD ROBOT CO
                                 NTRL",16);
   238  005E  3010               	movlw	low(010h)
   239  005F  1283               	bcf	status, 5	;RP0=0, select bank0
   240  0060  1303               	bcf	status, 6	;RP2=0, select bank0
   241                           	
   242  0061  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   243  0062  3000               	movlw	high(010h)
   244  0063  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   245  0064  3001               	movlw	((STR_2-__stringbase))&0ffh
   246                           	
   247  0065  00A0               	movwf	(?_Lcd8_Display)
   248  0066  30C0               	movlw	(0C0h)
   249  0067  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   250                           	line	36
   251                           ;CEP0896.C: 36: Delay(65000);Delay(65000);
   252  006C  30E8               	movlw	low(0FDE8h)
   253  006D  1283               	bcf	status, 5	;RP0=0, select bank0
   254  006E  1303               	bcf	status, 6	;RP2=0, select bank0
   255                           	
   256  006F  00AF               	movwf	(?_Delay)
   257  0070  30FD               	movlw	high(0FDE8h)
   258  0071  00B0               	movwf	((?_Delay))+1
   259  0072  120A  118A  27EE   	fcall	_Delay
              120A  118A         
   260  0077  30E8               	movlw	low(0FDE8h)
   261  0078  1283               	bcf	status, 5	;RP0=0, select bank0
   262  0079  1303               	bcf	status, 6	;RP2=0, select bank0
   263                           	
   264  007A  00AF               	movwf	(?_Delay)
   265  007B  30FD               	movlw	high(0FDE8h)
   266  007C  00B0               	movwf	((?_Delay))+1
   267  007D  120A  118A  27EE   	fcall	_Delay
              120A  118A         
   268                           	line	38
   269                           ;CEP0896.C: 38: Serial_Init(9600);
   270  0082  1283               	bcf	status, 5	;RP0=0, select bank0
   271  0083  1303               	bcf	status, 6	;RP2=0, select bank0
   272                           	
   273  0084  3000               	movlw	0
   274  0085  00A3               	movwf	(?_Serial_Init+3)
   275  0086  3000               	movlw	0
   276  0087  00A2               	movwf	(?_Serial_Init+2)
   277  0088  3025               	movlw	025h
   278  0089  00A1               	movwf	(?_Serial_Init+1)
   279  008A  3080               	movlw	080h
   280  008B  00A0               	movwf	(?_Serial_Init)
   281                           
   282  008C  120A  118A  224B   	fcall	_Serial_Init
              120A  118A         
   283                           	line	39
   284                           ;CEP0896.C: 39: Receive(0);RB0=1;RB1=1;RB2=1;RB
                                 3=1;
   285  0091  3000               	movlw	(0)
   286  0092  120A  158A  27CF   	fcall	_Receive
              120A  118A         
   287  0097  1283               	bcf	status, 5	;RP0=0, select bank0
   288  0098  1303               	bcf	status, 6	;RP2=0, select bank0
   289  0099  1406               	bsf	(48/8),(48)&7
   290  009A  1486               	bsf	(49/8),(49)&7
   291  009B  1506               	bsf	(50/8),(50)&7
   292  009C  1586               	bsf	(51/8),(51)&7
   293                           	line	40
   294                           ;CEP0896.C: 40: Lcd8_Command(1);
   295  009D  3001               	movlw	(01h)
   296  009E  120A  118A  222D   	fcall	_Lcd8_Command
              120A  118A         
   297                           	line	41
   298                           ;CEP0896.C: 41: Lcd8_Display(0x80,"X:    Y:   Z
                                 :   ",16);
   299  00A3  3010               	movlw	low(010h)
   300  00A4  1283               	bcf	status, 5	;RP0=0, select bank0
   301  00A5  1303               	bcf	status, 6	;RP2=0, select bank0
   302                           	
   303  00A6  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   304  00A7  3000               	movlw	high(010h)
   305  00A8  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   306  00A9  3034               	movlw	((STR_3-__stringbase))&0ffh
   307                           	
   308  00AA  00A0               	movwf	(?_Lcd8_Display)
   309  00AB  3080               	movlw	(080h)
   310  00AC  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   311                           	line	42
   312                           ;CEP0896.C: 42: Lcd8_Display(0xC0,"            
                                     ",16);
   313  00B1  3010               	movlw	low(010h)
   314  00B2  1283               	bcf	status, 5	;RP0=0, select bank0
   315  00B3  1303               	bcf	status, 6	;RP2=0, select bank0
   316                           	
   317  00B4  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   318  00B5  3000               	movlw	high(010h)
   319  00B6  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   320  00B7  3023               	movlw	((STR_4-__stringbase))&0ffh
   321                           	
   322  00B8  00A0               	movwf	(?_Lcd8_Display)
   323  00B9  30C0               	movlw	(0C0h)
   324  00BA  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   325                           	line	43
   326                           ;CEP0896.C: 43: while(1)
   327                           	
   328  00BF                     l221:	
   329                           	line	46
   330                           ;CEP0896.C: 44: {
   331                           ;CEP0896.C: 46: x=Adc8_Cha(0);
   332  00BF  3000               	movlw	(0)
   333  00C0  120A  118A  24DC   	fcall	_Adc8_Cha
              120A  118A         
   334  00C5  1283               	bcf	status, 5	;RP0=0, select bank0
   335  00C6  1303               	bcf	status, 6	;RP2=0, select bank0
   336                           	
   337  00C7  0820               	movf	(0+?_Adc8_Cha),w
   338  00C8  01F6               	clrf	(118)
   339  00C9  07F6               	addwf	(118)
   340  00CA  0821               	movf	(1+?_Adc8_Cha),w
   341  00CB  01F7               	clrf	(118+1)
   342  00CC  07F7               	addwf	(118+1)
   343                           	line	47
   344                           ;CEP0896.C: 47: y=Adc8_Cha(1);
   345  00CD  3001               	movlw	(01h)
   346  00CE  120A  118A  24DC   	fcall	_Adc8_Cha
              120A  118A         
   347  00D3  1283               	bcf	status, 5	;RP0=0, select bank0
   348  00D4  1303               	bcf	status, 6	;RP2=0, select bank0
   349                           	
   350  00D5  0820               	movf	(0+?_Adc8_Cha),w
   351  00D6  01F0               	clrf	(112)
   352  00D7  07F0               	addwf	(112)
   353  00D8  0821               	movf	(1+?_Adc8_Cha),w
   354  00D9  01F1               	clrf	(112+1)
   355  00DA  07F1               	addwf	(112+1)
   356                           	line	48
   357                           ;CEP0896.C: 48: z=Adc8_Cha(2);
   358  00DB  3002               	movlw	(02h)
   359  00DC  120A  118A  24DC   	fcall	_Adc8_Cha
              120A  118A         
   360  00E1  1283               	bcf	status, 5	;RP0=0, select bank0
   361  00E2  1303               	bcf	status, 6	;RP2=0, select bank0
   362                           	
   363  00E3  0820               	movf	(0+?_Adc8_Cha),w
   364  00E4  01E7               	clrf	(103)
   365  00E5  07E7               	addwf	(103)
   366  00E6  0821               	movf	(1+?_Adc8_Cha),w
   367  00E7  01E8               	clrf	(103+1)
   368  00E8  07E8               	addwf	(103+1)
   369                           	line	50
   370                           ;CEP0896.C: 50: Lcd8_Decimal3(0x82,x);
   371                           	
   372  00E9  0876               	movf	(118),w
   373                           	
   374                           	
   375  00EA  00A0               	movwf	(?_Lcd8_Decimal3)
   376  00EB  3082               	movlw	(082h)
   377  00EC  120A  118A  23AE   	fcall	_Lcd8_Decimal3
              120A  118A         
   378                           	line	51
   379                           ;CEP0896.C: 51: Lcd8_Decimal3(0x88,y);
   380  00F1  1283               	bcf	status, 5	;RP0=0, select bank0
   381  00F2  1303               	bcf	status, 6	;RP2=0, select bank0
   382                           	
   383  00F3  0870               	movf	(112),w
   384                           	
   385                           	
   386  00F4  00A0               	movwf	(?_Lcd8_Decimal3)
   387  00F5  3088               	movlw	(088h)
   388  00F6  120A  118A  23AE   	fcall	_Lcd8_Decimal3
              120A  118A         
   389                           	line	52
   390                           ;CEP0896.C: 52: Lcd8_Decimal3(0x8D,z);
   391  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
   392  00FC  1303               	bcf	status, 6	;RP2=0, select bank0
   393                           	
   394  00FD  0867               	movf	(103),w
   395                           	
   396                           	
   397  00FE  00A0               	movwf	(?_Lcd8_Decimal3)
   398  00FF  308D               	movlw	(08Dh)
   399  0100  120A  118A  23AE   	fcall	_Lcd8_Decimal3
              120A  118A         
   400                           	line	54
   401                           ;CEP0896.C: 54: if((x>=80&&x<=85)&& (z>76&& z<=
                                 82))
   402  0105  1283               	bcf	status, 5	;RP0=0, select bank0
   403  0106  1303               	bcf	status, 6	;RP2=0, select bank0
   404                           	
   405  0107  3000               	movlw	high(050h)
   406  0108  0277               	subwf	(118+1),w
   407  0109  1D03               	skipz
   408  010A  290D               	goto	u4785
   409  010B  3050               	movlw	low(050h)
   410  010C  0276               	subwf	(118),w
   411  010D                     u4785:
   412  010D  1C03               	skipc
   413  010E  2910               	goto	u4781
   414  010F  2911               	goto	u4780
   415  0110                     u4781:
   416  0110  2941               	goto	l223
   417  0111                     u4780:
   418                           	
   419  0111  3000               	movlw	high(056h)
   420  0112  0277               	subwf	(118+1),w
   421  0113  1D03               	skipz
   422  0114  2917               	goto	u4795
   423  0115  3056               	movlw	low(056h)
   424  0116  0276               	subwf	(118),w
   425  0117                     u4795:
   426  0117  1803               	skipnc
   427  0118  291A               	goto	u4791
   428  0119  291B               	goto	u4790
   429  011A                     u4791:
   430  011A  2941               	goto	l223
   431  011B                     u4790:
   432                           	
   433  011B  3000               	movlw	high(04Dh)
   434  011C  0268               	subwf	(103+1),w
   435  011D  1D03               	skipz
   436  011E  2921               	goto	u4805
   437  011F  304D               	movlw	low(04Dh)
   438  0120  0267               	subwf	(103),w
   439  0121                     u4805:
   440  0121  1C03               	skipc
   441  0122  2924               	goto	u4801
   442  0123  2925               	goto	u4800
   443  0124                     u4801:
   444  0124  2941               	goto	l223
   445  0125                     u4800:
   446                           	
   447  0125  3000               	movlw	high(053h)
   448  0126  0268               	subwf	(103+1),w
   449  0127  1D03               	skipz
   450  0128  292B               	goto	u4815
   451  0129  3053               	movlw	low(053h)
   452  012A  0267               	subwf	(103),w
   453  012B                     u4815:
   454  012B  1803               	skipnc
   455  012C  292E               	goto	u4811
   456  012D  292F               	goto	u4810
   457  012E                     u4811:
   458  012E  2941               	goto	l223
   459  012F                     u4810:
   460                           	line	55
   461                           ;CEP0896.C: 55: { Lcd8_Display(0xC6,"STOP      
                                 ",10);
   462  012F  300A               	movlw	low(0Ah)
   463                           	
   464  0130  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   465  0131  3000               	movlw	high(0Ah)
   466  0132  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   467  0133  3071               	movlw	((STR_5-__stringbase))&0ffh
   468                           	
   469  0134  00A0               	movwf	(?_Lcd8_Display)
   470  0135  30C6               	movlw	(0C6h)
   471  0136  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   472                           	line	56
   473                           ;CEP0896.C: 56: RB0=1;RB1=1;RB2=1;RB3=1;
   474  013B  1283               	bcf	status, 5	;RP0=0, select bank0
   475  013C  1303               	bcf	status, 6	;RP2=0, select bank0
   476  013D  1406               	bsf	(48/8),(48)&7
   477  013E  1486               	bsf	(49/8),(49)&7
   478  013F  1506               	bsf	(50/8),(50)&7
   479  0140  1586               	bsf	(51/8),(51)&7
   480                           	line	57
   481                           	
   482  0141                     l223:	
   483                           	line	58
   484                           ;CEP0896.C: 57: }
   485                           ;CEP0896.C: 58: if((x>=96&&x<=100)&& (z>75&& z<
                                 =82))
   486                           	
   487  0141  3000               	movlw	high(060h)
   488  0142  0277               	subwf	(118+1),w
   489  0143  1D03               	skipz
   490  0144  2947               	goto	u4825
   491  0145  3060               	movlw	low(060h)
   492  0146  0276               	subwf	(118),w
   493  0147                     u4825:
   494  0147  1C03               	skipc
   495  0148  294A               	goto	u4821
   496  0149  294B               	goto	u4820
   497  014A                     u4821:
   498  014A  297B               	goto	l224
   499  014B                     u4820:
   500                           	
   501  014B  3000               	movlw	high(065h)
   502  014C  0277               	subwf	(118+1),w
   503  014D  1D03               	skipz
   504  014E  2951               	goto	u4835
   505  014F  3065               	movlw	low(065h)
   506  0150  0276               	subwf	(118),w
   507  0151                     u4835:
   508  0151  1803               	skipnc
   509  0152  2954               	goto	u4831
   510  0153  2955               	goto	u4830
   511  0154                     u4831:
   512  0154  297B               	goto	l224
   513  0155                     u4830:
   514                           	
   515  0155  3000               	movlw	high(04Ch)
   516  0156  0268               	subwf	(103+1),w
   517  0157  1D03               	skipz
   518  0158  295B               	goto	u4845
   519  0159  304C               	movlw	low(04Ch)
   520  015A  0267               	subwf	(103),w
   521  015B                     u4845:
   522  015B  1C03               	skipc
   523  015C  295E               	goto	u4841
   524  015D  295F               	goto	u4840
   525  015E                     u4841:
   526  015E  297B               	goto	l224
   527  015F                     u4840:
   528                           	
   529  015F  3000               	movlw	high(053h)
   530  0160  0268               	subwf	(103+1),w
   531  0161  1D03               	skipz
   532  0162  2965               	goto	u4855
   533  0163  3053               	movlw	low(053h)
   534  0164  0267               	subwf	(103),w
   535  0165                     u4855:
   536  0165  1803               	skipnc
   537  0166  2968               	goto	u4851
   538  0167  2969               	goto	u4850
   539  0168                     u4851:
   540  0168  297B               	goto	l224
   541  0169                     u4850:
   542                           	line	59
   543                           ;CEP0896.C: 59: { Lcd8_Display(0xC6,"LEFT      
                                 ",10);
   544  0169  300A               	movlw	low(0Ah)
   545                           	
   546  016A  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   547  016B  3000               	movlw	high(0Ah)
   548  016C  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   549  016D  3066               	movlw	((STR_6-__stringbase))&0ffh
   550                           	
   551  016E  00A0               	movwf	(?_Lcd8_Display)
   552  016F  30C6               	movlw	(0C6h)
   553  0170  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   554                           	line	60
   555                           ;CEP0896.C: 60: RB0=1;RB1=1;RB2=1;RB3=0;
   556  0175  1283               	bcf	status, 5	;RP0=0, select bank0
   557  0176  1303               	bcf	status, 6	;RP2=0, select bank0
   558  0177  1406               	bsf	(48/8),(48)&7
   559  0178  1486               	bsf	(49/8),(49)&7
   560  0179  1506               	bsf	(50/8),(50)&7
   561  017A  1186               	bcf	(51/8),(51)&7
   562                           	line	61
   563                           	
   564  017B                     l224:	
   565                           	line	63
   566                           ;CEP0896.C: 61: }
   567                           ;CEP0896.C: 63: if((x>=64&&x<=70)&& (z>79&& z<=
                                 84))
   568                           	
   569  017B  3000               	movlw	high(040h)
   570  017C  0277               	subwf	(118+1),w
   571  017D  1D03               	skipz
   572  017E  2981               	goto	u4865
   573  017F  3040               	movlw	low(040h)
   574  0180  0276               	subwf	(118),w
   575  0181                     u4865:
   576  0181  1C03               	skipc
   577  0182  2984               	goto	u4861
   578  0183  2985               	goto	u4860
   579  0184                     u4861:
   580  0184  29B5               	goto	l225
   581  0185                     u4860:
   582                           	
   583  0185  3000               	movlw	high(047h)
   584  0186  0277               	subwf	(118+1),w
   585  0187  1D03               	skipz
   586  0188  298B               	goto	u4875
   587  0189  3047               	movlw	low(047h)
   588  018A  0276               	subwf	(118),w
   589  018B                     u4875:
   590  018B  1803               	skipnc
   591  018C  298E               	goto	u4871
   592  018D  298F               	goto	u4870
   593  018E                     u4871:
   594  018E  29B5               	goto	l225
   595  018F                     u4870:
   596                           	
   597  018F  3000               	movlw	high(050h)
   598  0190  0268               	subwf	(103+1),w
   599  0191  1D03               	skipz
   600  0192  2995               	goto	u4885
   601  0193  3050               	movlw	low(050h)
   602  0194  0267               	subwf	(103),w
   603+ 0195                     u4885:
   604+ 0195  1C03               	skipc
   605  0196  2998               	goto	u4881
   606  0197  2999               	goto	u4880
   607  0198                     u4881:
   608  0198  29B5               	goto	l225
   609  0199                     u4880:
   610                           	
   611  0199  3000               	movlw	high(055h)
   612  019A  0268               	subwf	(103+1),w
   613  019B  1D03               	skipz
   614  019C  299F               	goto	u4895
   615  019D  3055               	movlw	low(055h)
   616  019E  0267               	subwf	(103),w
   617  019F                     u4895:
   618  019F  1803               	skipnc
   619  01A0  29A2               	goto	u4891
   620  01A1  29A3               	goto	u4890
   621  01A2                     u4891:
   622  01A2  29B5               	goto	l225
   623  01A3                     u4890:
   624                           	line	64
   625                           ;CEP0896.C: 64: { Lcd8_Display(0xC6,"RIGHT     
                                 ",10);
   626  01A3  300A               	movlw	low(0Ah)
   627                           	
   628  01A4  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   629  01A5  3000               	movlw	high(0Ah)
   630  01A6  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   631  01A7  3050               	movlw	((STR_7-__stringbase))&0ffh
   632                           	
   633  01A8  00A0               	movwf	(?_Lcd8_Display)
   634  01A9  30C6               	movlw	(0C6h)
   635  01AA  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   636                           	line	65
   637                           ;CEP0896.C: 65: RB0=1;RB1=1;RB2=0;RB3=1;
   638  01AF  1283               	bcf	status, 5	;RP0=0, select bank0
   639  01B0  1303               	bcf	status, 6	;RP2=0, select bank0
   640  01B1  1406               	bsf	(48/8),(48)&7
   641  01B2  1486               	bsf	(49/8),(49)&7
   642  01B3  1106               	bcf	(50/8),(50)&7
   643  01B4  1586               	bsf	(51/8),(51)&7
   644                           	line	66
   645                           	
   646  01B5                     l225:	
   647                           	line	68
   648                           ;CEP0896.C: 66: }
   649                           ;CEP0896.C: 68: if((z>=65&&z<=75)&& (x>79&& x<=
                                 85))
   650                           	
   651  01B5  3000               	movlw	high(041h)
   652  01B6  0268               	subwf	(103+1),w
   653  01B7  1D03               	skipz
   654  01B8  29BB               	goto	u4905
   655  01B9  3041               	movlw	low(041h)
   656  01BA  0267               	subwf	(103),w
   657  01BB                     u4905:
   658  01BB  1C03               	skipc
   659  01BC  29BE               	goto	u4901
   660  01BD  29BF               	goto	u4900
   661  01BE                     u4901:
   662  01BE  29EF               	goto	l226
   663  01BF                     u4900:
   664                           	
   665  01BF  3000               	movlw	high(04Ch)
   666  01C0  0268               	subwf	(103+1),w
   667  01C1  1D03               	skipz
   668  01C2  29C5               	goto	u4915
   669  01C3  304C               	movlw	low(04Ch)
   670  01C4  0267               	subwf	(103),w
   671  01C5                     u4915:
   672  01C5  1803               	skipnc
   673  01C6  29C8               	goto	u4911
   674  01C7  29C9               	goto	u4910
   675  01C8                     u4911:
   676  01C8  29EF               	goto	l226
   677  01C9                     u4910:
   678                           	
   679  01C9  3000               	movlw	high(050h)
   680  01CA  0277               	subwf	(118+1),w
   681  01CB  1D03               	skipz
   682  01CC  29CF               	goto	u4925
   683  01CD  3050               	movlw	low(050h)
   684  01CE  0276               	subwf	(118),w
   685  01CF                     u4925:
   686  01CF  1C03               	skipc
   687  01D0  29D2               	goto	u4921
   688  01D1  29D3               	goto	u4920
   689  01D2                     u4921:
   690  01D2  29EF               	goto	l226
   691  01D3                     u4920:
   692                           	
   693  01D3  3000               	movlw	high(056h)
   694  01D4  0277               	subwf	(118+1),w
   695  01D5  1D03               	skipz
   696  01D6  29D9               	goto	u4935
   697  01D7  3056               	movlw	low(056h)
   698  01D8  0276               	subwf	(118),w
   699  01D9                     u4935:
   700  01D9  1803               	skipnc
   701  01DA  29DC               	goto	u4931
   702  01DB  29DD               	goto	u4930
   703  01DC                     u4931:
   704  01DC  29EF               	goto	l226
   705  01DD                     u4930:
   706                           	line	69
   707                           ;CEP0896.C: 69: { Lcd8_Display(0xC6,"START     
                                 ",10);
   708  01DD  300A               	movlw	low(0Ah)
   709                           	
   710  01DE  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   711  01DF  3000               	movlw	high(0Ah)
   712  01E0  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   713  01E1  3045               	movlw	((STR_8-__stringbase))&0ffh
   714                           	
   715  01E2  00A0               	movwf	(?_Lcd8_Display)
   716  01E3  30C6               	movlw	(0C6h)
   717  01E4  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   718                           	line	70
   719                           ;CEP0896.C: 70: RB0=0;RB1=1;RB2=1;RB3=1;
   720  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
   721  01EA  1303               	bcf	status, 6	;RP2=0, select bank0
   722  01EB  1006               	bcf	(48/8),(48)&7
   723  01EC  1486               	bsf	(49/8),(49)&7
   724  01ED  1506               	bsf	(50/8),(50)&7
   725  01EE  1586               	bsf	(51/8),(51)&7
   726                           	line	71
   727                           	
   728  01EF                     l226:	
   729                           	line	73
   730                           ;CEP0896.C: 71: }
   731                           ;CEP0896.C: 73: if((z>=95&&z<=101)&& (x>80&& x<
                                 =89))
   732                           	
   733  01EF  3000               	movlw	high(05Fh)
   734  01F0  0268               	subwf	(103+1),w
   735  01F1  1D03               	skipz
   736  01F2  29F5               	goto	u4945
   737  01F3  305F               	movlw	low(05Fh)
   738  01F4  0267               	subwf	(103),w
   739  01F5                     u4945:
   740  01F5  1C03               	skipc
   741  01F6  29F8               	goto	u4941
   742  01F7  29F9               	goto	u4940
   743  01F8                     u4941:
   744  01F8  2A29               	goto	l220
   745  01F9                     u4940:
   746                           	
   747  01F9  3000               	movlw	high(066h)
   748  01FA  0268               	subwf	(103+1),w
   749  01FB  1D03               	skipz
   750  01FC  29FF               	goto	u4955
   751  01FD  3066               	movlw	low(066h)
   752  01FE  0267               	subwf	(103),w
   753  01FF                     u4955:
   754  01FF  1803               	skipnc
   755  0200  2A02               	goto	u4951
   756  0201  2A03               	goto	u4950
   757  0202                     u4951:
   758  0202  2A29               	goto	l220
   759  0203                     u4950:
   760                           	
   761  0203  3000               	movlw	high(051h)
   762  0204  0277               	subwf	(118+1),w
   763  0205  1D03               	skipz
   764  0206  2A09               	goto	u4965
   765  0207  3051               	movlw	low(051h)
   766  0208  0276               	subwf	(118),w
   767  0209                     u4965:
   768  0209  1C03               	skipc
   769  020A  2A0C               	goto	u4961
   770  020B  2A0D               	goto	u4960
   771  020C                     u4961:
   772  020C  2A29               	goto	l220
   773  020D                     u4960:
   774                           	
   775  020D  3000               	movlw	high(05Ah)
   776  020E  0277               	subwf	(118+1),w
   777  020F  1D03               	skipz
   778  0210  2A13               	goto	u4975
   779  0211  305A               	movlw	low(05Ah)
   780  0212  0276               	subwf	(118),w
   781  0213                     u4975:
   782  0213  1803               	skipnc
   783  0214  2A16               	goto	u4971
   784  0215  2A17               	goto	u4970
   785  0216                     u4971:
   786  0216  2A29               	goto	l220
   787  0217                     u4970:
   788                           	line	74
   789                           ;CEP0896.C: 74: {Lcd8_Display(0xC6,"REVERSE   "
                                 ,10);
   790  0217  300A               	movlw	low(0Ah)
   791                           	
   792  0218  00A1               	movwf	(0+?_Lcd8_Display+01h)&07fh
   793  0219  3000               	movlw	high(0Ah)
   794  021A  00A2               	movwf	((0+?_Lcd8_Display+01h)&07fh)+1
   795  021B  305B               	movlw	((STR_9-__stringbase))&0ffh
   796                           	
   797  021C  00A0               	movwf	(?_Lcd8_Display)
   798  021D  30C6               	movlw	(0C6h)
   799  021E  120A  118A  2290   	fcall	_Lcd8_Display
              120A  118A         
   800                           	line	75
   801                           ;CEP0896.C: 75: RB0=1;RB1=0;RB2=1;RB3=1;
   802  0223  1283               	bcf	status, 5	;RP0=0, select bank0
   803  0224  1303               	bcf	status, 6	;RP2=0, select bank0
   804  0225  1406               	bsf	(48/8),(48)&7
   805  0226  1086               	bcf	(49/8),(49)&7
   806  0227  1506               	bsf	(50/8),(50)&7
   807  0228  1586               	bsf	(51/8),(51)&7
   808                           	line	76
   809                           	
   810  0229                     l227:	
   811                           	line	78
   812                           	
   813  0229                     l220:	
   814                           	line	43
   815  0229  28BF               	goto	l221
   816                           	global	start
   817  022A  120A  118A  2800   	ljmp	start
   818                           ; =============== function _main ends =========
                                 ======
   819                           
   820                           GLOBAL __end_of_main
   821  022D                     	__end_of_main:
   822+                          	FNSIZE	_main,0,0
   823+                          	psect	maintext
   824+                          	line	79
   825+                          	signat	_main,88
   826+                          	global	_Lcd8_Decimal3
   827+                          	global	??_Lcd8_Decimal3
   828+                          	global	?_Lcd8_Decimal3
   829+                          
   830+                          ; *************** function _Lcd8_Decimal3 *****
      +                          **********
   831+                          ; Defined at:
   832+                          ;		line 75 in file "G:\accelerometer contol rob
      +                          ot tx\pic_lcd8.h"
   833+                          ; Parameters:
   834+                          ;		com         	reg:   wr	type: unsigned char 
   835+                          ;		val         	offs:   0	type: unsigned char 
   836+                          ; Auto variables:
   837+                          ;		com         	       	type: unsigned char 
   838+                          ;		Lcd_o       	       	type: unsigned int 
   839+                          ;		Lcd_t       	       	type: unsigned int 
   840+                          ;		Lcd_h       	       	type: unsigned int 
   841+                          ;		Lcd_hr      	       	type: unsigned int 
   842+                          ; Return value:
   843+                          ;		type: void 
   844+                          ;		size: 0
   845+                          ; Registers used:
   846+                          ;		wreg, status,2, status,0, pclath, cstack
   847+                          ; Tracked objects:
   848+                          ;		On entry : 300/0
   849+                          ;		On exit  : 0/0
   850+                          ;		Unchanged: 0/0
   851+                          ; Data sizes:
   852+                          ;		Autos:    9
   853+                          ;		Params:   1
   854+                          ;		Temp:     2
   855+                          ;		Total:   12
   856+                          ; This function calls:
   857+                          ;		___awdiv
   858+                          ;		___awmod
   859+                          ;		___lwdiv
   860+                          ;		___lwmod
   861+                          ;		_Lcd8_Write
   862+                          ; This function is called by:
   863+                          ;		_main
   864+                          ; This function uses a non-reentrant model
   865+                          ; 
   866+                          	psect	text147,local,class=CODE,delta=2
   867+                          	file	"G:\accelerometer contol robot tx\pic_lcd
      +                          8.h"
   868+                          	line	75
   869+                          ;pic_lcd8.h: 74: void Lcd8_Decimal3(unsigned ch
      +                          ar com,unsigned char val)
   870+                          ;pic_lcd8.h: 75: {
   871+                          	
   872+ 03AE                     _Lcd8_Decimal3:	
   873                           ; Regs used in _Lcd8_Decimal3: [wreg+status,2+s
                                 tatus,0+pclath+cstack]
   874                           ;_Lcd8_Decimal3_com stored from wreg
   875                           	line	78
   876                           	
   877  03AE  00A1               	movwf	(_Lcd8_Decimal3_com)
   878                           ;pic_lcd8.h: 76: unsigned int Lcd_h,Lcd_hr,Lcd_
                                 t,Lcd_o;
   879                           ;pic_lcd8.h: 78: Lcd_h=val/100;
   880  03AF  3064               	movlw	low(064h)
   881                           	
   882  03B0  00AE               	movwf	(0+?___awdiv+02h)&07fh
   883  03B1  3000               	movlw	high(064h)
   884  03B2  00AF               	movwf	((0+?___awdiv+02h)&07fh)+1
   885                           	
   886  03B3  0820               	movf	(_Lcd8_Decimal3_val),w
   887  03B4  1383               	bcf	status, 7	;select IRP bank0
   888                           	
   889  03B5  00AA               	movwf	(??_Lcd8_Decimal3+9+0)
   890  03B6  01AB               	clrf	(??_Lcd8_Decimal3+9+0+1)
   891                           	
   892  03B7  082A               	movf	0+(??_Lcd8_Decimal3+9+0),w
   893  03B8  00AC               	movwf	(?___awdiv)
   894  03B9  082B               	movf	1+(??_Lcd8_Decimal3+9+0),w
   895  03BA  00AD               	movwf	(?___awdiv+1)
   896  03BB  120A  118A  233D   	fcall	___awdiv
              120A  118A         
   897  03C0  1283               	bcf	status, 5	;RP0=0, select bank0
   898  03C1  1303               	bcf	status, 6	;RP2=0, select bank0
   899                           	
   900  03C2  082C               	movf	(0+?___awdiv),w
   901  03C3  01A2               	clrf	(_Lcd8_Decimal3_Lcd_h)
   902  03C4  07A2               	addwf	(_Lcd8_Decimal3_Lcd_h)
   903  03C5  082D               	movf	(1+?___awdiv),w
   904  03C6  01A3               	clrf	(_Lcd8_Decimal3_Lcd_h+1)
   905  03C7  07A3               	addwf	(_Lcd8_Decimal3_Lcd_h+1)
   906                           	line	79
   907                           ;pic_lcd8.h: 79: Lcd_hr=val%100;
   908  03C8  3064               	movlw	low(064h)
   909                           	
   910  03C9  00AE               	movwf	(0+?___awmod+02h)&07fh
   911  03CA  3000               	movlw	high(064h)
   912  03CB  00AF               	movwf	((0+?___awmod+02h)&07fh)+1
   913                           	
   914  03CC  0820               	movf	(_Lcd8_Decimal3_val),w
   915  03CD  1383               	bcf	status, 7	;select IRP bank0
   916                           	
   917  03CE  00AA               	movwf	(??_Lcd8_Decimal3+9+0)
   918  03CF  01AB               	clrf	(??_Lcd8_Decimal3+9+0+1)
   919                           	
   920  03D0  082A               	movf	0+(??_Lcd8_Decimal3+9+0),w
   921  03D1  00AC               	movwf	(?___awmod)
   922  03D2  082B               	movf	1+(??_Lcd8_Decimal3+9+0),w
   923  03D3  00AD               	movwf	(?___awmod+1)
   924  03D4  120A  118A  2793   	fcall	___awmod
              120A  118A         
   925  03D9  1283               	bcf	status, 5	;RP0=0, select bank0
   926  03DA  1303               	bcf	status, 6	;RP2=0, select bank0
   927                           	
   928  03DB  082C               	movf	(0+?___awmod),w
   929  03DC  01A8               	clrf	(_Lcd8_Decimal3_Lcd_hr)
   930  03DD  07A8               	addwf	(_Lcd8_Decimal3_Lcd_hr)
   931  03DE  082D               	movf	(1+?___awmod),w
   932  03DF  01A9               	clrf	(_Lcd8_Decimal3_Lcd_hr+1)
   933  03E0  07A9               	addwf	(_Lcd8_Decimal3_Lcd_hr+1)
   934                           	line	80
   935                           ;pic_lcd8.h: 80: Lcd_t=Lcd_hr/10;
   936  03E1  300A               	movlw	low(0Ah)
   937                           	
   938  03E2  00AE               	movwf	(0+?___lwdiv+02h)&07fh
   939  03E3  3000               	movlw	high(0Ah)
   940  03E4  00AF               	movwf	((0+?___lwdiv+02h)&07fh)+1
   941                           	
   942                           	
   943  03E5  0828               	movf	(_Lcd8_Decimal3_Lcd_hr),w
   944  03E6  01AC               	clrf	(?___lwdiv)
   945  03E7  07AC               	addwf	(?___lwdiv)
   946  03E8  0829               	movf	(_Lcd8_Decimal3_Lcd_hr+1),w
   947  03E9  01AD               	clrf	(?___lwdiv+1)
   948  03EA  07AD               	addwf	(?___lwdiv+1)
   949  03EB  120A  118A  22F3   	fcall	___lwdiv
              120A  118A         
   950  03F0  1283               	bcf	status, 5	;RP0=0, select bank0
   951  03F1  1303               	bcf	status, 6	;RP2=0, select bank0
   952                           	
   953  03F2  082C               	movf	(0+?___lwdiv),w
   954  03F3  01A4               	clrf	(_Lcd8_Decimal3_Lcd_t)
   955  03F4  07A4               	addwf	(_Lcd8_Decimal3_Lcd_t)
   956  03F5  082D               	movf	(1+?___lwdiv),w
   957  03F6  01A5               	clrf	(_Lcd8_Decimal3_Lcd_t+1)
   958  03F7  07A5               	addwf	(_Lcd8_Decimal3_Lcd_t+1)
   959                           	line	81
   960                           ;pic_lcd8.h: 81: Lcd_o=Lcd_hr%10;
   961  03F8  300A               	movlw	low(0Ah)
   962                           	
   963  03F9  00AE               	movwf	(0+?___lwmod+02h)&07fh
   964  03FA  3000               	movlw	high(0Ah)
   965  03FB  00AF               	movwf	((0+?___lwmod+02h)&07fh)+1
   966                           	
   967                           	
   968  03FC  0828               	movf	(_Lcd8_Decimal3_Lcd_hr),w
   969  03FD  01AC               	clrf	(?___lwmod)
   970  03FE  07AC               	addwf	(?___lwmod)
   971  03FF  0829               	movf	(_Lcd8_Decimal3_Lcd_hr+1),w
   972  0400  01AD               	clrf	(?___lwmod+1)
   973  0401  07AD               	addwf	(?___lwmod+1)
   974  0402  120A  118A  22BB   	fcall	___lwmod
              120A  118A         
   975  0407  1283               	bcf	status, 5	;RP0=0, select bank0
   976  0408  1303               	bcf	status, 6	;RP2=0, select bank0
   977                           	
   978  0409  082C               	movf	(0+?___lwmod),w
   979  040A  01A6               	clrf	(_Lcd8_Decimal3_Lcd_o)
   980  040B  07A6               	addwf	(_Lcd8_Decimal3_Lcd_o)
   981  040C  082D               	movf	(1+?___lwmod),w
   982  040D  01A7               	clrf	(_Lcd8_Decimal3_Lcd_o+1)
   983  040E  07A7               	addwf	(_Lcd8_Decimal3_Lcd_o+1)
   984                           	line	83
   985                           ;pic_lcd8.h: 83: Lcd8_Write(com,Lcd_h+0x30);
   986                           	
   987  040F  0822               	movf	(_Lcd8_Decimal3_Lcd_h),w
   988  0410  1383               	bcf	status, 7	;select IRP bank0
   989                           	
   990  0411  3E30               	addlw	030h
   991                           	
   992  0412  00AC               	movwf	(?_Lcd8_Write)
   993                           	
   994  0413  0821               	movf	(_Lcd8_Decimal3_com),w
   995                           	
   996  0414  120A  118A  226C   	fcall	_Lcd8_Write
              120A  118A         
   997                           	line	84
   998                           ;pic_lcd8.h: 84: Lcd8_Write(com+1,Lcd_t+0x30);
   999  0419  1283               	bcf	status, 5	;RP0=0, select bank0
  1000  041A  1303               	bcf	status, 6	;RP2=0, select bank0
  1001                           	
  1002  041B  0824               	movf	(_Lcd8_Decimal3_Lcd_t),w
  1003  041C  1383               	bcf	status, 7	;select IRP bank0
  1004                           	
  1005  041D  3E30               	addlw	030h
  1006                           	
  1007  041E  00AC               	movwf	(?_Lcd8_Write)
  1008                           	
  1009  041F  0821               	movf	(_Lcd8_Decimal3_com),w
  1010                           	
  1011  0420  3E01               	addlw	01h
  1012  0421  120A  118A  226C   	fcall	_Lcd8_Write
              120A  118A         
  1013                           	line	85
  1014                           ;pic_lcd8.h: 85: Lcd8_Write(com+2,Lcd_o+0x30);
  1015  0426  1283               	bcf	status, 5	;RP0=0, select bank0
  1016  0427  1303               	bcf	status, 6	;RP2=0, select bank0
  1017                           	
  1018  0428  0826               	movf	(_Lcd8_Decimal3_Lcd_o),w
  1019  0429  1383               	bcf	status, 7	;select IRP bank0
  1020                           	
  1021  042A  3E30               	addlw	030h
  1022                           	
  1023  042B  00AC               	movwf	(?_Lcd8_Write)
  1024                           	
  1025  042C  0821               	movf	(_Lcd8_Decimal3_com),w
  1026                           	
  1027  042D  3E02               	addlw	02h
  1028  042E  120A  118A  226C   	fcall	_Lcd8_Write
              120A  118A         
  1029                           	line	86
  1030                           ;pic_lcd8.h: 86: }
  1031  0433                     l10:	
  1032  0433  0008               	return
  1033                           ; =============== function _Lcd8_Decimal3 ends 
                                 ===============
  1034                           
  1035                           GLOBAL __end_of_Lcd8_Decimal3
  1036  0434                     	__end_of_Lcd8_Decimal3:
  1037                           	FNSIZE	_Lcd8_Decimal3,11,1
  1038                           	signat	_Lcd8_Decimal3,8312
  1039                           	global	_Serial_Init
  1040                           	global	??_Serial_Init
  1041                           	global	?_Serial_Init
  1042                           
  1043                           ; *************** function _Serial_Init *******
                                 ********
  1044                           ; Defined at:
  1045                           ;		line 9 in file "G:\accelerometer contol robo
                                 t tx\pic_serial.h"
  1046                           ; Parameters:
  1047                           ;		baud        	offs:   0	type: unsigned long 
  1048                           ; Auto variables:
  1049                           ;		None
  1050                           ; Return value:
  1051                           ;		type: void 
  1052                           ;		size: 0
  1053                           ; Registers used:
  1054                           ;		wreg, status,2, status,0, pclath, cstack
  1055                           ; Tracked objects:
  1056                           ;		On entry : 300/0
  1057                           ;		On exit  : 0/0
  1058                           ;		Unchanged: 0/0
  1059                           ; Data sizes:
  1060                           ;		Autos:    0
  1061                           ;		Params:   4
  1062                           ;		Temp:     0
  1063                           ;		Total:    4
  1064                           ; This function calls:
  1065                           ;		_Baudrate
  1066                           ; This function is called by:
  1067                           ;		_main
  1068                           ; This function uses a non-reentrant model
  1069                           ; 
  1070                           	psect	text148,local,class=CODE,delta=2
  1071                           	file	"G:\accelerometer contol robot tx\pic_ser
                                 ial.h"
  1072                           	line	9
  1073                           ;pic_serial.h: 8: void Serial_Init(unsigned lon
                                 g int baud)
  1074                           ;pic_serial.h: 9: {
  1075                           	
  1076  024B                     _Serial_Init:	
  1077                           ; Regs used in _Serial_Init: [wreg+status,2+sta
                                 tus,0+pclath+cstack]
  1078                           	line	10
  1079                           ;pic_serial.h: 10: Baudrate(baud);
  1080                           	
  1081                           	
  1082  024B  0823               	movf	(_Serial_Init_baud+3),w
  1083  024C  00A7               	movwf	(?_Baudrate+3)
  1084  024D  0822               	movf	(_Serial_Init_baud+2),w
  1085  024E  00A6               	movwf	(?_Baudrate+2)
  1086  024F  0821               	movf	(_Serial_Init_baud+1),w
  1087  0250  00A5               	movwf	(?_Baudrate+1)
  1088  0251  0820               	movf	(_Serial_Init_baud),w
  1089  0252  00A4               	movwf	(?_Baudrate)
  1090                           
  1091  0253  120A  118A  2434   	fcall	_Baudrate
              120A  118A         
  1092                           	line	11
  1093                           ;pic_serial.h: 11: SYNC = 0;
  1094  0258  1683               	bsf	status, 5	;RP0=1, select bank1
  1095  0259  1303               	bcf	status, 6	;RP2=0, select bank1
  1096  025A  1218               	bcf	(1220/8)^080h,(1220)&7
  1097                           	line	12
  1098                           ;pic_serial.h: 12: SPEN = 1;
  1099  025B  1283               	bcf	status, 5	;RP0=0, select bank0
  1100  025C  1303               	bcf	status, 6	;RP2=0, select bank0
  1101  025D  1798               	bsf	(199/8),(199)&7
  1102                           	line	13
  1103                           ;pic_serial.h: 13: TXEN = 1;
  1104  025E  1683               	bsf	status, 5	;RP0=1, select bank1
  1105  025F  1303               	bcf	status, 6	;RP2=0, select bank1
  1106  0260  1698               	bsf	(1221/8)^080h,(1221)&7
  1107                           	line	14
  1108                           ;pic_serial.h: 14: GIE=1;
  1109  0261  1283               	bcf	status, 5	;RP0=0, select bank0
  1110  0262  1303               	bcf	status, 6	;RP2=0, select bank0
  1111  0263  178B               	bsf	(95/8),(95)&7
  1112                           	line	15
  1113                           ;pic_serial.h: 15: PEIE=1;
  1114  0264  170B               	bsf	(94/8),(94)&7
  1115                           	line	16
  1116                           ;pic_serial.h: 16: RCIE = 1;
  1117  0265  1683               	bsf	status, 5	;RP0=1, select bank1
  1118  0266  1303               	bcf	status, 6	;RP2=0, select bank1
  1119  0267  168C               	bsf	(1125/8)^080h,(1125)&7
  1120                           	line	17
  1121                           ;pic_serial.h: 17: CREN = 1;
  1122  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  1123  0269  1303               	bcf	status, 6	;RP2=0, select bank0
  1124  026A  1618               	bsf	(196/8),(196)&7
  1125                           	line	18
  1126                           ;pic_serial.h: 18: }
  1127  026B                     l16:	
  1128  026B  0008               	return
  1129                           ; =============== function _Serial_Init ends ==
                                 =============
  1130                           
  1131                           GLOBAL __end_of_Serial_Init
  1132  026C                     	__end_of_Serial_Init:
  1133                           	FNSIZE	_Serial_Init,0,4
  1134                           	signat	_Serial_Init,4216
  1135                           	global	_Adc8_Cha
  1136                           	global	??_Adc8_Cha
  1137                           	global	?_Adc8_Cha
  1138                           
  1139                           ; *************** function _Adc8_Cha **********
                                 *****
  1140                           ; Defined at:
  1141                           ;		line 10 in file "G:\accelerometer contol rob
                                 ot tx\pic_adc.h"
  1142                           ; Parameters:
  1143                           ;		val         	reg:   wr	type: unsigned char 
  1144                           ; Auto variables:
  1145                           ;		val         	       	type: unsigned char 
  1146                           ; Return value:
  1147                           ;		type: int 
  1148                           ;		size: 2
  1149                           ; Registers used:
  1150                           ;		wreg, status,2, status,0, pclath, cstack
  1151                           ; Tracked objects:
  1152                           ;		On entry : 0/0
  1153                           ;		On exit  : 0/0
  1154                           ;		Unchanged: 0/0
  1155                           ; Data sizes:
  1156                           ;		Autos:    1
  1157                           ;		Params:   2
  1158                           ;		Temp:     2
  1159                           ;		Total:    5
  1160                           ; This function calls:
  1161                           ;		___lwdiv
  1162                           ; This function is called by:
  1163                           ;		_main
  1164                           ; This function uses a non-reentrant model
  1165                           ; 
  1166                           	psect	text149,local,class=CODE,delta=2
  1167                           	file	"G:\accelerometer contol robot tx\pic_adc
                                 .h"
  1168                           	line	10
  1169                           ;pic_adc.h: 9: Adc8_Cha(unsigned char val)
  1170                           ;pic_adc.h: 10: {
  1171                           	
  1172  04DC                     _Adc8_Cha:	
  1173                           ; Regs used in _Adc8_Cha: [wreg+status,2+status
                                 ,0+pclath+cstack]
  1174                           ;_Adc8_Cha_val stored from wreg
  1175  04DC  1283               	bcf	status, 5	;RP0=0, select bank0
  1176  04DD  1303               	bcf	status, 6	;RP2=0, select bank0
  1177                           	
  1178  04DE  00A2               	movwf	(_Adc8_Cha_val)
  1179                           	line	11
  1180                           ;pic_adc.h: 11: ADFM=0;
  1181  04DF  1683               	bsf	status, 5	;RP0=1, select bank1
  1182  04E0  1303               	bcf	status, 6	;RP2=0, select bank1
  1183  04E1  139F               	bcf	(1279/8)^080h,(1279)&7
  1184                           	line	12
  1185                           ;pic_adc.h: 12: adc_del=25;
  1186  04E2  3019               	movlw	(019h)
  1187  04E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1188  04E4  1303               	bcf	status, 6	;RP2=0, select bank0
  1189  04E5  00A3               	movwf	(??_Adc8_Cha+1+0)
  1190                           	
  1191  04E6  0823               	movf	(??_Adc8_Cha+1+0),w
  1192  04E7  00E0               	movwf	(96)
  1193                           	line	14
  1194                           ;pic_adc.h: 14: if(val==0)
  1195                           	
  1196  04E8  08A2               	movf	(_Adc8_Cha_val),f
  1197  04E9  1D03               	skipz
  1198  04EA  2CEC               	goto	u4981
  1199  04EB  2CED               	goto	u4980
  1200  04EC                     u4981:
  1201  04EC  2D29               	goto	l44
  1202  04ED                     u4980:
  1203                           	line	16
  1204                           ;pic_adc.h: 15: {
  1205                           ;pic_adc.h: 16: adc_temp0=0;
  1206  04ED  3000               	movlw	low(0)
  1207                           	
  1208  04EE  00D6               	movwf	(86)
  1209  04EF  3000               	movlw	high(0)
  1210  04F0  00D7               	movwf	((86))+1
  1211                           	line	17
  1212                           ;pic_adc.h: 17: for(adc_j=0;adc_j<10;adc_j++)
  1213  04F1  1003               	clrc
  1214                           	
  1215  04F2  3000               	movlw	0
  1216  04F3  1803               	btfsc	status,0
  1217  04F4  3001               	movlw	1
  1218  04F5  00DE               	movwf	(94)
  1219  04F6  2CF7               	goto	l45
  1220                           	line	18
  1221                           	
  1222  04F7                     l45:	
  1223                           	line	19
  1224                           ;pic_adc.h: 18: {
  1225                           ;pic_adc.h: 19: ADCON0=0x00;
  1226  04F7  1003               	clrc
  1227                           	
  1228  04F8  3000               	movlw	0
  1229  04F9  1803               	btfsc	status,0
  1230  04FA  3001               	movlw	1
  1231  04FB  009F               	movwf	(31)	;volatile
  1232                           	line	20
  1233                           ;pic_adc.h: 20: ADON=1;
  1234  04FC  141F               	bsf	(248/8),(248)&7
  1235                           	line	21
  1236                           ;pic_adc.h: 21: while(adc_del--);
  1237  04FD  2CFE               	goto	l48
  1238                           	
  1239  04FE                     l48:	
  1240                           	
  1241                           	
  1242  04FE  3001               	movlw	low(01h)
  1243  04FF  02E0               	subwf	(96),f
  1244  0500  0860               	movf	((96))&07fh,w
  1245                           	
  1246  0501  3AFF               	xorlw	0FFh
  1247  0502  1D03               	skipz
  1248  0503  2D05               	goto	u5001
  1249  0504  2D06               	goto	u5000
  1250  0505                     u5001:
  1251  0505  2CFE               	goto	l48
  1252  0506                     u5000:
  1253                           	
  1254  0506                     l50:	
  1255                           	line	22
  1256                           ;pic_adc.h: 22: ADCON0 =0x05;
  1257  0506  3005               	movlw	(05h)
  1258                           	
  1259  0507  009F               	movwf	(31)	;volatile
  1260                           	line	23
  1261                           ;pic_adc.h: 23: while(ADCON0!=0X01);
  1262  0508  2D09               	goto	l51
  1263                           	
  1264  0509                     l51:	
  1265                           	
  1266  0509  081F               	movf	(31),w	;volatile
  1267                           	
  1268  050A  3A01               	xorlw	01h
  1269  050B  1D03               	skipz
  1270  050C  2D0E               	goto	u5011
  1271  050D  2D0F               	goto	u5010
  1272  050E                     u5011:
  1273  050E  2D09               	goto	l51
  1274  050F                     u5010:
  1275                           	
  1276  050F                     l53:	
  1277                           	line	24
  1278                           ;pic_adc.h: 24: adc_temp=ADRESH;
  1279                           	
  1280  050F  081E               	movf	(30),w	;volatile
  1281                           	
  1282  0510  00A3               	movwf	(??_Adc8_Cha+1+0)
  1283  0511  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  1284                           	
  1285  0512  0823               	movf	0+(??_Adc8_Cha+1+0),w
  1286  0513  00D4               	movwf	(84)
  1287  0514  0824               	movf	1+(??_Adc8_Cha+1+0),w
  1288  0515  00D5               	movwf	(84+1)
  1289                           	line	25
  1290                           ;pic_adc.h: 25: adc_temp0=adc_temp0+adc_temp;
  1291                           	
  1292                           	
  1293  0516  0854               	movf	(84),w
  1294  0517  0756               	addwf	(86),w
  1295                           	
  1296  0518  00D6               	movwf	(86)
  1297  0519  0855               	movf	(84+1),w
  1298  051A  1803               	skipnc
  1299  051B  0A55               	incf	(84+1),w
  1300  051C  0757               	addwf	(86+1),w
  1301  051D  00D7               	movwf	1+(86)
  1302                           	line	17
  1303  051E  3001               	movlw	(01h)
  1304  051F  00A3               	movwf	(??_Adc8_Cha+1+0)
  1305                           	
  1306  0520  0823               	movf	(??_Adc8_Cha+1+0),w
  1307  0521  07DE               	addwf	(94),f
  1308  0522  300A               	movlw	(0Ah)
  1309                           	
  1310  0523  025E               	subwf	(94),w
  1311  0524  1C03               	skipc
  1312  0525  2D27               	goto	u5021
  1313  0526  2D28               	goto	u5020
  1314  0527                     u5021:
  1315  0527  2CF7               	goto	l45
  1316  0528                     u5020:
  1317                           	
  1318  0528                     l46:	
  1319                           	line	27
  1320                           ;pic_adc.h: 26: }
  1321                           ;pic_adc.h: 27: }
  1322  0528  2EE2               	goto	l54
  1323                           	line	28
  1324                           	
  1325  0529                     l44:	
  1326                           ;pic_adc.h: 28: else if(val==1)
  1327                           	
  1328  0529  0822               	movf	(_Adc8_Cha_val),w
  1329  052A  1383               	bcf	status, 7	;select IRP bank0
  1330                           	
  1331  052B  3A01               	xorlw	01h
  1332  052C  1D03               	skipz
  1333  052D  2D2F               	goto	u5031
  1334  052E  2D30               	goto	u5030
  1335  052F                     u5031:
  1336  052F  2D69               	goto	l55
  1337  0530                     u5030:
  1338                           	line	30
  1339                           ;pic_adc.h: 29: {
  1340                           ;pic_adc.h: 30: adc_temp0=0;
  1341  0530  3000               	movlw	low(0)
  1342                           	
  1343  0531  00D6               	movwf	(86)
  1344  0532  3000               	movlw	high(0)
  1345  0533  00D7               	movwf	((86))+1
  1346                           	line	31
  1347                           ;pic_adc.h: 31: for(adc_j=0;adc_j<10;adc_j++)
  1348  0534  1003               	clrc
  1349                           	
  1350  0535  3000               	movlw	0
  1351  0536  1803               	btfsc	status,0
  1352  0537  3001               	movlw	1
  1353  0538  00DE               	movwf	(94)
  1354  0539  2D3A               	goto	l56
  1355                           	line	32
  1356                           	
  1357  053A                     l56:	
  1358                           	line	33
  1359                           ;pic_adc.h: 32: {
  1360                           ;pic_adc.h: 33: ADCON0=0x08;
  1361  053A  3008               	movlw	(08h)
  1362                           	
  1363  053B  009F               	movwf	(31)	;volatile
  1364                           	line	34
  1365                           ;pic_adc.h: 34: ADON=1;
  1366  053C  141F               	bsf	(248/8),(248)&7
  1367                           	line	35
  1368                           ;pic_adc.h: 35: while(adc_del--);
  1369  053D  2D3E               	goto	l59
  1370                           	
  1371  053E                     l59:	
  1372                           	
  1373                           	
  1374  053E  3001               	movlw	low(01h)
  1375  053F  02E0               	subwf	(96),f
  1376  0540  0860               	movf	((96))&07fh,w
  1377                           	
  1378  0541  3AFF               	xorlw	0FFh
  1379  0542  1D03               	skipz
  1380  0543  2D45               	goto	u5051
  1381  0544  2D46               	goto	u5050
  1382  0545                     u5051:
  1383  0545  2D3E               	goto	l59
  1384  0546                     u5050:
  1385                           	
  1386  0546                     l61:	
  1387                           	line	36
  1388                           ;pic_adc.h: 36: ADCON0 =0x0d;
  1389  0546  300D               	movlw	(0Dh)
  1390                           	
  1391  0547  009F               	movwf	(31)	;volatile
  1392                           	line	37
  1393                           ;pic_adc.h: 37: while(ADCON0!=0X09);
  1394  0548  2D49               	goto	l62
  1395                           	
  1396  0549                     l62:	
  1397                           	
  1398  0549  081F               	movf	(31),w	;volatile
  1399                           	
  1400  054A  3A09               	xorlw	09h
  1401  054B  1D03               	skipz
  1402  054C  2D4E               	goto	u5061
  1403  054D  2D4F               	goto	u5060
  1404  054E                     u5061:
  1405  054E  2D49               	goto	l62
  1406  054F                     u5060:
  1407                           	
  1408  054F                     l64:	
  1409                           	line	38
  1410                           ;pic_adc.h: 38: adc_temp=ADRESH;
  1411                           	
  1412  054F  081E               	movf	(30),w	;volatile
  1413                           	
  1414  0550  00A3               	movwf	(??_Adc8_Cha+1+0)
  1415  0551  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  1416                           	
  1417  0552  0823               	movf	0+(??_Adc8_Cha+1+0),w
  1418  0553  00D4               	movwf	(84)
  1419  0554  0824               	movf	1+(??_Adc8_Cha+1+0),w
  1420  0555  00D5               	movwf	(84+1)
  1421                           	line	39
  1422                           ;pic_adc.h: 39: adc_temp0=adc_temp0+adc_temp;
  1423                           	
  1424                           	
  1425  0556  0854               	movf	(84),w
  1426  0557  0756               	addwf	(86),w
  1427                           	
  1428  0558  00D6               	movwf	(86)
  1429  0559  0855               	movf	(84+1),w
  1430  055A  1803               	skipnc
  1431  055B  0A55               	incf	(84+1),w
  1432  055C  0757               	addwf	(86+1),w
  1433  055D  00D7               	movwf	1+(86)
  1434                           	line	31
  1435  055E  3001               	movlw	(01h)
  1436  055F  00A3               	movwf	(??_Adc8_Cha+1+0)
  1437                           	
  1438  0560  0823               	movf	(??_Adc8_Cha+1+0),w
  1439  0561  07DE               	addwf	(94),f
  1440  0562  300A               	movlw	(0Ah)
  1441                           	
  1442  0563  025E               	subwf	(94),w
  1443  0564  1C03               	skipc
  1444  0565  2D67               	goto	u5071
  1445  0566  2D68               	goto	u5070
  1446  0567                     u5071:
  1447  0567  2D3A               	goto	l56
  1448  0568                     u5070:
  1449                           	
  1450  0568                     l57:	
  1451                           	line	41
  1452                           ;pic_adc.h: 40: }
  1453                           ;pic_adc.h: 41: }
  1454  0568  2EE2               	goto	l54
  1455                           	line	42
  1456                           	
  1457  0569                     l55:	
  1458                           ;pic_adc.h: 42: else if(val==2)
  1459                           	
  1460  0569  0822               	movf	(_Adc8_Cha_val),w
  1461                           	
  1462  056A  3A02               	xorlw	02h
  1463  056B  1D03               	skipz
  1464  056C  2D6E               	goto	u5081
  1465  056D  2D6F               	goto	u5080
  1466  056E                     u5081:
  1467  056E  2DA8               	goto	l66
  1468  056F                     u5080:
  1469                           	line	44
  1470                           ;pic_adc.h: 43: {
  1471                           ;pic_adc.h: 44: adc_temp0=0;
  1472  056F  3000               	movlw	low(0)
  1473                           	
  1474  0570  00D6               	movwf	(86)
  1475  0571  3000               	movlw	high(0)
  1476  0572  00D7               	movwf	((86))+1
  1477                           	line	45
  1478                           ;pic_adc.h: 45: for(adc_j=0;adc_j<10;adc_j++)
  1479  0573  1003               	clrc
  1480                           	
  1481  0574  3000               	movlw	0
  1482  0575  1803               	btfsc	status,0
  1483  0576  3001               	movlw	1
  1484  0577  00DE               	movwf	(94)
  1485  0578  2D79               	goto	l67
  1486                           	line	46
  1487                           	
  1488  0579                     l67:	
  1489                           	line	47
  1490                           ;pic_adc.h: 46: {
  1491                           ;pic_adc.h: 47: ADCON0=0x10;
  1492  0579  3010               	movlw	(010h)
  1493                           	
  1494  057A  009F               	movwf	(31)	;volatile
  1495                           	line	48
  1496                           ;pic_adc.h: 48: ADON=1;
  1497  057B  141F               	bsf	(248/8),(248)&7
  1498                           	line	49
  1499                           ;pic_adc.h: 49: while(adc_del--);
  1500  057C  2D7D               	goto	l70
  1501                           	
  1502  057D                     l70:	
  1503                           	
  1504                           	
  1505  057D  3001               	movlw	low(01h)
  1506  057E  02E0               	subwf	(96),f
  1507  057F  0860               	movf	((96))&07fh,w
  1508                           	
  1509  0580  3AFF               	xorlw	0FFh
  1510  0581  1D03               	skipz
  1511  0582  2D84               	goto	u5101
  1512  0583  2D85               	goto	u5100
  1513  0584                     u5101:
  1514  0584  2D7D               	goto	l70
  1515  0585                     u5100:
  1516                           	
  1517  0585                     l72:	
  1518                           	line	50
  1519                           ;pic_adc.h: 50: ADCON0 =0x15;
  1520  0585  3015               	movlw	(015h)
  1521                           	
  1522  0586  009F               	movwf	(31)	;volatile
  1523                           	line	51
  1524                           ;pic_adc.h: 51: while(ADCON0!=0x11);
  1525  0587  2D88               	goto	l73
  1526                           	
  1527  0588                     l73:	
  1528                           	
  1529  0588  081F               	movf	(31),w	;volatile
  1530                           	
  1531  0589  3A11               	xorlw	011h
  1532  058A  1D03               	skipz
  1533  058B  2D8D               	goto	u5111
  1534  058C  2D8E               	goto	u5110
  1535  058D                     u5111:
  1536  058D  2D88               	goto	l73
  1537  058E                     u5110:
  1538                           	
  1539  058E                     l75:	
  1540                           	line	52
  1541                           ;pic_adc.h: 52: adc_temp=ADRESH;
  1542                           	
  1543  058E  081E               	movf	(30),w	;volatile
  1544                           	
  1545  058F  00A3               	movwf	(??_Adc8_Cha+1+0)
  1546  0590  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  1547                           	
  1548  0591  0823               	movf	0+(??_Adc8_Cha+1+0),w
  1549  0592  00D4               	movwf	(84)
  1550  0593  0824               	movf	1+(??_Adc8_Cha+1+0),w
  1551  0594  00D5               	movwf	(84+1)
  1552                           	line	53
  1553                           ;pic_adc.h: 53: adc_temp0=adc_temp0+adc_temp;
  1554                           	
  1555                           	
  1556  0595  0854               	movf	(84),w
  1557  0596  0756               	addwf	(86),w
  1558                           	
  1559  0597  00D6               	movwf	(86)
  1560  0598  0855               	movf	(84+1),w
  1561  0599  1803               	skipnc
  1562  059A  0A55               	incf	(84+1),w
  1563  059B  0757               	addwf	(86+1),w
  1564  059C  00D7               	movwf	1+(86)
  1565                           	line	45
  1566  059D  3001               	movlw	(01h)
  1567  059E  00A3               	movwf	(??_Adc8_Cha+1+0)
  1568                           	
  1569  059F  0823               	movf	(??_Adc8_Cha+1+0),w
  1570  05A0  07DE               	addwf	(94),f
  1571  05A1  300A               	movlw	(0Ah)
  1572                           	
  1573  05A2  025E               	subwf	(94),w
  1574  05A3  1C03               	skipc
  1575  05A4  2DA6               	goto	u5121
  1576  05A5  2DA7               	goto	u5120
  1577  05A6                     u5121:
  1578  05A6  2D79               	goto	l67
  1579  05A7                     u5120:
  1580                           	
  1581  05A7                     l68:	
  1582                           	line	55
  1583                           ;pic_adc.h: 54: }
  1584                           ;pic_adc.h: 55: }
  1585  05A7  2EE2               	goto	l54
  1586                           	line	56
  1587                           	
  1588  05A8                     l66:	
  1589                           ;pic_adc.h: 56: else if(val==3)
  1590                           	
  1591  05A8  0822               	movf	(_Adc8_Cha_val),w
  1592                           	
  1593  05A9  3A03               	xorlw	03h
  1594  05AA  1D03               	skipz
  1595  05AB  2DAD               	goto	u5131
  1596  05AC  2DAE               	goto	u5130
  1597  05AD                     u5131:
  1598  05AD  2DE7               	goto	l77
  1599  05AE                     u5130:
  1600                           	line	58
  1601                           ;pic_adc.h: 57: {
  1602                           ;pic_adc.h: 58: adc_temp0=0;
  1603  05AE  3000               	movlw	low(0)
  1604                           	
  1605  05AF  00D6               	movwf	(86)
  1606  05B0  3000               	movlw	high(0)
  1607  05B1  00D7               	movwf	((86))+1
  1608                           	line	59
  1609                           ;pic_adc.h: 59: for(adc_j=0;adc_j<10;adc_j++)
  1610  05B2  1003               	clrc
  1611                           	
  1612  05B3  3000               	movlw	0
  1613  05B4  1803               	btfsc	status,0
  1614  05B5  3001               	movlw	1
  1615  05B6  00DE               	movwf	(94)
  1616  05B7  2DB8               	goto	l78
  1617                           	line	60
  1618                           	
  1619  05B8                     l78:	
  1620                           	line	61
  1621                           ;pic_adc.h: 60: {
  1622                           ;pic_adc.h: 61: ADCON0=0x18;
  1623  05B8  3018               	movlw	(018h)
  1624                           	
  1625  05B9  009F               	movwf	(31)	;volatile
  1626                           	line	62
  1627                           ;pic_adc.h: 62: ADON=1;
  1628  05BA  141F               	bsf	(248/8),(248)&7
  1629                           	line	63
  1630                           ;pic_adc.h: 63: while(adc_del--);
  1631  05BB  2DBC               	goto	l81
  1632                           	
  1633  05BC                     l81:	
  1634                           	
  1635                           	
  1636  05BC  3001               	movlw	low(01h)
  1637  05BD  02E0               	subwf	(96),f
  1638  05BE  0860               	movf	((96))&07fh,w
  1639                           	
  1640  05BF  3AFF               	xorlw	0FFh
  1641  05C0  1D03               	skipz
  1642  05C1  2DC3               	goto	u5151
  1643  05C2  2DC4               	goto	u5150
  1644  05C3                     u5151:
  1645  05C3  2DBC               	goto	l81
  1646  05C4                     u5150:
  1647                           	
  1648  05C4                     l83:	
  1649                           	line	64
  1650                           ;pic_adc.h: 64: ADCON0 =0x1d;
  1651  05C4  301D               	movlw	(01Dh)
  1652                           	
  1653  05C5  009F               	movwf	(31)	;volatile
  1654                           	line	65
  1655                           ;pic_adc.h: 65: while(ADCON0!=0x19);
  1656  05C6  2DC7               	goto	l84
  1657                           	
  1658  05C7                     l84:	
  1659                           	
  1660  05C7  081F               	movf	(31),w	;volatile
  1661                           	
  1662  05C8  3A19               	xorlw	019h
  1663  05C9  1D03               	skipz
  1664  05CA  2DCC               	goto	u5161
  1665  05CB  2DCD               	goto	u5160
  1666  05CC                     u5161:
  1667  05CC  2DC7               	goto	l84
  1668  05CD                     u5160:
  1669                           	
  1670  05CD                     l86:	
  1671                           	line	66
  1672                           ;pic_adc.h: 66: adc_temp=ADRESH;
  1673                           	
  1674  05CD  081E               	movf	(30),w	;volatile
  1675                           	
  1676  05CE  00A3               	movwf	(??_Adc8_Cha+1+0)
  1677  05CF  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  1678                           	
  1679  05D0  0823               	movf	0+(??_Adc8_Cha+1+0),w
  1680  05D1  00D4               	movwf	(84)
  1681  05D2  0824               	movf	1+(??_Adc8_Cha+1+0),w
  1682  05D3  00D5               	movwf	(84+1)
  1683                           	line	67
  1684                           ;pic_adc.h: 67: adc_temp0=adc_temp0+adc_temp;
  1685                           	
  1686                           	
  1687  05D4  0854               	movf	(84),w
  1688  05D5  0756               	addwf	(86),w
  1689                           	
  1690  05D6  00D6               	movwf	(86)
  1691  05D7  0855               	movf	(84+1),w
  1692  05D8  1803               	skipnc
  1693  05D9  0A55               	incf	(84+1),w
  1694  05DA  0757               	addwf	(86+1),w
  1695  05DB  00D7               	movwf	1+(86)
  1696                           	line	59
  1697  05DC  3001               	movlw	(01h)
  1698  05DD  00A3               	movwf	(??_Adc8_Cha+1+0)
  1699                           	
  1700  05DE  0823               	movf	(??_Adc8_Cha+1+0),w
  1701  05DF  07DE               	addwf	(94),f
  1702  05E0  300A               	movlw	(0Ah)
  1703                           	
  1704  05E1  025E               	subwf	(94),w
  1705  05E2  1C03               	skipc
  1706  05E3  2DE5               	goto	u5171
  1707  05E4  2DE6               	goto	u5170
  1708  05E5                     u5171:
  1709  05E5  2DB8               	goto	l78
  1710  05E6                     u5170:
  1711                           	
  1712  05E6                     l79:	
  1713                           	line	69
  1714                           ;pic_adc.h: 68: }
  1715                           ;pic_adc.h: 69: }
  1716  05E6  2EE2               	goto	l54
  1717                           	line	70
  1718                           	
  1719  05E7                     l77:	
  1720                           ;pic_adc.h: 70: else if(val==4)
  1721                           	
  1722  05E7  0822               	movf	(_Adc8_Cha_val),w
  1723                           	
  1724  05E8  3A04               	xorlw	04h
  1725  05E9  1D03               	skipz
  1726  05EA  2DEC               	goto	u5181
  1727  05EB  2DED               	goto	u5180
  1728  05EC                     u5181:
  1729  05EC  2E26               	goto	l88
  1730  05ED                     u5180:
  1731                           	line	72
  1732                           ;pic_adc.h: 71: {
  1733                           ;pic_adc.h: 72: adc_temp0=0;
  1734  05ED  3000               	movlw	low(0)
  1735                           	
  1736  05EE  00D6               	movwf	(86)
  1737  05EF  3000               	movlw	high(0)
  1738  05F0  00D7               	movwf	((86))+1
  1739                           	line	73
  1740                           ;pic_adc.h: 73: for(adc_j=0;adc_j<10;adc_j++)
  1741  05F1  1003               	clrc
  1742                           	
  1743  05F2  3000               	movlw	0
  1744  05F3  1803               	btfsc	status,0
  1745  05F4  3001               	movlw	1
  1746  05F5  00DE               	movwf	(94)
  1747  05F6  2DF7               	goto	l89
  1748                           	line	74
  1749                           	
  1750  05F7                     l89:	
  1751                           	line	75
  1752                           ;pic_adc.h: 74: {
  1753                           ;pic_adc.h: 75: ADCON0=0x20;
  1754  05F7  3020               	movlw	(020h)
  1755                           	
  1756  05F8  009F               	movwf	(31)	;volatile
  1757                           	line	76
  1758                           ;pic_adc.h: 76: ADON=1;
  1759  05F9  141F               	bsf	(248/8),(248)&7
  1760                           	line	77
  1761                           ;pic_adc.h: 77: while(adc_del--);
  1762  05FA  2DFB               	goto	l92
  1763                           	
  1764  05FB                     l92:	
  1765                           	
  1766                           	
  1767  05FB  3001               	movlw	low(01h)
  1768  05FC  02E0               	subwf	(96),f
  1769  05FD  0860               	movf	((96))&07fh,w
  1770                           	
  1771  05FE  3AFF               	xorlw	0FFh
  1772  05FF  1D03               	skipz
  1773  0600  2E02               	goto	u5201
  1774  0601  2E03               	goto	u5200
  1775  0602                     u5201:
  1776  0602  2DFB               	goto	l92
  1777  0603                     u5200:
  1778                           	
  1779  0603                     l94:	
  1780                           	line	78
  1781                           ;pic_adc.h: 78: ADCON0 =0x25;
  1782  0603  3025               	movlw	(025h)
  1783                           	
  1784  0604  009F               	movwf	(31)	;volatile
  1785                           	line	79
  1786                           ;pic_adc.h: 79: while(ADCON0!=0x21);
  1787  0605  2E06               	goto	l95
  1788                           	
  1789  0606                     l95:	
  1790                           	
  1791  0606  081F               	movf	(31),w	;volatile
  1792                           	
  1793  0607  3A21               	xorlw	021h
  1794  0608  1D03               	skipz
  1795  0609  2E0B               	goto	u5211
  1796  060A  2E0C               	goto	u5210
  1797  060B                     u5211:
  1798  060B  2E06               	goto	l95
  1799  060C                     u5210:
  1800                           	
  1801  060C                     l97:	
  1802                           	line	80
  1803                           ;pic_adc.h: 80: adc_temp=ADRESH;
  1804                           	
  1805  060C  081E               	movf	(30),w	;volatile
  1806                           	
  1807  060D  00A3               	movwf	(??_Adc8_Cha+1+0)
  1808  060E  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  1809                           	
  1810  060F  0823               	movf	0+(??_Adc8_Cha+1+0),w
  1811  0610  00D4               	movwf	(84)
  1812  0611  0824               	movf	1+(??_Adc8_Cha+1+0),w
  1813  0612  00D5               	movwf	(84+1)
  1814                           	line	81
  1815                           ;pic_adc.h: 81: adc_temp0=adc_temp0+adc_temp;
  1816                           	
  1817                           	
  1818  0613  0854               	movf	(84),w
  1819  0614  0756               	addwf	(86),w
  1820                           	
  1821  0615  00D6               	movwf	(86)
  1822  0616  0855               	movf	(84+1),w
  1823  0617  1803               	skipnc
  1824  0618  0A55               	incf	(84+1),w
  1825  0619  0757               	addwf	(86+1),w
  1826  061A  00D7               	movwf	1+(86)
  1827                           	line	73
  1828  061B  3001               	movlw	(01h)
  1829  061C  00A3               	movwf	(??_Adc8_Cha+1+0)
  1830                           	
  1831  061D  0823               	movf	(??_Adc8_Cha+1+0),w
  1832  061E  07DE               	addwf	(94),f
  1833  061F  300A               	movlw	(0Ah)
  1834                           	
  1835  0620  025E               	subwf	(94),w
  1836  0621  1C03               	skipc
  1837  0622  2E24               	goto	u5221
  1838  0623  2E25               	goto	u5220
  1839  0624                     u5221:
  1840  0624  2DF7               	goto	l89
  1841  0625                     u5220:
  1842                           	
  1843  0625                     l90:	
  1844                           	line	83
  1845                           ;pic_adc.h: 82: }
  1846                           ;pic_adc.h: 83: }
  1847  0625  2EE2               	goto	l54
  1848                           	line	84
  1849                           	
  1850  0626                     l88:	
  1851                           ;pic_adc.h: 84: else if(val==5)
  1852                           	
  1853  0626  0822               	movf	(_Adc8_Cha_val),w
  1854                           	
  1855  0627  3A05               	xorlw	05h
  1856  0628  1D03               	skipz
  1857  0629  2E2B               	goto	u5231
  1858  062A  2E2C               	goto	u5230
  1859  062B                     u5231:
  1860  062B  2E65               	goto	l99
  1861  062C                     u5230:
  1862                           	line	86
  1863                           ;pic_adc.h: 85: {
  1864                           ;pic_adc.h: 86: adc_temp0=0;
  1865  062C  3000               	movlw	low(0)
  1866                           	
  1867  062D  00D6               	movwf	(86)
  1868  062E  3000               	movlw	high(0)
  1869  062F  00D7               	movwf	((86))+1
  1870                           	line	87
  1871                           ;pic_adc.h: 87: for(adc_j=0;adc_j<10;adc_j++)
  1872  0630  1003               	clrc
  1873                           	
  1874  0631  3000               	movlw	0
  1875  0632  1803               	btfsc	status,0
  1876  0633  3001               	movlw	1
  1877  0634  00DE               	movwf	(94)
  1878  0635  2E36               	goto	l100
  1879                           	line	88
  1880                           	
  1881  0636                     l100:	
  1882                           	line	89
  1883                           ;pic_adc.h: 88: {
  1884                           ;pic_adc.h: 89: ADCON0=0x28;
  1885  0636  3028               	movlw	(028h)
  1886                           	
  1887  0637  009F               	movwf	(31)	;volatile
  1888                           	line	90
  1889                           ;pic_adc.h: 90: ADON=1;
  1890  0638  141F               	bsf	(248/8),(248)&7
  1891                           	line	91
  1892                           ;pic_adc.h: 91: while(adc_del--);
  1893  0639  2E3A               	goto	l103
  1894                           	
  1895  063A                     l103:	
  1896                           	
  1897                           	
  1898  063A  3001               	movlw	low(01h)
  1899  063B  02E0               	subwf	(96),f
  1900  063C  0860               	movf	((96))&07fh,w
  1901                           	
  1902  063D  3AFF               	xorlw	0FFh
  1903  063E  1D03               	skipz
  1904  063F  2E41               	goto	u5251
  1905  0640  2E42               	goto	u5250
  1906  0641                     u5251:
  1907  0641  2E3A               	goto	l103
  1908  0642                     u5250:
  1909                           	
  1910  0642                     l105:	
  1911                           	line	92
  1912                           ;pic_adc.h: 92: ADCON0 =0x2d;
  1913  0642  302D               	movlw	(02Dh)
  1914                           	
  1915  0643  009F               	movwf	(31)	;volatile
  1916                           	line	93
  1917                           ;pic_adc.h: 93: while(ADCON0!=0x29);
  1918  0644  2E45               	goto	l106
  1919                           	
  1920  0645                     l106:	
  1921                           	
  1922  0645  081F               	movf	(31),w	;volatile
  1923                           	
  1924  0646  3A29               	xorlw	029h
  1925  0647  1D03               	skipz
  1926  0648  2E4A               	goto	u5261
  1927  0649  2E4B               	goto	u5260
  1928  064A                     u5261:
  1929  064A  2E45               	goto	l106
  1930  064B                     u5260:
  1931                           	
  1932  064B                     l108:	
  1933                           	line	94
  1934                           ;pic_adc.h: 94: adc_temp=ADRESH;
  1935                           	
  1936  064B  081E               	movf	(30),w	;volatile
  1937                           	
  1938  064C  00A3               	movwf	(??_Adc8_Cha+1+0)
  1939  064D  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  1940                           	
  1941  064E  0823               	movf	0+(??_Adc8_Cha+1+0),w
  1942  064F  00D4               	movwf	(84)
  1943  0650  0824               	movf	1+(??_Adc8_Cha+1+0),w
  1944  0651  00D5               	movwf	(84+1)
  1945                           	line	95
  1946                           ;pic_adc.h: 95: adc_temp0=adc_temp0+adc_temp;
  1947                           	
  1948                           	
  1949  0652  0854               	movf	(84),w
  1950  0653  0756               	addwf	(86),w
  1951                           	
  1952  0654  00D6               	movwf	(86)
  1953  0655  0855               	movf	(84+1),w
  1954  0656  1803               	skipnc
  1955  0657  0A55               	incf	(84+1),w
  1956  0658  0757               	addwf	(86+1),w
  1957  0659  00D7               	movwf	1+(86)
  1958                           	line	87
  1959  065A  3001               	movlw	(01h)
  1960  065B  00A3               	movwf	(??_Adc8_Cha+1+0)
  1961                           	
  1962  065C  0823               	movf	(??_Adc8_Cha+1+0),w
  1963  065D  07DE               	addwf	(94),f
  1964  065E  300A               	movlw	(0Ah)
  1965                           	
  1966  065F  025E               	subwf	(94),w
  1967  0660  1C03               	skipc
  1968  0661  2E63               	goto	u5271
  1969  0662  2E64               	goto	u5270
  1970  0663                     u5271:
  1971  0663  2E36               	goto	l100
  1972  0664                     u5270:
  1973                           	
  1974  0664                     l101:	
  1975                           	line	97
  1976                           ;pic_adc.h: 96: }
  1977                           ;pic_adc.h: 97: }
  1978  0664  2EE2               	goto	l54
  1979                           	line	98
  1980                           	
  1981  0665                     l99:	
  1982                           ;pic_adc.h: 98: else if(val==6)
  1983                           	
  1984  0665  0822               	movf	(_Adc8_Cha_val),w
  1985                           	
  1986  0666  3A06               	xorlw	06h
  1987  0667  1D03               	skipz
  1988  0668  2E6A               	goto	u5281
  1989  0669  2E6B               	goto	u5280
  1990  066A                     u5281:
  1991  066A  2EA4               	goto	l110
  1992  066B                     u5280:
  1993                           	line	100
  1994                           ;pic_adc.h: 99: {
  1995                           ;pic_adc.h: 100: adc_temp0=0;
  1996  066B  3000               	movlw	low(0)
  1997                           	
  1998  066C  00D6               	movwf	(86)
  1999  066D  3000               	movlw	high(0)
  2000  066E  00D7               	movwf	((86))+1
  2001                           	line	101
  2002                           ;pic_adc.h: 101: for(adc_j=0;adc_j<10;adc_j++)
  2003  066F  1003               	clrc
  2004                           	
  2005  0670  3000               	movlw	0
  2006  0671  1803               	btfsc	status,0
  2007  0672  3001               	movlw	1
  2008  0673  00DE               	movwf	(94)
  2009  0674  2E75               	goto	l111
  2010                           	line	102
  2011                           	
  2012  0675                     l111:	
  2013                           	line	103
  2014                           ;pic_adc.h: 102: {
  2015                           ;pic_adc.h: 103: ADCON0=0x30;
  2016  0675  3030               	movlw	(030h)
  2017                           	
  2018  0676  009F               	movwf	(31)	;volatile
  2019                           	line	104
  2020                           ;pic_adc.h: 104: ADON=1;
  2021  0677  141F               	bsf	(248/8),(248)&7
  2022                           	line	105
  2023                           ;pic_adc.h: 105: while(adc_del--);
  2024  0678  2E79               	goto	l114
  2025                           	
  2026  0679                     l114:	
  2027                           	
  2028                           	
  2029  0679  3001               	movlw	low(01h)
  2030  067A  02E0               	subwf	(96),f
  2031  067B  0860               	movf	((96))&07fh,w
  2032                           	
  2033  067C  3AFF               	xorlw	0FFh
  2034  067D  1D03               	skipz
  2035  067E  2E80               	goto	u5301
  2036  067F  2E81               	goto	u5300
  2037  0680                     u5301:
  2038  0680  2E79               	goto	l114
  2039  0681                     u5300:
  2040                           	
  2041  0681                     l116:	
  2042                           	line	106
  2043                           ;pic_adc.h: 106: ADCON0 =0x35;
  2044  0681  3035               	movlw	(035h)
  2045                           	
  2046  0682  009F               	movwf	(31)	;volatile
  2047                           	line	107
  2048                           ;pic_adc.h: 107: while(ADCON0!=0x31);
  2049  0683  2E84               	goto	l117
  2050                           	
  2051  0684                     l117:	
  2052                           	
  2053  0684  081F               	movf	(31),w	;volatile
  2054                           	
  2055  0685  3A31               	xorlw	031h
  2056  0686  1D03               	skipz
  2057  0687  2E89               	goto	u5311
  2058  0688  2E8A               	goto	u5310
  2059  0689                     u5311:
  2060  0689  2E84               	goto	l117
  2061  068A                     u5310:
  2062                           	
  2063  068A                     l119:	
  2064                           	line	108
  2065                           ;pic_adc.h: 108: adc_temp=ADRESH;
  2066                           	
  2067  068A  081E               	movf	(30),w	;volatile
  2068                           	
  2069  068B  00A3               	movwf	(??_Adc8_Cha+1+0)
  2070  068C  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  2071                           	
  2072  068D  0823               	movf	0+(??_Adc8_Cha+1+0),w
  2073  068E  00D4               	movwf	(84)
  2074  068F  0824               	movf	1+(??_Adc8_Cha+1+0),w
  2075  0690  00D5               	movwf	(84+1)
  2076                           	line	109
  2077                           ;pic_adc.h: 109: adc_temp0=adc_temp0+adc_temp;
  2078                           	
  2079                           	
  2080  0691  0854               	movf	(84),w
  2081  0692  0756               	addwf	(86),w
  2082                           	
  2083  0693  00D6               	movwf	(86)
  2084  0694  0855               	movf	(84+1),w
  2085  0695  1803               	skipnc
  2086  0696  0A55               	incf	(84+1),w
  2087  0697  0757               	addwf	(86+1),w
  2088  0698  00D7               	movwf	1+(86)
  2089                           	line	101
  2090  0699  3001               	movlw	(01h)
  2091  069A  00A3               	movwf	(??_Adc8_Cha+1+0)
  2092                           	
  2093  069B  0823               	movf	(??_Adc8_Cha+1+0),w
  2094  069C  07DE               	addwf	(94),f
  2095  069D  300A               	movlw	(0Ah)
  2096                           	
  2097  069E  025E               	subwf	(94),w
  2098  069F  1C03               	skipc
  2099  06A0  2EA2               	goto	u5321
  2100  06A1  2EA3               	goto	u5320
  2101  06A2                     u5321:
  2102  06A2  2E75               	goto	l111
  2103  06A3                     u5320:
  2104                           	
  2105  06A3                     l112:	
  2106                           	line	111
  2107                           ;pic_adc.h: 110: }
  2108                           ;pic_adc.h: 111: }
  2109  06A3  2EE2               	goto	l54
  2110                           	line	112
  2111                           	
  2112  06A4                     l110:	
  2113                           ;pic_adc.h: 112: else if(val==7)
  2114                           	
  2115  06A4  0822               	movf	(_Adc8_Cha_val),w
  2116                           	
  2117  06A5  3A07               	xorlw	07h
  2118  06A6  1D03               	skipz
  2119  06A7  2EA9               	goto	u5331
  2120  06A8  2EAA               	goto	u5330
  2121  06A9                     u5331:
  2122  06A9  2EE2               	goto	l54
  2123  06AA                     u5330:
  2124                           	line	114
  2125                           ;pic_adc.h: 113: {
  2126                           ;pic_adc.h: 114: adc_temp0=0;
  2127  06AA  3000               	movlw	low(0)
  2128                           	
  2129  06AB  00D6               	movwf	(86)
  2130  06AC  3000               	movlw	high(0)
  2131  06AD  00D7               	movwf	((86))+1
  2132                           	line	115
  2133                           ;pic_adc.h: 115: for(adc_j=0;adc_j<10;adc_j++)
  2134  06AE  1003               	clrc
  2135                           	
  2136  06AF  3000               	movlw	0
  2137  06B0  1803               	btfsc	status,0
  2138  06B1  3001               	movlw	1
  2139  06B2  00DE               	movwf	(94)
  2140  06B3  2EB4               	goto	l122
  2141                           	line	116
  2142                           	
  2143  06B4                     l122:	
  2144                           	line	117
  2145                           ;pic_adc.h: 116: {
  2146                           ;pic_adc.h: 117: ADCON0=0x38;
  2147  06B4  3038               	movlw	(038h)
  2148                           	
  2149  06B5  009F               	movwf	(31)	;volatile
  2150                           	line	118
  2151                           ;pic_adc.h: 118: ADON=1;
  2152  06B6  141F               	bsf	(248/8),(248)&7
  2153                           	line	119
  2154                           ;pic_adc.h: 119: while(adc_del--);
  2155  06B7  2EB8               	goto	l125
  2156                           	
  2157  06B8                     l125:	
  2158                           	
  2159                           	
  2160  06B8  3001               	movlw	low(01h)
  2161  06B9  02E0               	subwf	(96),f
  2162  06BA  0860               	movf	((96))&07fh,w
  2163                           	
  2164  06BB  3AFF               	xorlw	0FFh
  2165  06BC  1D03               	skipz
  2166  06BD  2EBF               	goto	u5351
  2167  06BE  2EC0               	goto	u5350
  2168  06BF                     u5351:
  2169  06BF  2EB8               	goto	l125
  2170  06C0                     u5350:
  2171                           	
  2172  06C0                     l127:	
  2173                           	line	120
  2174                           ;pic_adc.h: 120: ADCON0 =0x3d;
  2175  06C0  303D               	movlw	(03Dh)
  2176                           	
  2177  06C1  009F               	movwf	(31)	;volatile
  2178                           	line	121
  2179                           ;pic_adc.h: 121: while(ADCON0!=0x39);
  2180  06C2  2EC3               	goto	l128
  2181                           	
  2182  06C3                     l128:	
  2183                           	
  2184  06C3  081F               	movf	(31),w	;volatile
  2185                           	
  2186  06C4  3A39               	xorlw	039h
  2187  06C5  1D03               	skipz
  2188  06C6  2EC8               	goto	u5361
  2189  06C7  2EC9               	goto	u5360
  2190  06C8                     u5361:
  2191  06C8  2EC3               	goto	l128
  2192  06C9                     u5360:
  2193                           	
  2194  06C9                     l130:	
  2195                           	line	122
  2196                           ;pic_adc.h: 122: adc_temp=ADRESH;
  2197                           	
  2198  06C9  081E               	movf	(30),w	;volatile
  2199                           	
  2200  06CA  00A3               	movwf	(??_Adc8_Cha+1+0)
  2201  06CB  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  2202                           	
  2203  06CC  0823               	movf	0+(??_Adc8_Cha+1+0),w
  2204  06CD  00D4               	movwf	(84)
  2205  06CE  0824               	movf	1+(??_Adc8_Cha+1+0),w
  2206  06CF  00D5               	movwf	(84+1)
  2207                           	line	123
  2208                           ;pic_adc.h: 123: adc_temp0=adc_temp0+adc_temp;
  2209                           	
  2210                           	
  2211  06D0  0854               	movf	(84),w
  2212  06D1  0756               	addwf	(86),w
  2213                           	
  2214  06D2  00D6               	movwf	(86)
  2215  06D3  0855               	movf	(84+1),w
  2216  06D4  1803               	skipnc
  2217  06D5  0A55               	incf	(84+1),w
  2218  06D6  0757               	addwf	(86+1),w
  2219  06D7  00D7               	movwf	1+(86)
  2220                           	line	115
  2221  06D8  3001               	movlw	(01h)
  2222  06D9  00A3               	movwf	(??_Adc8_Cha+1+0)
  2223                           	
  2224  06DA  0823               	movf	(??_Adc8_Cha+1+0),w
  2225  06DB  07DE               	addwf	(94),f
  2226  06DC  300A               	movlw	(0Ah)
  2227                           	
  2228  06DD  025E               	subwf	(94),w
  2229  06DE  1C03               	skipc
  2230  06DF  2EE1               	goto	u5371
  2231  06E0  2EE2               	goto	u5370
  2232  06E1                     u5371:
  2233  06E1  2EB4               	goto	l122
  2234  06E2                     u5370:
  2235                           	
  2236  06E2                     l123:	
  2237                           	line	125
  2238                           	
  2239  06E2                     l121:	
  2240                           	line	126
  2241                           	
  2242  06E2                     l120:	
  2243                           	
  2244  06E2                     l109:	
  2245                           	
  2246  06E2                     l98:	
  2247                           	
  2248  06E2                     l87:	
  2249                           	
  2250  06E2                     l76:	
  2251                           	
  2252  06E2                     l65:	
  2253                           	
  2254  06E2                     l54:	
  2255                           ;pic_adc.h: 124: }
  2256                           ;pic_adc.h: 125: }
  2257                           ;pic_adc.h: 126: adc_val=adc_temp0/10;
  2258  06E2  300A               	movlw	low(0Ah)
  2259                           	
  2260  06E3  00AE               	movwf	(0+?___lwdiv+02h)&07fh
  2261  06E4  3000               	movlw	high(0Ah)
  2262  06E5  00AF               	movwf	((0+?___lwdiv+02h)&07fh)+1
  2263                           	
  2264                           	
  2265  06E6  0856               	movf	(86),w
  2266  06E7  01AC               	clrf	(?___lwdiv)
  2267  06E8  07AC               	addwf	(?___lwdiv)
  2268  06E9  0857               	movf	(86+1),w
  2269  06EA  01AD               	clrf	(?___lwdiv+1)
  2270  06EB  07AD               	addwf	(?___lwdiv+1)
  2271  06EC  120A  118A  22F3   	fcall	___lwdiv
              120A  118A         
  2272  06F1  1283               	bcf	status, 5	;RP0=0, select bank0
  2273  06F2  1303               	bcf	status, 6	;RP2=0, select bank0
  2274  06F3  082C               	movf	(0+?___lwdiv),w
  2275                           	
  2276  06F4  00A3               	movwf	(??_Adc8_Cha+1+0)
  2277                           	
  2278  06F5  0823               	movf	(??_Adc8_Cha+1+0),w
  2279  06F6  00DF               	movwf	(95)
  2280                           	line	127
  2281                           	
  2282  06F7  085F               	movf	(95),w
  2283                           	
  2284  06F8  00A3               	movwf	(??_Adc8_Cha+1+0)
  2285  06F9  01A4               	clrf	(??_Adc8_Cha+1+0+1)
  2286                           	
  2287  06FA  0823               	movf	0+(??_Adc8_Cha+1+0),w
  2288  06FB  00A0               	movwf	(?_Adc8_Cha)
  2289  06FC  0824               	movf	1+(??_Adc8_Cha+1+0),w
  2290  06FD  00A1               	movwf	(?_Adc8_Cha+1)
  2291  06FE  2EFF               	goto	l43
  2292                           	line	128
  2293                           ;pic_adc.h: 128: }
  2294  06FF                     l43:	
  2295  06FF  0008               	return
  2296                           ; =============== function _Adc8_Cha ends =====
                                 ==========
  2297                           
  2298                           GLOBAL __end_of_Adc8_Cha
  2299  0700                     	__end_of_Adc8_Cha:
  2300                           	FNSIZE	_Adc8_Cha,3,2
  2301                           	signat	_Adc8_Cha,4218
  2302                           	global	_Receive
  2303                           	global	??_Receive
  2304                           	global	?_Receive
  2305                           
  2306                           ; *************** function _Receive ***********
                                 ****
  2307                           ; Defined at:
  2308                           ;		line 78 in file "G:\accelerometer contol rob
                                 ot tx\pic_serial.h"
  2309                           ; Parameters:
  2310                           ;		rece        	reg:   wr	type: unsigned char 
  2311                           ; Auto variables:
  2312                           ;		rece        	       	type: unsigned char 
  2313                           ; Return value:
  2314                           ;		type: void 
  2315                           ;		size: 0
  2316                           ; Registers used:
  2317                           ;		wreg
  2318                           ; Tracked objects:
  2319                           ;		On entry : 0/100
  2320                           ;		On exit  : 0/0
  2321                           ;		Unchanged: 0/0
  2322                           ; Data sizes:
  2323                           ;		Autos:    1
  2324                           ;		Params:   0
  2325                           ;		Temp:     0
  2326                           ;		Total:    1
  2327                           ; This function calls:
  2328                           ;		Nothing
  2329                           ; This function is called by:
  2330                           ;		_main
  2331                           ; This function uses a non-reentrant model
  2332                           ; 
  2333                           	psect	text150,local,class=CODE,delta=2
  2334                           	file	"G:\accelerometer contol robot tx\pic_ser
                                 ial.h"
  2335                           	line	78
  2336                           ;pic_serial.h: 77: void Receive(unsigned char r
                                 ece)
  2337                           ;pic_serial.h: 78: {
  2338                           	
  2339  0FCF                     _Receive:	
  2340                           ; Regs used in _Receive: [wreg]
  2341                           ;_Receive_rece stored from wreg
  2342  0FCF  1283               	bcf	status, 5	;RP0=0, select bank0
  2343  0FD0  1303               	bcf	status, 6	;RP2=0, select bank0
  2344                           	
  2345  0FD1  00A0               	movwf	(_Receive_rece)
  2346                           	line	79
  2347                           ;pic_serial.h: 79: if(rece==1)
  2348                           	
  2349  0FD2  0820               	movf	(_Receive_rece),w
  2350  0FD3  1383               	bcf	status, 7	;select IRP bank0
  2351                           	
  2352  0FD4  3A01               	xorlw	01h
  2353  0FD5  1D03               	skipz
  2354  0FD6  2FD8               	goto	u5381
  2355  0FD7  2FD9               	goto	u5380
  2356  0FD8                     u5381:
  2357  0FD8  2FE0               	goto	l41
  2358  0FD9                     u5380:
  2359                           	line	81
  2360                           ;pic_serial.h: 80: {
  2361                           ;pic_serial.h: 81: RCIE = 1;
  2362  0FD9  1683               	bsf	status, 5	;RP0=1, select bank1
  2363  0FDA  1303               	bcf	status, 6	;RP2=0, select bank1
  2364  0FDB  168C               	bsf	(1125/8)^080h,(1125)&7
  2365                           	line	82
  2366                           ;pic_serial.h: 82: CREN = 1;
  2367  0FDC  1283               	bcf	status, 5	;RP0=0, select bank0
  2368  0FDD  1303               	bcf	status, 6	;RP2=0, select bank0
  2369  0FDE  1618               	bsf	(196/8),(196)&7
  2370                           	line	83
  2371                           ;pic_serial.h: 83: }
  2372  0FDF  2FE6               	goto	l42
  2373                           	line	84
  2374                           	
  2375  0FE0                     l41:	
  2376                           	line	86
  2377                           ;pic_serial.h: 84: else
  2378                           ;pic_serial.h: 85: {
  2379                           ;pic_serial.h: 86: RCIE = 0;
  2380  0FE0  1683               	bsf	status, 5	;RP0=1, select bank1
  2381  0FE1  1303               	bcf	status, 6	;RP2=0, select bank1
  2382  0FE2  128C               	bcf	(1125/8)^080h,(1125)&7
  2383                           	line	87
  2384                           ;pic_serial.h: 87: CREN = 0;
  2385  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  2386  0FE4  1303               	bcf	status, 6	;RP2=0, select bank0
  2387  0FE5  1218               	bcf	(196/8),(196)&7
  2388                           	line	88
  2389                           	
  2390  0FE6                     l42:	
  2391                           	line	89
  2392                           ;pic_serial.h: 88: }
  2393                           ;pic_serial.h: 89: }
  2394  0FE6                     l40:	
  2395  0FE6  0008               	return
  2396                           ; =============== function _Receive ends ======
                                 =========
  2397                           
  2398                           GLOBAL __end_of_Receive
  2399  0FE7                     	__end_of_Receive:
  2400                           	FNSIZE	_Receive,1,0
  2401                           	signat	_Receive,4216
  2402                           	global	_Lcd8_Display
  2403                           	global	??_Lcd8_Display
  2404                           	global	?_Lcd8_Display
  2405                           
  2406                           ; *************** function _Lcd8_Display ******
                                 *********
  2407                           ; Defined at:
  2408                           ;		line 52 in file "G:\accelerometer contol rob
                                 ot tx\pic_lcd8.h"
  2409                           ; Parameters:
  2410                           ;		com         	reg:   wr	type: unsigned char 
  2411                           ;		word        	offs:   0	type: PTR const unsig
                                 ned char ; Largest target is 17
  2412                           ;		 -> STR_9(11), STR_8(11), STR_7(11), STR_6(1
                                 1), 
  2413                           ;		 -> STR_5(11), STR_4(17), STR_3(17), STR_2(1
                                 7), 
  2414                           ;		 -> STR_1(17), 
  2415                           ;		n           	offs:   1	type: unsigned int 
  2416                           ; Auto variables:
  2417                           ;		com         	       	type: unsigned char 
  2418                           ;		Lcd_i       	       	type: unsigned char 
  2419                           ; Return value:
  2420                           ;		type: void 
  2421                           ;		size: 0
  2422                           ; Registers used:
  2423                           ;		wreg, status,2, status,0, pclath, cstack
  2424                           ; Tracked objects:
  2425                           ;		On entry : 300/0
  2426                           ;		On exit  : 0/0
  2427                           ;		Unchanged: 0/0
  2428                           ; Data sizes:
  2429                           ;		Autos:    2
  2430                           ;		Params:   3
  2431                           ;		Temp:     2
  2432                           ;		Total:    7
  2433                           ; This function calls:
  2434                           ;		_Lcd8_Write
  2435                           ; This function is called by:
  2436                           ;		_main
  2437                           ; This function uses a non-reentrant model
  2438                           ; 
  2439                           	psect	text151,local,class=CODE,delta=2
  2440                           	file	"G:\accelerometer contol robot tx\pic_lcd
                                 8.h"
  2441                           	line	52
  2442                           ;pic_lcd8.h: 51: void Lcd8_Display(unsigned cha
                                 r com,const unsigned char *word,unsigned int n)
  2443                           ;pic_lcd8.h: 52: {
  2444                           	
  2445  0290                     _Lcd8_Display:	
  2446                           ; Regs used in _Lcd8_Display: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  2447                           ;_Lcd8_Display_com stored from wreg
  2448                           	line	55
  2449                           	
  2450  0290  00A3               	movwf	(_Lcd8_Display_com)
  2451                           ;pic_lcd8.h: 53: unsigned char Lcd_i;
  2452                           ;pic_lcd8.h: 55: for(Lcd_i=0;Lcd_i<n;Lcd_i++)
  2453  0291  1003               	clrc
  2454                           	
  2455  0292  3000               	movlw	0
  2456  0293  1803               	btfsc	status,0
  2457  0294  3001               	movlw	1
  2458  0295  00A4               	movwf	(_Lcd8_Display_Lcd_i)
  2459  0296  2AAC               	goto	l8
  2460                           	line	56
  2461                           	
  2462  0297                     l5:	
  2463                           	line	57
  2464                           ;pic_lcd8.h: 56: {
  2465                           ;pic_lcd8.h: 57: Lcd8_Write(com+Lcd_i,word[Lcd_
                                 i]);
  2466                           	
  2467                           	
  2468  0297  0820               	movf	(_Lcd8_Display_word),w
  2469                           	
  2470  0298  0724               	addwf	(_Lcd8_Display_Lcd_i),w
  2471  0299  120A  118A  2709   	fcall	stringdir
              120A  118A         
  2472                           	
  2473  029E  00AC               	movwf	(?_Lcd8_Write)
  2474                           	
  2475  029F  0824               	movf	(_Lcd8_Display_Lcd_i),w
  2476                           	
  2477                           	
  2478  02A0  0723               	addwf	(_Lcd8_Display_com),w
  2479  02A1  120A  118A  226C   	fcall	_Lcd8_Write
              120A  118A         
  2480                           	line	55
  2481  02A6  3001               	movlw	(01h)
  2482  02A7  1283               	bcf	status, 5	;RP0=0, select bank0
  2483  02A8  1303               	bcf	status, 6	;RP2=0, select bank0
  2484  02A9  00A5               	movwf	(??_Lcd8_Display+2+0)
  2485                           	
  2486  02AA  0825               	movf	(??_Lcd8_Display+2+0),w
  2487  02AB  07A4               	addwf	(_Lcd8_Display_Lcd_i),f
  2488                           	
  2489  02AC                     l8:	
  2490                           	
  2491                           	
  2492  02AC  0824               	movf	(_Lcd8_Display_Lcd_i),w
  2493  02AD  1383               	bcf	status, 7	;select IRP bank0
  2494                           	
  2495  02AE  00A5               	movwf	(??_Lcd8_Display+2+0)
  2496  02AF  01A6               	clrf	(??_Lcd8_Display+2+0+1)
  2497  02B0  0822               	movf	(_Lcd8_Display_n+1),w
  2498  02B1  0226               	subwf	1+(??_Lcd8_Display+2+0),w
  2499  02B2  1D03               	skipz
  2500  02B3  2AB6               	goto	u5395
  2501  02B4  0821               	movf	(_Lcd8_Display_n),w
  2502  02B5  0225               	subwf	0+(??_Lcd8_Display+2+0),w
  2503  02B6                     u5395:
  2504  02B6  1C03               	skipc
  2505  02B7  2AB9               	goto	u5391
  2506  02B8  2ABA               	goto	u5390
  2507  02B9                     u5391:
  2508  02B9  2A97               	goto	l5
  2509  02BA                     u5390:
  2510                           	
  2511  02BA                     l6:	
  2512                           	line	59
  2513                           ;pic_lcd8.h: 58: }
  2514                           ;pic_lcd8.h: 59: }
  2515  02BA                     l4:	
  2516  02BA  0008               	return
  2517                           ; =============== function _Lcd8_Display ends =
                                 ==============
  2518                           
  2519                           GLOBAL __end_of_Lcd8_Display
  2520  02BB                     	__end_of_Lcd8_Display:
  2521                           	FNSIZE	_Lcd8_Display,4,3
  2522                           	signat	_Lcd8_Display,12408
  2523                           	global	_Lcd8_Init
  2524                           	global	??_Lcd8_Init
  2525                           	global	?_Lcd8_Init
  2526                           
  2527                           ; *************** function _Lcd8_Init *********
                                 ******
  2528                           ; Defined at:
  2529                           ;		line 22 in file "G:\accelerometer contol rob
                                 ot tx\pic_lcd8.h"
  2530                           ; Parameters:
  2531                           ;		None
  2532                           ; Auto variables:
  2533                           ;		None
  2534                           ; Return value:
  2535                           ;		type: void 
  2536                           ;		size: 0
  2537                           ; Registers used:
  2538                           ;		wreg, status,2, status,0, pclath, cstack
  2539                           ; Tracked objects:
  2540                           ;		On entry : BFF/100
  2541                           ;		On exit  : 0/0
  2542                           ;		Unchanged: 0/0
  2543                           ; Data sizes:
  2544                           ;		Autos:    0
  2545                           ;		Params:   0
  2546                           ;		Temp:     0
  2547                           ;		Total:    0
  2548                           ; This function calls:
  2549                           ;		_Lcd8_Command
  2550                           ; This function is called by:
  2551                           ;		_main
  2552                           ; This function uses a non-reentrant model
  2553                           ; 
  2554                           	psect	text152,local,class=CODE,delta=2
  2555                           	file	"G:\accelerometer contol robot tx\pic_lcd
                                 8.h"
  2556                           	line	22
  2557                           ;pic_lcd8.h: 21: void Lcd8_Init()
  2558                           ;pic_lcd8.h: 22: {
  2559                           	
  2560  0FE7                     _Lcd8_Init:	
  2561                           ; Regs used in _Lcd8_Init: [wreg+status,2+statu
                                 s,0+pclath+cstack]
  2562                           	line	23
  2563                           ;pic_lcd8.h: 23: Lcd8_Command(0x38);
  2564  0FE7  3038               	movlw	(038h)
  2565  0FE8  120A  118A  222D   	fcall	_Lcd8_Command
              120A  158A         
  2566                           	line	24
  2567                           ;pic_lcd8.h: 24: Lcd8_Command(0x06);
  2568  0FED  3006               	movlw	(06h)
  2569  0FEE  120A  118A  222D   	fcall	_Lcd8_Command
              120A  158A         
  2570                           	line	25
  2571                           ;pic_lcd8.h: 25: Lcd8_Command(0x0c);
  2572  0FF3  300C               	movlw	(0Ch)
  2573  0FF4  120A  118A  222D   	fcall	_Lcd8_Command
              120A  158A         
  2574                           	line	26
  2575                           ;pic_lcd8.h: 26: Lcd8_Command(0x01);
  2576  0FF9  3001               	movlw	(01h)
  2577  0FFA  120A  118A  222D   	fcall	_Lcd8_Command
              120A  158A         
  2578                           	line	27
  2579                           ;pic_lcd8.h: 27: }
  2580  0FFF                     l1:	
  2581  0FFF  0008               	return
  2582                           ; =============== function _Lcd8_Init ends ====
                                 ===========
  2583                           
  2584                           GLOBAL __end_of_Lcd8_Init
  2585  1000                     	__end_of_Lcd8_Init:
  2586                           	FNSIZE	_Lcd8_Init,0,0
  2587                           	signat	_Lcd8_Init,88
  2588                           	global	___lwmod
  2589                           	global	??___lwmod
  2590                           	global	?___lwmod
  2591                           
  2592                           ; *************** function ___lwmod ***********
                                 ****
  2593                           ; Defined at:
  2594                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\lwmod.c"
  2595                           ; Parameters:
  2596                           ;		dividend    	offs:   0	type: unsigned int 
  2597                           ;		divisor     	offs:   2	type: unsigned int 
  2598                           ; Auto variables:
  2599                           ;		counter     	       	type: unsigned char 
  2600                           ; Return value:
  2601                           ;		type: unsigned int 
  2602                           ;		size: 2
  2603                           ; Registers used:
  2604                           ;		wreg, status,2, status,0
  2605                           ; Tracked objects:
  2606                           ;		On entry : 300/0
  2607                           ;		On exit  : 0/0
  2608                           ;		Unchanged: 0/0
  2609                           ; Data sizes:
  2610                           ;		Autos:    1
  2611                           ;		Params:   4
  2612                           ;		Temp:     1
  2613                           ;		Total:    6
  2614                           ; This function calls:
  2615                           ;		Nothing
  2616                           ; This function is called by:
  2617                           ;		_Lcd8_Decimal3
  2618                           ; This function uses a non-reentrant model
  2619                           ; 
  2620                           	psect	text153,local,class=CODE,delta=2
  2621                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\lwmod.c"
  2622                           	line	5
  2623                           	
  2624  02BB                     ___lwmod:	
  2625                           ; Regs used in ___lwmod: [wreg+status,2+status,
                                 0]
  2626                           	line	8
  2627                           	
  2628  02BB  082F               	movf	((___lwmod_divisor+1))&07fh,w
  2629  02BC  042E               	iorwf	((___lwmod_divisor))&07fh,w
  2630  02BD  1903               	skipnz
  2631  02BE  2AC0               	goto	u5401
  2632  02BF  2AC1               	goto	u5400
  2633  02C0                     u5401:
  2634  02C0  2AF1               	goto	l248
  2635  02C1                     u5400:
  2636                           	line	9
  2637                           	
  2638  02C1  01B0               	clrf	(___lwmod_counter)
  2639  02C2  1403               	bsf	status,0
  2640  02C3  0DB0               	rlf	(___lwmod_counter),f
  2641                           	line	10
  2642  02C4  2AD0               	goto	l249
  2643                           	
  2644  02C5                     l250:	
  2645                           	line	11
  2646                           	
  2647  02C5  3001               	movlw	01h
  2648  02C6                     u5415:
  2649  02C6  1003               	clrc
  2650  02C7  0DAE               	rlf	(___lwmod_divisor),f
  2651  02C8  0DAF               	rlf	(___lwmod_divisor+1),f
  2652  02C9  3EFF               	addlw	-1
  2653  02CA  1D03               	skipz
  2654  02CB  2AC6               	goto	u5415
  2655                           	line	12
  2656  02CC  3001               	movlw	(01h)
  2657  02CD  00B1               	movwf	(??___lwmod+1+0)
  2658                           	
  2659  02CE  0831               	movf	(??___lwmod+1+0),w
  2660  02CF  07B0               	addwf	(___lwmod_counter),f
  2661                           	line	13
  2662                           	
  2663  02D0                     l249:	
  2664                           	line	10
  2665                           	
  2666  02D0  1FAF               	btfss	(___lwmod_divisor+1),(15)&7
  2667  02D1  2AD3               	goto	u5421
  2668  02D2  2AD4               	goto	u5420
  2669  02D3                     u5421:
  2670  02D3  2AC5               	goto	l250
  2671  02D4                     u5420:
  2672                           	
  2673  02D4                     l251:	
  2674                           	line	14
  2675                           	
  2676  02D4                     l254:	
  2677                           	line	15
  2678                           	
  2679                           	
  2680  02D4  082F               	movf	(___lwmod_divisor+1),w
  2681  02D5  022D               	subwf	(___lwmod_dividend+1),w
  2682  02D6  1D03               	skipz
  2683  02D7  2ADA               	goto	u5435
  2684  02D8  082E               	movf	(___lwmod_divisor),w
  2685  02D9  022C               	subwf	(___lwmod_dividend),w
  2686  02DA                     u5435:
  2687  02DA  1C03               	skipc
  2688  02DB  2ADD               	goto	u5431
  2689  02DC  2ADE               	goto	u5430
  2690  02DD                     u5431:
  2691  02DD  2AE4               	goto	l255
  2692  02DE                     u5430:
  2693                           	line	16
  2694                           	
  2695                           	
  2696  02DE  082E               	movf	(___lwmod_divisor),w
  2697  02DF  02AC               	subwf	(___lwmod_dividend),f
  2698  02E0  082F               	movf	(___lwmod_divisor+1),w
  2699  02E1  1C03               	skipc
  2700  02E2  03AD               	decf	(___lwmod_dividend+1),f
  2701  02E3  02AD               	subwf	(___lwmod_dividend+1),f
  2702                           	
  2703  02E4                     l255:	
  2704                           	line	17
  2705                           	
  2706  02E4  3001               	movlw	01h
  2707  02E5                     u5445:
  2708  02E5  1003               	clrc
  2709  02E6  0CAF               	rrf	(___lwmod_divisor+1),f
  2710  02E7  0CAE               	rrf	(___lwmod_divisor),f
  2711  02E8  3EFF               	addlw	-1
  2712  02E9  1D03               	skipz
  2713  02EA  2AE5               	goto	u5445
  2714                           	line	18
  2715                           	
  2716                           	
  2717  02EB  3001               	movlw	low(01h)
  2718  02EC  02B0               	subwf	(___lwmod_counter),f
  2719  02ED  1D03               	btfss	status,2
  2720  02EE  2AF0               	goto	u5451
  2721  02EF  2AF1               	goto	u5450
  2722  02F0                     u5451:
  2723  02F0  2AD4               	goto	l254
  2724  02F1                     u5450:
  2725                           	
  2726  02F1                     l253:	
  2727                           	line	19
  2728                           	
  2729  02F1                     l248:	
  2730                           	line	20
  2731  02F1  2AF2               	goto	l247
  2732                           	line	21
  2733  02F2                     l247:	
  2734  02F2  0008               	return
  2735                           ; =============== function ___lwmod ends ======
                                 =========
  2736                           
  2737                           GLOBAL __end_of___lwmod
  2738  02F3                     	__end_of___lwmod:
  2739                           	FNSIZE	___lwmod,2,4
  2740                           	signat	___lwmod,8314
  2741                           	global	___awdiv
  2742                           	global	??___awdiv
  2743                           	global	?___awdiv
  2744                           
  2745                           ; *************** function ___awdiv ***********
                                 ****
  2746                           ; Defined at:
  2747                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\awdiv.c"
  2748                           ; Parameters:
  2749                           ;		dividend    	offs:   0	type: int 
  2750                           ;		divisor     	offs:   2	type: int 
  2751                           ; Auto variables:
  2752                           ;		sign        	       	type: unsigned char 
  2753                           ;		counter     	       	type: unsigned char 
  2754                           ;		quotient    	       	type: int 
  2755                           ; Return value:
  2756                           ;		type: int 
  2757                           ;		size: 2
  2758                           ; Registers used:
  2759                           ;		wreg, status,2, status,0
  2760                           ; Tracked objects:
  2761                           ;		On entry : B00/0
  2762                           ;		On exit  : 0/0
  2763                           ;		Unchanged: 0/0
  2764                           ; Data sizes:
  2765                           ;		Autos:    4
  2766                           ;		Params:   4
  2767                           ;		Temp:     1
  2768                           ;		Total:    9
  2769                           ; This function calls:
  2770                           ;		Nothing
  2771                           ; This function is called by:
  2772                           ;		_Lcd8_Decimal3
  2773                           ; This function uses a non-reentrant model
  2774                           ; 
  2775                           	psect	text154,local,class=CODE,delta=2
  2776                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\awdiv.c"
  2777                           	line	5
  2778                           	
  2779  033D                     ___awdiv:	
  2780                           ; Regs used in ___awdiv: [wreg+status,2+status,
                                 0]
  2781                           	line	9
  2782  033D  1003               	clrc
  2783                           	
  2784  033E  3000               	movlw	0
  2785  033F  1803               	btfsc	status,0
  2786  0340  3001               	movlw	1
  2787  0341  00B1               	movwf	(___awdiv_sign)
  2788                           	line	10
  2789                           	
  2790  0342  1FAF               	btfss	(___awdiv_divisor+1),7
  2791  0343  2B45               	goto	u5461
  2792  0344  2B46               	goto	u5460
  2793  0345                     u5461:
  2794  0345  2B4E               	goto	l393
  2795  0346                     u5460:
  2796                           	line	11
  2797                           	
  2798  0346  09AE               	comf	(___awdiv_divisor),f
  2799  0347  09AF               	comf	(___awdiv_divisor+1),f
  2800  0348  0AAE               	incf	(___awdiv_divisor),f
  2801  0349  1903               	skipnz
  2802  034A  0AAF               	incf	(___awdiv_divisor+1),f
  2803                           	
  2804                           	line	12
  2805                           	
  2806  034B  01B1               	clrf	(___awdiv_sign)
  2807  034C  1403               	bsf	status,0
  2808  034D  0DB1               	rlf	(___awdiv_sign),f
  2809                           	line	13
  2810                           	
  2811  034E                     l393:	
  2812                           	line	14
  2813                           	
  2814  034E  1FAD               	btfss	(___awdiv_dividend+1),7
  2815  034F  2B51               	goto	u5471
  2816  0350  2B52               	goto	u5470
  2817  0351                     u5471:
  2818  0351  2B5B               	goto	l394
  2819  0352                     u5470:
  2820                           	line	15
  2821                           	
  2822  0352  09AC               	comf	(___awdiv_dividend),f
  2823  0353  09AD               	comf	(___awdiv_dividend+1),f
  2824  0354  0AAC               	incf	(___awdiv_dividend),f
  2825  0355  1903               	skipnz
  2826  0356  0AAD               	incf	(___awdiv_dividend+1),f
  2827                           	
  2828                           	line	16
  2829  0357  3001               	movlw	(01h)
  2830  0358  00B4               	movwf	(??___awdiv+4+0)
  2831                           	
  2832  0359  0834               	movf	(??___awdiv+4+0),w
  2833  035A  06B1               	xorwf	(___awdiv_sign),f
  2834                           	line	17
  2835                           	
  2836  035B                     l394:	
  2837                           	line	18
  2838  035B  3000               	movlw	low(0)
  2839                           	
  2840  035C  00B2               	movwf	(___awdiv_quotient)
  2841  035D  3000               	movlw	high(0)
  2842  035E  00B3               	movwf	((___awdiv_quotient))+1
  2843                           	line	19
  2844                           	
  2845  035F  082F               	movf	((___awdiv_divisor+1))&07fh,w
  2846  0360  042E               	iorwf	((___awdiv_divisor))&07fh,w
  2847  0361  1903               	skipnz
  2848  0362  2B64               	goto	u5481
  2849  0363  2B65               	goto	u5480
  2850  0364                     u5481:
  2851  0364  2B9D               	goto	l395
  2852  0365                     u5480:
  2853                           	line	20
  2854                           	
  2855  0365  01B0               	clrf	(___awdiv_counter)
  2856  0366  1403               	bsf	status,0
  2857  0367  0DB0               	rlf	(___awdiv_counter),f
  2858                           	line	21
  2859  0368  2B74               	goto	l396
  2860                           	
  2861  0369                     l397:	
  2862                           	line	22
  2863                           	
  2864  0369  3001               	movlw	01h
  2865  036A                     u5495:
  2866  036A  1003               	clrc
  2867  036B  0DAE               	rlf	(___awdiv_divisor),f
  2868  036C  0DAF               	rlf	(___awdiv_divisor+1),f
  2869  036D  3EFF               	addlw	-1
  2870  036E  1D03               	skipz
  2871  036F  2B6A               	goto	u5495
  2872                           	line	23
  2873  0370  3001               	movlw	(01h)
  2874  0371  00B4               	movwf	(??___awdiv+4+0)
  2875                           	
  2876  0372  0834               	movf	(??___awdiv+4+0),w
  2877  0373  07B0               	addwf	(___awdiv_counter),f
  2878                           	line	24
  2879                           	
  2880  0374                     l396:	
  2881                           	line	21
  2882                           	
  2883  0374  1FAF               	btfss	(___awdiv_divisor+1),(15)&7
  2884  0375  2B77               	goto	u5501
  2885  0376  2B78               	goto	u5500
  2886  0377                     u5501:
  2887  0377  2B69               	goto	l397
  2888  0378                     u5500:
  2889                           	
  2890  0378                     l398:	
  2891                           	line	25
  2892                           	
  2893  0378                     l401:	
  2894                           	line	26
  2895                           	
  2896  0378  3001               	movlw	01h
  2897  0379                     u5515:
  2898  0379  1003               	clrc
  2899  037A  0DB2               	rlf	(___awdiv_quotient),f
  2900  037B  0DB3               	rlf	(___awdiv_quotient+1),f
  2901  037C  3EFF               	addlw	-1
  2902  037D  1D03               	skipz
  2903  037E  2B79               	goto	u5515
  2904                           	line	27
  2905                           	
  2906                           	
  2907  037F  082F               	movf	(___awdiv_divisor+1),w
  2908  0380  022D               	subwf	(___awdiv_dividend+1),w
  2909  0381  1D03               	skipz
  2910  0382  2B85               	goto	u5525
  2911  0383  082E               	movf	(___awdiv_divisor),w
  2912  0384  022C               	subwf	(___awdiv_dividend),w
  2913  0385                     u5525:
  2914  0385  1C03               	skipc
  2915  0386  2B88               	goto	u5521
  2916  0387  2B89               	goto	u5520
  2917  0388                     u5521:
  2918  0388  2B90               	goto	l402
  2919  0389                     u5520:
  2920                           	line	28
  2921                           	
  2922                           	
  2923  0389  082E               	movf	(___awdiv_divisor),w
  2924  038A  02AC               	subwf	(___awdiv_dividend),f
  2925  038B  082F               	movf	(___awdiv_divisor+1),w
  2926  038C  1C03               	skipc
  2927  038D  03AD               	decf	(___awdiv_dividend+1),f
  2928  038E  02AD               	subwf	(___awdiv_dividend+1),f
  2929                           	line	29
  2930                           	
  2931  038F  1432               	bsf	(___awdiv_quotient)+(0/8),(0)&7
  2932                           	line	30
  2933                           	
  2934  0390                     l402:	
  2935                           	line	31
  2936                           	
  2937  0390  3001               	movlw	01h
  2938  0391                     u5535:
  2939  0391  1003               	clrc
  2940  0392  0CAF               	rrf	(___awdiv_divisor+1),f
  2941  0393  0CAE               	rrf	(___awdiv_divisor),f
  2942  0394  3EFF               	addlw	-1
  2943  0395  1D03               	skipz
  2944  0396  2B91               	goto	u5535
  2945                           	line	32
  2946                           	
  2947                           	
  2948  0397  3001               	movlw	low(01h)
  2949  0398  02B0               	subwf	(___awdiv_counter),f
  2950  0399  1D03               	btfss	status,2
  2951  039A  2B9C               	goto	u5541
  2952  039B  2B9D               	goto	u5540
  2953  039C                     u5541:
  2954  039C  2B78               	goto	l401
  2955  039D                     u5540:
  2956                           	
  2957  039D                     l400:	
  2958                           	line	33
  2959                           	
  2960  039D                     l395:	
  2961                           	line	34
  2962                           	
  2963  039D  08B1               	movf	(___awdiv_sign),f
  2964  039E  1D03               	skipz
  2965  039F  2BA1               	goto	u5550
  2966  03A0  2BA6               	goto	l403
  2967  03A1                     u5550:
  2968                           	line	35
  2969                           	
  2970  03A1  09B2               	comf	(___awdiv_quotient),f
  2971  03A2  09B3               	comf	(___awdiv_quotient+1),f
  2972  03A3  0AB2               	incf	(___awdiv_quotient),f
  2973  03A4  1903               	skipnz
  2974  03A5  0AB3               	incf	(___awdiv_quotient+1),f
  2975                           	
  2976                           	
  2977  03A6                     l403:	
  2978                           	line	36
  2979                           	
  2980                           	
  2981  03A6  0832               	movf	(___awdiv_quotient),w
  2982  03A7  01AC               	clrf	(?___awdiv)
  2983  03A8  07AC               	addwf	(?___awdiv)
  2984  03A9  0833               	movf	(___awdiv_quotient+1),w
  2985  03AA  01AD               	clrf	(?___awdiv+1)
  2986  03AB  07AD               	addwf	(?___awdiv+1)
  2987  03AC  2BAD               	goto	l392
  2988                           	line	37
  2989  03AD                     l392:	
  2990  03AD  0008               	return
  2991                           ; =============== function ___awdiv ends ======
                                 =========
  2992                           
  2993                           GLOBAL __end_of___awdiv
  2994  03AE                     	__end_of___awdiv:
  2995                           	FNSIZE	___awdiv,5,4
  2996                           	signat	___awdiv,8314
  2997                           	global	___awmod
  2998                           	global	??___awmod
  2999                           	global	?___awmod
  3000                           
  3001                           ; *************** function ___awmod ***********
                                 ****
  3002                           ; Defined at:
  3003                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\awmod.c"
  3004                           ; Parameters:
  3005                           ;		dividend    	offs:   0	type: int 
  3006                           ;		divisor     	offs:   2	type: int 
  3007                           ; Auto variables:
  3008                           ;		sign        	       	type: unsigned char 
  3009                           ;		counter     	       	type: unsigned char 
  3010                           ; Return value:
  3011                           ;		type: int 
  3012                           ;		size: 2
  3013                           ; Registers used:
  3014                           ;		wreg, status,2, status,0
  3015                           ; Tracked objects:
  3016                           ;		On entry : B00/0
  3017                           ;		On exit  : 0/0
  3018                           ;		Unchanged: 0/0
  3019                           ; Data sizes:
  3020                           ;		Autos:    2
  3021                           ;		Params:   4
  3022                           ;		Temp:     1
  3023                           ;		Total:    7
  3024                           ; This function calls:
  3025                           ;		Nothing
  3026                           ; This function is called by:
  3027                           ;		_Lcd8_Decimal3
  3028                           ; This function uses a non-reentrant model
  3029                           ; 
  3030                           	psect	text155,local,class=CODE,delta=2
  3031                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\awmod.c"
  3032                           	line	5
  3033                           	
  3034  0793                     ___awmod:	
  3035                           ; Regs used in ___awmod: [wreg+status,2+status,
                                 0]
  3036                           	line	8
  3037  0793  1003               	clrc
  3038                           	
  3039  0794  3000               	movlw	0
  3040  0795  1803               	btfsc	status,0
  3041  0796  3001               	movlw	1
  3042  0797  00B0               	movwf	(___awmod_sign)
  3043                           	line	9
  3044                           	
  3045  0798  1FAD               	btfss	(___awmod_dividend+1),7
  3046  0799  2F9B               	goto	u5561
  3047  079A  2F9C               	goto	u5560
  3048  079B                     u5561:
  3049  079B  2FA4               	goto	l475
  3050  079C                     u5560:
  3051                           	line	10
  3052                           	
  3053  079C  09AC               	comf	(___awmod_dividend),f
  3054  079D  09AD               	comf	(___awmod_dividend+1),f
  3055  079E  0AAC               	incf	(___awmod_dividend),f
  3056  079F  1903               	skipnz
  3057  07A0  0AAD               	incf	(___awmod_dividend+1),f
  3058                           	
  3059                           	line	11
  3060                           	
  3061  07A1  01B0               	clrf	(___awmod_sign)
  3062  07A2  1403               	bsf	status,0
  3063  07A3  0DB0               	rlf	(___awmod_sign),f
  3064                           	line	12
  3065                           	
  3066  07A4                     l475:	
  3067                           	line	13
  3068                           	
  3069  07A4  1FAF               	btfss	(___awmod_divisor+1),7
  3070  07A5  2FA7               	goto	u5571
  3071  07A6  2FA8               	goto	u5570
  3072  07A7                     u5571:
  3073  07A7  2FAD               	goto	l476
  3074  07A8                     u5570:
  3075                           	line	14
  3076                           	
  3077  07A8  09AE               	comf	(___awmod_divisor),f
  3078  07A9  09AF               	comf	(___awmod_divisor+1),f
  3079  07AA  0AAE               	incf	(___awmod_divisor),f
  3080  07AB  1903               	skipnz
  3081  07AC  0AAF               	incf	(___awmod_divisor+1),f
  3082                           	
  3083                           	
  3084  07AD                     l476:	
  3085                           	line	15
  3086                           	
  3087  07AD  082F               	movf	((___awmod_divisor+1))&07fh,w
  3088  07AE  042E               	iorwf	((___awmod_divisor))&07fh,w
  3089  07AF  1903               	skipnz
  3090  07B0  2FB2               	goto	u5581
  3091  07B1  2FB3               	goto	u5580
  3092  07B2                     u5581:
  3093  07B2  2FE3               	goto	l477
  3094  07B3                     u5580:
  3095                           	line	16
  3096                           	
  3097  07B3  01B1               	clrf	(___awmod_counter)
  3098  07B4  1403               	bsf	status,0
  3099  07B5  0DB1               	rlf	(___awmod_counter),f
  3100                           	line	17
  3101  07B6  2FC2               	goto	l478
  3102                           	
  3103  07B7                     l479:	
  3104                           	line	18
  3105                           	
  3106  07B7  3001               	movlw	01h
  3107  07B8                     u5595:
  3108  07B8  1003               	clrc
  3109  07B9  0DAE               	rlf	(___awmod_divisor),f
  3110  07BA  0DAF               	rlf	(___awmod_divisor+1),f
  3111  07BB  3EFF               	addlw	-1
  3112  07BC  1D03               	skipz
  3113  07BD  2FB8               	goto	u5595
  3114                           	line	19
  3115  07BE  3001               	movlw	(01h)
  3116  07BF  00B2               	movwf	(??___awmod+2+0)
  3117                           	
  3118  07C0  0832               	movf	(??___awmod+2+0),w
  3119  07C1  07B1               	addwf	(___awmod_counter),f
  3120                           	line	20
  3121                           	
  3122  07C2                     l478:	
  3123                           	line	17
  3124                           	
  3125  07C2  1FAF               	btfss	(___awmod_divisor+1),(15)&7
  3126  07C3  2FC5               	goto	u5601
  3127  07C4  2FC6               	goto	u5600
  3128  07C5                     u5601:
  3129  07C5  2FB7               	goto	l479
  3130  07C6                     u5600:
  3131                           	
  3132  07C6                     l480:	
  3133                           	line	21
  3134                           	
  3135  07C6                     l483:	
  3136                           	line	22
  3137                           	
  3138                           	
  3139  07C6  082F               	movf	(___awmod_divisor+1),w
  3140  07C7  022D               	subwf	(___awmod_dividend+1),w
  3141  07C8  1D03               	skipz
  3142  07C9  2FCC               	goto	u5615
  3143  07CA  082E               	movf	(___awmod_divisor),w
  3144  07CB  022C               	subwf	(___awmod_dividend),w
  3145  07CC                     u5615:
  3146  07CC  1C03               	skipc
  3147  07CD  2FCF               	goto	u5611
  3148  07CE  2FD0               	goto	u5610
  3149  07CF                     u5611:
  3150  07CF  2FD6               	goto	l484
  3151  07D0                     u5610:
  3152                           	line	23
  3153                           	
  3154                           	
  3155  07D0  082E               	movf	(___awmod_divisor),w
  3156  07D1  02AC               	subwf	(___awmod_dividend),f
  3157  07D2  082F               	movf	(___awmod_divisor+1),w
  3158  07D3  1C03               	skipc
  3159  07D4  03AD               	decf	(___awmod_dividend+1),f
  3160  07D5  02AD               	subwf	(___awmod_dividend+1),f
  3161                           	
  3162  07D6                     l484:	
  3163                           	line	24
  3164                           	
  3165  07D6  3001               	movlw	01h
  3166  07D7                     u5625:
  3167  07D7  1003               	clrc
  3168  07D8  0CAF               	rrf	(___awmod_divisor+1),f
  3169  07D9  0CAE               	rrf	(___awmod_divisor),f
  3170  07DA  3EFF               	addlw	-1
  3171  07DB  1D03               	skipz
  3172  07DC  2FD7               	goto	u5625
  3173                           	line	25
  3174                           	
  3175                           	
  3176  07DD  3001               	movlw	low(01h)
  3177  07DE  02B1               	subwf	(___awmod_counter),f
  3178  07DF  1D03               	btfss	status,2
  3179  07E0  2FE2               	goto	u5631
  3180  07E1  2FE3               	goto	u5630
  3181  07E2                     u5631:
  3182  07E2  2FC6               	goto	l483
  3183  07E3                     u5630:
  3184                           	
  3185  07E3                     l482:	
  3186                           	line	26
  3187                           	
  3188  07E3                     l477:	
  3189                           	line	27
  3190                           	
  3191  07E3  08B0               	movf	(___awmod_sign),f
  3192  07E4  1D03               	skipz
  3193  07E5  2FE7               	goto	u5640
  3194  07E6  2FEC               	goto	l485
  3195  07E7                     u5640:
  3196                           	line	28
  3197                           	
  3198  07E7  09AC               	comf	(___awmod_dividend),f
  3199  07E8  09AD               	comf	(___awmod_dividend+1),f
  3200  07E9  0AAC               	incf	(___awmod_dividend),f
  3201  07EA  1903               	skipnz
  3202  07EB  0AAD               	incf	(___awmod_dividend+1),f
  3203                           	
  3204                           	
  3205  07EC                     l485:	
  3206                           	line	29
  3207  07EC  2FED               	goto	l474
  3208                           	line	30
  3209  07ED                     l474:	
  3210  07ED  0008               	return
  3211                           ; =============== function ___awmod ends ======
                                 =========
  3212                           
  3213                           GLOBAL __end_of___awmod
  3214  07EE                     	__end_of___awmod:
  3215                           	FNSIZE	___awmod,3,4
  3216                           	signat	___awmod,8314
  3217                           	global	___lwdiv
  3218                           	global	??___lwdiv
  3219                           	global	?___lwdiv
  3220                           
  3221                           ; *************** function ___lwdiv ***********
                                 ****
  3222                           ; Defined at:
  3223                           ;		line 5 in file "C:\Program Files (x86)\HI-TE
                                 CH Software\PICC\PRO\9.60\sources\lwdiv.c"
  3224                           ; Parameters:
  3225                           ;		dividend    	offs:   0	type: unsigned int 
  3226                           ;		divisor     	offs:   2	type: unsigned int 
  3227                           ; Auto variables:
  3228                           ;		counter     	       	type: unsigned char 
  3229                           ;		quotient    	       	type: unsigned int 
  3230                           ; Return value:
  3231                           ;		type: unsigned int 
  3232                           ;		size: 2
  3233                           ; Registers used:
  3234                           ;		wreg, status,2, status,0
  3235                           ; Tracked objects:
  3236                           ;		On entry : 300/0
  3237                           ;		On exit  : 0/0
  3238                           ;		Unchanged: 0/0
  3239                           ; Data sizes:
  3240                           ;		Autos:    3
  3241                           ;		Params:   4
  3242                           ;		Temp:     1
  3243                           ;		Total:    8
  3244                           ; This function calls:
  3245                           ;		Nothing
  3246                           ; This function is called by:
  3247                           ;		_Lcd8_Decimal3
  3248                           ;		_Adc8_Cha
  3249                           ; This function uses a non-reentrant model
  3250                           ; 
  3251                           	psect	text156,local,class=CODE,delta=2
  3252                           	file	"C:\Program Files (x86)\HI-TECH Software\
                                 PICC\PRO\9.60\sources\lwdiv.c"
  3253                           	line	5
  3254                           	
  3255  02F3                     ___lwdiv:	
  3256                           ; Regs used in ___lwdiv: [wreg+status,2+status,
                                 0]
  3257                           	line	9
  3258  02F3  3000               	movlw	low(0)
  3259                           	
  3260  02F4  00B1               	movwf	(___lwdiv_quotient)
  3261  02F5  3000               	movlw	high(0)
  3262  02F6  00B2               	movwf	((___lwdiv_quotient))+1
  3263                           	line	10
  3264                           	
  3265  02F7  082F               	movf	((___lwdiv_divisor+1))&07fh,w
  3266  02F8  042E               	iorwf	((___lwdiv_divisor))&07fh,w
  3267  02F9  1903               	skipnz
  3268  02FA  2AFC               	goto	u5651
  3269  02FB  2AFD               	goto	u5650
  3270  02FC                     u5651:
  3271  02FC  2B35               	goto	l239
  3272  02FD                     u5650:
  3273                           	line	11
  3274                           	
  3275  02FD  01B0               	clrf	(___lwdiv_counter)
  3276  02FE  1403               	bsf	status,0
  3277  02FF  0DB0               	rlf	(___lwdiv_counter),f
  3278                           	line	12
  3279  0300  2B0C               	goto	l240
  3280                           	
  3281  0301                     l241:	
  3282                           	line	13
  3283                           	
  3284  0301  3001               	movlw	01h
  3285  0302                     u5665:
  3286  0302  1003               	clrc
  3287  0303  0DAE               	rlf	(___lwdiv_divisor),f
  3288  0304  0DAF               	rlf	(___lwdiv_divisor+1),f
  3289  0305  3EFF               	addlw	-1
  3290  0306  1D03               	skipz
  3291  0307  2B02               	goto	u5665
  3292                           	line	14
  3293  0308  3001               	movlw	(01h)
  3294  0309  00B3               	movwf	(??___lwdiv+3+0)
  3295                           	
  3296  030A  0833               	movf	(??___lwdiv+3+0),w
  3297  030B  07B0               	addwf	(___lwdiv_counter),f
  3298                           	line	15
  3299                           	
  3300  030C                     l240:	
  3301                           	line	12
  3302                           	
  3303  030C  1FAF               	btfss	(___lwdiv_divisor+1),(15)&7
  3304  030D  2B0F               	goto	u5671
  3305  030E  2B10               	goto	u5670
  3306  030F                     u5671:
  3307  030F  2B01               	goto	l241
  3308  0310                     u5670:
  3309                           	
  3310  0310                     l242:	
  3311                           	line	16
  3312                           	
  3313  0310                     l245:	
  3314                           	line	17
  3315                           	
  3316  0310  3001               	movlw	01h
  3317  0311                     u5685:
  3318  0311  1003               	clrc
  3319  0312  0DB1               	rlf	(___lwdiv_quotient),f
  3320  0313  0DB2               	rlf	(___lwdiv_quotient+1),f
  3321  0314  3EFF               	addlw	-1
  3322  0315  1D03               	skipz
  3323  0316  2B11               	goto	u5685
  3324                           	line	18
  3325                           	
  3326                           	
  3327  0317  082F               	movf	(___lwdiv_divisor+1),w
  3328  0318  022D               	subwf	(___lwdiv_dividend+1),w
  3329  0319  1D03               	skipz
  3330  031A  2B1D               	goto	u5695
  3331  031B  082E               	movf	(___lwdiv_divisor),w
  3332  031C  022C               	subwf	(___lwdiv_dividend),w
  3333  031D                     u5695:
  3334  031D  1C03               	skipc
  3335  031E  2B20               	goto	u5691
  3336  031F  2B21               	goto	u5690
  3337  0320                     u5691:
  3338  0320  2B28               	goto	l246
  3339  0321                     u5690:
  3340                           	line	19
  3341                           	
  3342                           	
  3343  0321  082E               	movf	(___lwdiv_divisor),w
  3344  0322  02AC               	subwf	(___lwdiv_dividend),f
  3345  0323  082F               	movf	(___lwdiv_divisor+1),w
  3346  0324  1C03               	skipc
  3347  0325  03AD               	decf	(___lwdiv_dividend+1),f
  3348  0326  02AD               	subwf	(___lwdiv_dividend+1),f
  3349                           	line	20
  3350                           	
  3351  0327  1431               	bsf	(___lwdiv_quotient)+(0/8),(0)&7
  3352                           	line	21
  3353                           	
  3354  0328                     l246:	
  3355                           	line	22
  3356                           	
  3357  0328  3001               	movlw	01h
  3358  0329                     u5705:
  3359  0329  1003               	clrc
  3360  032A  0CAF               	rrf	(___lwdiv_divisor+1),f
  3361  032B  0CAE               	rrf	(___lwdiv_divisor),f
  3362  032C  3EFF               	addlw	-1
  3363  032D  1D03               	skipz
  3364  032E  2B29               	goto	u5705
  3365                           	line	23
  3366                           	
  3367                           	
  3368  032F  3001               	movlw	low(01h)
  3369  0330  02B0               	subwf	(___lwdiv_counter),f
  3370  0331  1D03               	btfss	status,2
  3371  0332  2B34               	goto	u5711
  3372  0333  2B35               	goto	u5710
  3373  0334                     u5711:
  3374  0334  2B10               	goto	l245
  3375  0335                     u5710:
  3376                           	
  3377  0335                     l244:	
  3378                           	line	24
  3379                           	
  3380  0335                     l239:	
  3381                           	line	25
  3382                           	
  3383                           	
  3384  0335  0831               	movf	(___lwdiv_quotient),w
  3385  0336  01AC               	clrf	(?___lwdiv)
  3386  0337  07AC               	addwf	(?___lwdiv)
  3387  0338  0832               	movf	(___lwdiv_quotient+1),w
  3388  0339  01AD               	clrf	(?___lwdiv+1)
  3389  033A  07AD               	addwf	(?___lwdiv+1)
  3390  033B  2B3C               	goto	l238
  3391                           	line	26
  3392  033C                     l238:	
  3393  033C  0008               	return
  3394                           ; =============== function ___lwdiv ends ======
                                 =========
  3395                           
  3396                           GLOBAL __end_of___lwdiv
  3397  033D                     	__end_of___lwdiv:
  3398                           	FNSIZE	___lwdiv,4,4
  3399                           	signat	___lwdiv,8314
  3400                           	global	_Lcd8_Write
  3401                           	global	??_Lcd8_Write
  3402                           	global	?_Lcd8_Write
  3403                           
  3404                           ; *************** function _Lcd8_Write ********
                                 *******
  3405                           ; Defined at:
  3406                           ;		line 40 in file "G:\accelerometer contol rob
                                 ot tx\pic_lcd8.h"
  3407                           ; Parameters:
  3408                           ;		com         	reg:   wr	type: unsigned char 
  3409                           ;		lr          	offs:   0	type: unsigned char 
  3410                           ; Auto variables:
  3411                           ;		com         	       	type: unsigned char 
  3412                           ; Return value:
  3413                           ;		type: void 
  3414                           ;		size: 0
  3415                           ; Registers used:
  3416                           ;		wreg, status,2, status,0, pclath, cstack
  3417                           ; Tracked objects:
  3418                           ;		On entry : B00/0
  3419                           ;		On exit  : 0/0
  3420                           ;		Unchanged: 0/0
  3421                           ; Data sizes:
  3422                           ;		Autos:    1
  3423                           ;		Params:   1
  3424                           ;		Temp:     0
  3425                           ;		Total:    2
  3426                           ; This function calls:
  3427                           ;		_Lcd8_Command
  3428                           ;		_Delay
  3429                           ; This function is called by:
  3430                           ;		_Lcd8_Display
  3431                           ;		_Lcd8_Decimal3
  3432                           ; This function uses a non-reentrant model
  3433                           ; 
  3434                           	psect	text157,local,class=CODE,delta=2
  3435                           	file	"G:\accelerometer contol robot tx\pic_lcd
                                 8.h"
  3436                           	line	40
  3437                           ;pic_lcd8.h: 39: void Lcd8_Write(unsigned char 
                                 com,unsigned char lr)
  3438                           ;pic_lcd8.h: 40: {
  3439                           	
  3440  026C                     _Lcd8_Write:	
  3441                           ; Regs used in _Lcd8_Write: [wreg+status,2+stat
                                 us,0+pclath+cstack]
  3442                           ;_Lcd8_Write_com stored from wreg
  3443                           	
  3444  026C  00AD               	movwf	(_Lcd8_Write_com)
  3445                           	line	41
  3446                           ;pic_lcd8.h: 41: Lcd8_Command(com);
  3447                           	
  3448  026D  082D               	movf	(_Lcd8_Write_com),w
  3449                           	
  3450  026E  120A  118A  222D   	fcall	_Lcd8_Command
              120A  118A         
  3451                           	line	43
  3452                           ;pic_lcd8.h: 43: PORTD=lr;
  3453  0273  1283               	bcf	status, 5	;RP0=0, select bank0
  3454  0274  1303               	bcf	status, 6	;RP2=0, select bank0
  3455                           	
  3456  0275  082C               	movf	(_Lcd8_Write_lr),w
  3457  0276  1383               	bcf	status, 7	;select IRP bank0
  3458                           	
  3459                           	
  3460  0277  0088               	movwf	(8)	;volatile
  3461                           	line	44
  3462                           ;pic_lcd8.h: 44: Lcd_en=1;
  3463  0278  1687               	bsf	(61/8),(61)&7
  3464                           	line	45
  3465                           ;pic_lcd8.h: 45: Lcd_rs=1;
  3466  0279  1607               	bsf	(60/8),(60)&7
  3467                           	line	46
  3468                           ;pic_lcd8.h: 46: Delay(125);
  3469  027A  307D               	movlw	low(07Dh)
  3470                           	
  3471  027B  00AF               	movwf	(?_Delay)
  3472  027C  3000               	movlw	high(07Dh)
  3473  027D  00B0               	movwf	((?_Delay))+1
  3474  027E  120A  118A  27EE   	fcall	_Delay
              120A  118A         
  3475                           	line	47
  3476                           ;pic_lcd8.h: 47: Lcd_en=0;
  3477  0283  1283               	bcf	status, 5	;RP0=0, select bank0
  3478  0284  1303               	bcf	status, 6	;RP2=0, select bank0
  3479  0285  1287               	bcf	(61/8),(61)&7
  3480                           	line	48
  3481                           ;pic_lcd8.h: 48: Delay(125);
  3482  0286  307D               	movlw	low(07Dh)
  3483                           	
  3484  0287  00AF               	movwf	(?_Delay)
  3485  0288  3000               	movlw	high(07Dh)
  3486  0289  00B0               	movwf	((?_Delay))+1
  3487  028A  120A  118A  27EE   	fcall	_Delay
              120A  118A         
  3488                           	line	49
  3489                           ;pic_lcd8.h: 49: }
  3490  028F                     l3:	
  3491  028F  0008               	return
  3492                           ; =============== function _Lcd8_Write ends ===
                                 ============
  3493                           
  3494                           GLOBAL __end_of_Lcd8_Write
  3495  0290                     	__end_of_Lcd8_Write:
  3496                           	FNSIZE	_Lcd8_Write,1,1
  3497                           	signat	_Lcd8_Write,8312
  3498                           	global	_Baudrate
  3499                           	global	??_Baudrate
  3500                           	global	?_Baudrate
  3501                           
  3502                           ; *************** function _Baudrate **********
                                 *****
  3503                           ; Defined at:
  3504                           ;		line 38 in file "G:\accelerometer contol rob
                                 ot tx\pic_serial.h"
  3505                           ; Parameters:
  3506                           ;		baud        	offs:   0	type: unsigned long 
  3507                           ; Auto variables:
  3508                           ;		None
  3509                           ; Return value:
  3510                           ;		type: void 
  3511                           ;		size: 0
  3512                           ; Registers used:
  3513                           ;		wreg
  3514                           ; Tracked objects:
  3515                           ;		On entry : 300/0
  3516                           ;		On exit  : 0/0
  3517                           ;		Unchanged: 0/0
  3518                           ; Data sizes:
  3519                           ;		Autos:    0
  3520                           ;		Params:   4
  3521                           ;		Temp:     0
  3522                           ;		Total:    4
  3523                           ; This function calls:
  3524                           ;		Nothing
  3525                           ; This function is called by:
  3526                           ;		_Serial_Init
  3527                           ; This function uses a non-reentrant model
  3528                           ; 
  3529                           	psect	text158,local,class=CODE,delta=2
  3530                           	file	"G:\accelerometer contol robot tx\pic_ser
                                 ial.h"
  3531                           	line	38
  3532                           ;pic_serial.h: 37: void Baudrate(unsigned long 
                                 int baud)
  3533                           ;pic_serial.h: 38: {
  3534                           	
  3535  0434                     _Baudrate:	
  3536                           ; Regs used in _Baudrate: [wreg]
  3537                           	line	39
  3538                           ;pic_serial.h: 39: if(baud==110)
  3539                           	
  3540  0434  3000               	movlw	0
  3541  0435  0627               	xorwf	(_Baudrate_baud+3),w
  3542  0436  1D03               	skipz
  3543  0437  2C42               	goto	u5725
  3544  0438  3000               	movlw	0
  3545  0439  0626               	xorwf	(_Baudrate_baud+2),w
  3546  043A  1D03               	skipz
  3547  043B  2C42               	goto	u5725
  3548  043C  3000               	movlw	0
  3549  043D  0625               	xorwf	(_Baudrate_baud+1),w
  3550  043E  1D03               	skipz
  3551  043F  2C42               	goto	u5725
  3552  0440  306E               	movlw	06Eh
  3553  0441  0624               	xorwf	(_Baudrate_baud),w
  3554  0442                     u5725:
  3555  0442  1D03               	skipz
  3556  0443  2C45               	goto	u5721
  3557  0444  2C46               	goto	u5720
  3558  0445                     u5721:
  3559  0445  2C4C               	goto	l27
  3560  0446                     u5720:
  3561                           	line	41
  3562                           ;pic_serial.h: 40: {
  3563                           ;pic_serial.h: 41: SPBRG = 141;
  3564  0446  308D               	movlw	(08Dh)
  3565  0447  1683               	bsf	status, 5	;RP0=1, select bank1
  3566  0448  1303               	bcf	status, 6	;RP2=0, select bank1
  3567                           	
  3568  0449  0099               	movwf	(153)^080h	;volatile
  3569                           	line	42
  3570                           ;pic_serial.h: 42: BRGH = 0;
  3571  044A  1118               	bcf	(1218/8)^080h,(1218)&7
  3572                           	line	43
  3573                           ;pic_serial.h: 43: }
  3574  044B  2CDB               	goto	l28
  3575                           	line	44
  3576                           	
  3577  044C                     l27:	
  3578                           ;pic_serial.h: 44: else if(baud==1200)
  3579                           	
  3580  044C  3000               	movlw	0
  3581  044D  0627               	xorwf	(_Baudrate_baud+3),w
  3582  044E  1D03               	skipz
  3583  044F  2C5A               	goto	u5735
  3584  0450  3000               	movlw	0
  3585  0451  0626               	xorwf	(_Baudrate_baud+2),w
  3586  0452  1D03               	skipz
  3587  0453  2C5A               	goto	u5735
  3588  0454  3004               	movlw	04h
  3589  0455  0625               	xorwf	(_Baudrate_baud+1),w
  3590  0456  1D03               	skipz
  3591  0457  2C5A               	goto	u5735
  3592  0458  30B0               	movlw	0B0h
  3593  0459  0624               	xorwf	(_Baudrate_baud),w
  3594  045A                     u5735:
  3595  045A  1D03               	skipz
  3596  045B  2C5D               	goto	u5731
  3597  045C  2C5E               	goto	u5730
  3598  045D                     u5731:
  3599  045D  2C64               	goto	l29
  3600  045E                     u5730:
  3601                           	line	46
  3602                           ;pic_serial.h: 45: {
  3603                           ;pic_serial.h: 46: SPBRG = 51;
  3604  045E  3033               	movlw	(033h)
  3605  045F  1683               	bsf	status, 5	;RP0=1, select bank1
  3606  0460  1303               	bcf	status, 6	;RP2=0, select bank1
  3607                           	
  3608  0461  0099               	movwf	(153)^080h	;volatile
  3609                           	line	47
  3610                           ;pic_serial.h: 47: BRGH = 0;
  3611  0462  1118               	bcf	(1218/8)^080h,(1218)&7
  3612                           	line	48
  3613                           ;pic_serial.h: 48: }
  3614  0463  2CDB               	goto	l28
  3615                           	line	49
  3616                           	
  3617  0464                     l29:	
  3618                           ;pic_serial.h: 49: else if(baud==2400)
  3619                           	
  3620  0464  3000               	movlw	0
  3621  0465  0627               	xorwf	(_Baudrate_baud+3),w
  3622  0466  1D03               	skipz
  3623  0467  2C72               	goto	u5745
  3624  0468  3000               	movlw	0
  3625  0469  0626               	xorwf	(_Baudrate_baud+2),w
  3626  046A  1D03               	skipz
  3627  046B  2C72               	goto	u5745
  3628  046C  3009               	movlw	09h
  3629  046D  0625               	xorwf	(_Baudrate_baud+1),w
  3630  046E  1D03               	skipz
  3631  046F  2C72               	goto	u5745
  3632  0470  3060               	movlw	060h
  3633  0471  0624               	xorwf	(_Baudrate_baud),w
  3634  0472                     u5745:
  3635  0472  1D03               	skipz
  3636  0473  2C75               	goto	u5741
  3637  0474  2C76               	goto	u5740
  3638  0475                     u5741:
  3639  0475  2C7C               	goto	l31
  3640  0476                     u5740:
  3641                           	line	51
  3642                           ;pic_serial.h: 50: {
  3643                           ;pic_serial.h: 51: SPBRG = 25;
  3644  0476  3019               	movlw	(019h)
  3645  0477  1683               	bsf	status, 5	;RP0=1, select bank1
  3646  0478  1303               	bcf	status, 6	;RP2=0, select bank1
  3647                           	
  3648  0479  0099               	movwf	(153)^080h	;volatile
  3649                           	line	52
  3650                           ;pic_serial.h: 52: BRGH = 0;
  3651  047A  1118               	bcf	(1218/8)^080h,(1218)&7
  3652                           	line	53
  3653                           ;pic_serial.h: 53: }
  3654  047B  2CDB               	goto	l28
  3655                           	line	54
  3656                           	
  3657  047C                     l31:	
  3658                           ;pic_serial.h: 54: else if(baud==4800)
  3659                           	
  3660  047C  3000               	movlw	0
  3661  047D  0627               	xorwf	(_Baudrate_baud+3),w
  3662  047E  1D03               	skipz
  3663  047F  2C8A               	goto	u5755
  3664  0480  3000               	movlw	0
  3665  0481  0626               	xorwf	(_Baudrate_baud+2),w
  3666  0482  1D03               	skipz
  3667  0483  2C8A               	goto	u5755
  3668  0484  3012               	movlw	012h
  3669  0485  0625               	xorwf	(_Baudrate_baud+1),w
  3670  0486  1D03               	skipz
  3671  0487  2C8A               	goto	u5755
  3672  0488  30C0               	movlw	0C0h
  3673  0489  0624               	xorwf	(_Baudrate_baud),w
  3674  048A                     u5755:
  3675  048A  1D03               	skipz
  3676  048B  2C8D               	goto	u5751
  3677  048C  2C8E               	goto	u5750
  3678  048D                     u5751:
  3679  048D  2C94               	goto	l33
  3680  048E                     u5750:
  3681                           	line	56
  3682                           ;pic_serial.h: 55: {
  3683                           ;pic_serial.h: 56: SPBRG = 12;
  3684  048E  300C               	movlw	(0Ch)
  3685  048F  1683               	bsf	status, 5	;RP0=1, select bank1
  3686  0490  1303               	bcf	status, 6	;RP2=0, select bank1
  3687                           	
  3688  0491  0099               	movwf	(153)^080h	;volatile
  3689                           	line	57
  3690                           ;pic_serial.h: 57: BRGH = 0;
  3691  0492  1118               	bcf	(1218/8)^080h,(1218)&7
  3692                           	line	58
  3693                           ;pic_serial.h: 58: }
  3694  0493  2CDB               	goto	l28
  3695                           	line	59
  3696                           	
  3697  0494                     l33:	
  3698                           ;pic_serial.h: 59: else if(baud==9600)
  3699                           	
  3700  0494  3000               	movlw	0
  3701  0495  0627               	xorwf	(_Baudrate_baud+3),w
  3702  0496  1D03               	skipz
  3703  0497  2CA2               	goto	u5765
  3704  0498  3000               	movlw	0
  3705  0499  0626               	xorwf	(_Baudrate_baud+2),w
  3706  049A  1D03               	skipz
  3707  049B  2CA2               	goto	u5765
  3708  049C  3025               	movlw	025h
  3709  049D  0625               	xorwf	(_Baudrate_baud+1),w
  3710  049E  1D03               	skipz
  3711  049F  2CA2               	goto	u5765
  3712  04A0  3080               	movlw	080h
  3713  04A1  0624               	xorwf	(_Baudrate_baud),w
  3714  04A2                     u5765:
  3715  04A2  1D03               	skipz
  3716  04A3  2CA5               	goto	u5761
  3717  04A4  2CA6               	goto	u5760
  3718  04A5                     u5761:
  3719  04A5  2CAC               	goto	l35
  3720  04A6                     u5760:
  3721                           	line	61
  3722                           ;pic_serial.h: 60: {
  3723                           ;pic_serial.h: 61: SPBRG = 25;
  3724  04A6  3019               	movlw	(019h)
  3725  04A7  1683               	bsf	status, 5	;RP0=1, select bank1
  3726  04A8  1303               	bcf	status, 6	;RP2=0, select bank1
  3727                           	
  3728  04A9  0099               	movwf	(153)^080h	;volatile
  3729                           	line	62
  3730                           ;pic_serial.h: 62: BRGH = 1;
  3731  04AA  1518               	bsf	(1218/8)^080h,(1218)&7
  3732                           	line	63
  3733                           ;pic_serial.h: 63: }
  3734  04AB  2CDB               	goto	l28
  3735                           	line	64
  3736                           	
  3737  04AC                     l35:	
  3738                           ;pic_serial.h: 64: else if(baud==57600)
  3739                           	
  3740  04AC  3000               	movlw	0
  3741  04AD  0627               	xorwf	(_Baudrate_baud+3),w
  3742  04AE  1D03               	skipz
  3743  04AF  2CBA               	goto	u5775
  3744  04B0  3000               	movlw	0
  3745  04B1  0626               	xorwf	(_Baudrate_baud+2),w
  3746  04B2  1D03               	skipz
  3747  04B3  2CBA               	goto	u5775
  3748  04B4  30E1               	movlw	0E1h
  3749  04B5  0625               	xorwf	(_Baudrate_baud+1),w
  3750  04B6  1D03               	skipz
  3751  04B7  2CBA               	goto	u5775
  3752  04B8  3000               	movlw	0
  3753  04B9  0624               	xorwf	(_Baudrate_baud),w
  3754  04BA                     u5775:
  3755  04BA  1D03               	skipz
  3756  04BB  2CBD               	goto	u5771
  3757  04BC  2CBE               	goto	u5770
  3758  04BD                     u5771:
  3759  04BD  2CC4               	goto	l37
  3760  04BE                     u5770:
  3761                           	line	66
  3762                           ;pic_serial.h: 65: {
  3763                           ;pic_serial.h: 66: SPBRG = 20;
  3764  04BE  3014               	movlw	(014h)
  3765  04BF  1683               	bsf	status, 5	;RP0=1, select bank1
  3766  04C0  1303               	bcf	status, 6	;RP2=0, select bank1
  3767                           	
  3768  04C1  0099               	movwf	(153)^080h	;volatile
  3769                           	line	67
  3770                           ;pic_serial.h: 67: BRGH = 1;
  3771  04C2  1518               	bsf	(1218/8)^080h,(1218)&7
  3772                           	line	68
  3773                           ;pic_serial.h: 68: }
  3774  04C3  2CDB               	goto	l28
  3775                           	line	69
  3776                           	
  3777  04C4                     l37:	
  3778                           ;pic_serial.h: 69: else if(baud==115200)
  3779                           	
  3780  04C4  3000               	movlw	0
  3781  04C5  0627               	xorwf	(_Baudrate_baud+3),w
  3782  04C6  1D03               	skipz
  3783  04C7  2CD2               	goto	u5785
  3784  04C8  3001               	movlw	01h
  3785  04C9  0626               	xorwf	(_Baudrate_baud+2),w
  3786  04CA  1D03               	skipz
  3787  04CB  2CD2               	goto	u5785
  3788  04CC  30C2               	movlw	0C2h
  3789  04CD  0625               	xorwf	(_Baudrate_baud+1),w
  3790  04CE  1D03               	skipz
  3791  04CF  2CD2               	goto	u5785
  3792  04D0  3000               	movlw	0
  3793  04D1  0624               	xorwf	(_Baudrate_baud),w
  3794  04D2                     u5785:
  3795  04D2  1D03               	skipz
  3796  04D3  2CD5               	goto	u5781
  3797  04D4  2CD6               	goto	u5780
  3798  04D5                     u5781:
  3799  04D5  2CDB               	goto	l28
  3800  04D6                     u5780:
  3801                           	line	71
  3802                           ;pic_serial.h: 70: {
  3803                           ;pic_serial.h: 71: SPBRG = 10;
  3804  04D6  300A               	movlw	(0Ah)
  3805  04D7  1683               	bsf	status, 5	;RP0=1, select bank1
  3806  04D8  1303               	bcf	status, 6	;RP2=0, select bank1
  3807                           	
  3808  04D9  0099               	movwf	(153)^080h	;volatile
  3809                           	line	72
  3810                           ;pic_serial.h: 72: BRGH = 1;
  3811  04DA  1518               	bsf	(1218/8)^080h,(1218)&7
  3812                           	line	73
  3813                           	
  3814  04DB                     l39:	
  3815                           	line	74
  3816                           	
  3817  04DB                     l38:	
  3818                           	
  3819  04DB                     l36:	
  3820                           	
  3821  04DB                     l34:	
  3822                           	
  3823  04DB                     l32:	
  3824                           	
  3825  04DB                     l30:	
  3826                           	
  3827  04DB                     l28:	
  3828                           ;pic_serial.h: 73: }
  3829                           ;pic_serial.h: 74: }
  3830  04DB                     l26:	
  3831  04DB  0008               	return
  3832                           ; =============== function _Baudrate ends =====
                                 ==========
  3833                           
  3834                           GLOBAL __end_of_Baudrate
  3835  04DC                     	__end_of_Baudrate:
  3836                           	FNSIZE	_Baudrate,0,4
  3837                           	signat	_Baudrate,4216
  3838                           	global	_Lcd8_Command
  3839                           	global	??_Lcd8_Command
  3840                           	global	?_Lcd8_Command
  3841                           
  3842                           ; *************** function _Lcd8_Command ******
                                 *********
  3843                           ; Defined at:
  3844                           ;		line 30 in file "G:\accelerometer contol rob
                                 ot tx\pic_lcd8.h"
  3845                           ; Parameters:
  3846                           ;		com         	reg:   wr	type: unsigned char 
  3847                           ; Auto variables:
  3848                           ;		com         	       	type: unsigned char 
  3849                           ; Return value:
  3850                           ;		type: void 
  3851                           ;		size: 0
  3852                           ; Registers used:
  3853                           ;		wreg, status,2, status,0, pclath, cstack
  3854                           ; Tracked objects:
  3855                           ;		On entry : 0/0
  3856                           ;		On exit  : 0/0
  3857                           ;		Unchanged: 0/0
  3858                           ; Data sizes:
  3859                           ;		Autos:    1
  3860                           ;		Params:   0
  3861                           ;		Temp:     0
  3862                           ;		Total:    1
  3863                           ; This function calls:
  3864                           ;		_Delay
  3865                           ; This function is called by:
  3866                           ;		_Lcd8_Init
  3867                           ;		_Lcd8_Write
  3868                           ;		_main
  3869                           ; This function uses a non-reentrant model
  3870                           ; 
  3871                           	psect	text159,local,class=CODE,delta=2
  3872                           	file	"G:\accelerometer contol robot tx\pic_lcd
                                 8.h"
  3873                           	line	30
  3874                           ;pic_lcd8.h: 29: void Lcd8_Command(unsigned cha
                                 r com)
  3875                           ;pic_lcd8.h: 30: {
  3876                           	
  3877  022D                     _Lcd8_Command:	
  3878                           ; Regs used in _Lcd8_Command: [wreg+status,2+st
                                 atus,0+pclath+cstack]
  3879                           ;_Lcd8_Command_com stored from wreg
  3880  022D  1283               	bcf	status, 5	;RP0=0, select bank0
  3881  022E  1303               	bcf	status, 6	;RP2=0, select bank0
  3882                           	
  3883  022F  00AE               	movwf	(_Lcd8_Command_com)
  3884                           	line	31
  3885                           ;pic_lcd8.h: 31: PORTD=com;
  3886                           	
  3887  0230  082E               	movf	(_Lcd8_Command_com),w
  3888  0231  1383               	bcf	status, 7	;select IRP bank0
  3889                           	
  3890                           	
  3891  0232  0088               	movwf	(8)	;volatile
  3892                           	line	32
  3893                           ;pic_lcd8.h: 32: Lcd_en=1;
  3894  0233  1687               	bsf	(61/8),(61)&7
  3895                           	line	33
  3896                           ;pic_lcd8.h: 33: Lcd_rs=0;
  3897  0234  1207               	bcf	(60/8),(60)&7
  3898                           	line	34
  3899                           ;pic_lcd8.h: 34: Delay(125);
  3900  0235  307D               	movlw	low(07Dh)
  3901                           	
  3902  0236  00AF               	movwf	(?_Delay)
  3903  0237  3000               	movlw	high(07Dh)
  3904  0238  00B0               	movwf	((?_Delay))+1
  3905  0239  120A  118A  27EE   	fcall	_Delay
              120A  118A         
  3906                           	line	35
  3907                           ;pic_lcd8.h: 35: Lcd_en=0;
  3908  023E  1283               	bcf	status, 5	;RP0=0, select bank0
  3909  023F  1303               	bcf	status, 6	;RP2=0, select bank0
  3910  0240  1287               	bcf	(61/8),(61)&7
  3911                           	line	36
  3912                           ;pic_lcd8.h: 36: Delay(125);
  3913  0241  307D               	movlw	low(07Dh)
  3914                           	
  3915  0242  00AF               	movwf	(?_Delay)
  3916  0243  3000               	movlw	high(07Dh)
  3917  0244  00B0               	movwf	((?_Delay))+1
  3918  0245  120A  118A  27EE   	fcall	_Delay
              120A  118A         
  3919                           	line	37
  3920                           ;pic_lcd8.h: 37: }
  3921  024A                     l2:	
  3922  024A  0008               	return
  3923                           ; =============== function _Lcd8_Command ends =
                                 ==============
  3924                           
  3925                           GLOBAL __end_of_Lcd8_Command
  3926  024B                     	__end_of_Lcd8_Command:
  3927                           	FNSIZE	_Lcd8_Command,1,0
  3928                           	signat	_Lcd8_Command,4216
  3929                           	global	_Delay
  3930                           	global	??_Delay
  3931                           	global	?_Delay
  3932                           
  3933                           ; *************** function _Delay *************
                                 **
  3934                           ; Defined at:
  3935                           ;		line 107 in file "G:\accelerometer contol ro
                                 bot tx\pic_lcd8.h"
  3936                           ; Parameters:
  3937                           ;		del         	offs:   0	type: unsigned int 
  3938                           ; Auto variables:
  3939                           ;		None
  3940                           ; Return value:
  3941                           ;		type: void 
  3942                           ;		size: 0
  3943                           ; Registers used:
  3944                           ;		wreg
  3945                           ; Tracked objects:
  3946                           ;		On entry : 300/0
  3947                           ;		On exit  : 0/0
  3948                           ;		Unchanged: 0/0
  3949                           ; Data sizes:
  3950                           ;		Autos:    0
  3951                           ;		Params:   2
  3952                           ;		Temp:     0
  3953                           ;		Total:    2
  3954                           ; This function calls:
  3955                           ;		Nothing
  3956                           ; This function is called by:
  3957                           ;		_Lcd8_Command
  3958                           ;		_Lcd8_Write
  3959                           ;		_main
  3960                           ; This function uses a non-reentrant model
  3961                           ; 
  3962                           	psect	text160,local,class=CODE,delta=2
  3963                           	file	"G:\accelerometer contol robot tx\pic_lcd
                                 8.h"
  3964                           	line	107
  3965                           ;pic_lcd8.h: 106: void Delay(unsigned int del)
  3966                           ;pic_lcd8.h: 107: {
  3967                           	
  3968  07EE                     _Delay:	
  3969                           ; Regs used in _Delay: [wreg]
  3970                           	line	108
  3971                           ;pic_lcd8.h: 108: while(del--);
  3972  07EE  2FEF               	goto	l13
  3973                           	
  3974  07EF                     l13:	
  3975                           	
  3976  07EF  3001               	movlw	low(01h)
  3977  07F0  02AF               	subwf	(_Delay_del),f
  3978  07F1  3000               	movlw	high(01h)
  3979  07F2  1C03               	skipc
  3980  07F3  03B0               	decf	(_Delay_del+1),f
  3981  07F4  02B0               	subwf	(_Delay_del+1),f
  3982  07F5  30FF               	movlw	high(0FFFFh)
  3983  07F6  0630               	xorwf	((_Delay_del+1))&07fh,w
  3984  07F7  1D03               	skipz
  3985  07F8  2FFB               	goto	u5795
  3986  07F9  30FF               	movlw	low(0FFFFh)
  3987  07FA  062F               	xorwf	((_Delay_del))&07fh,w
  3988  07FB                     u5795:
  3989                           
  3990  07FB  1D03               	skipz
  3991  07FC  2FFE               	goto	u5791
  3992  07FD  2FFF               	goto	u5790
  3993  07FE                     u5791:
  3994  07FE  2FEF               	goto	l13
  3995  07FF                     u5790:
  3996                           	
  3997  07FF                     l15:	
  3998                           	line	109
  3999                           ;pic_lcd8.h: 109: }
  4000  07FF                     l12:	
  4001  07FF  0008               	return
  4002                           ; =============== function _Delay ends ========
                                 =======
  4003                           
  4004                           GLOBAL __end_of_Delay
  4005  0800                     	__end_of_Delay:
  4006                           	FNSIZE	_Delay,0,2
  4007                           	signat	_Delay,4216
  4008                           	FNCALL	_main,_Lcd8_Init
  4009                           	FNCALL	_main,_Delay
  4010                           	FNCALL	_main,_Lcd8_Display
  4011                           	FNCALL	_main,_Serial_Init
  4012                           	FNCALL	_main,_Receive
  4013                           	FNCALL	_main,_Lcd8_Command
  4014                           	FNCALL	_main,_Adc8_Cha
  4015                           	FNCALL	_main,_Lcd8_Decimal3
  4016                           	FNCALL	_Lcd8_Decimal3,___awdiv
  4017                           	FNCALL	_Lcd8_Decimal3,___awmod
  4018                           	FNCALL	_Lcd8_Decimal3,___lwdiv
  4019                           	FNCALL	_Lcd8_Decimal3,___lwmod
  4020                           	FNCALL	_Lcd8_Decimal3,_Lcd8_Write
  4021                           	FNCALL	_Serial_Init,_Baudrate
  4022                           	FNCALL	_Adc8_Cha,___lwdiv
  4023                           	FNCALL	_Lcd8_Display,_Lcd8_Write
  4024                           	FNCALL	_Lcd8_Init,_Lcd8_Command
  4025                           	FNCALL	_Lcd8_Write,_Lcd8_Command
  4026                           	FNCALL	_Lcd8_Write,_Delay
  4027                           	FNCALL	_Lcd8_Command,_Delay
  4028                           	FNROOT	_main
  4029                           	global	_c
  4030                           	global	_c
  4031                           	psect	rbss_1,class=BANK1,space=1
  4032                           
  4033                           	DABS	1,225,5	;_c
  4034  0000                     	_c	set	0xE1
  4035                           
  4036                           	global	_add
  4037                           	global	_add
  4038                           
  4039                           	DABS	1,230,2	;_add
  4040  0000                     	_add	set	0xE6
  4041                           
  4042                           	global	_cu
  4043                           	global	_cu
  4044                           
  4045                           	DABS	1,232,1	;_cu
  4046  0000                     	_cu	set	0xE8
  4047                           
  4048                           	global	_qq
  4049                           	global	_qq
  4050                           
  4051                           	DABS	1,233,1	;_qq
  4052  0000                     	_qq	set	0xE9
  4053                           
  4054                           	psect	idata,class=CODE,delta=2,space=0
  4055                           	file	"G:\accelerometer contol robot tx\CEP0896
                                 .C"
  4056                           	line	15
  4057                           
  4058                           ;initializer for _c
  4059  078A  3431               	retlw	031h
  4060  078B  3432               	retlw	032h
  4061  078C  3433               	retlw	033h
  4062  078D  3434               	retlw	034h
  4063  078E  3400               	retlw	0
  4064                           	line	17
  4065                           
  4066                           ;initializer for _add
  4067  078F  34C0               	retlw	0C0h
  4068  0790  3400               	retlw	0
  4069                           	line	14
  4070                           
  4071                           ;initializer for _cu
  4072  0791  34C0               	retlw	0C0h
  4073                           
  4074                           ;initializer for _qq
  4075  0792  3401               	retlw	01h
  4076                           	psect	strings,class=CODE,delta=2,reloc=256
  4077                           	global	stringdir,stringtab,__stringbase,string
                                 jmp
  4078  0700                     stringtab:
  4079  0700  00FE               	movwf	(btemp)&07Fh
  4080  0701  1FFE               	btfss	(btemp)&07Fh,7
  4081  0702  2F08               	goto	stringcode
  4082  0703  1383               	bcf	status,7
  4083  0704  187E               	btfsc	btemp&7Fh,0
  4084  0705  1783               	bsf	status,7
  4085  0706  0800               	movf	indf,w
  4086  0707  0008               	return
  4087  0708                     stringcode:
  4088  0708  0804               	movf	fsr,w
  4089  0709                     stringdir:
  4090  0709  00FE               movwf btemp&07Fh
  4091  070A  3007               movlw high(stringdir)
  4092  070B  008A               movwf pclath
  4093  070C  087E               movf btemp&07Fh,w
  4094  070D                     stringjmp:
  4095  070D  0782               	addwf pc
  4096  070E                     __stringbase:
  4097  070E  3400               	retlw	0
  4098                           	global	_val1
  4099                           	global	_val1
  4100                           	psect	rbss_0,class=BANK0,space=1
  4101                           
  4102                           	DABS	1,62,12	;_val1
  4103  0000                     	_val1	set	0x3E
  4104                           
  4105                           	global	_f
  4106                           	global	_f
  4107                           
  4108                           	DABS	1,74,10	;_f
  4109  0000                     	_f	set	0x4A
  4110                           
  4111                           	global	_a
  4112                           	global	_a
  4113                           
  4114                           	DABS	1,58,2	;_a
  4115  0000                     	_a	set	0x3A
  4116                           
  4117                           	global	_aa
  4118                           	global	_aa
  4119                           
  4120                           	DABS	1,60,2	;_aa
  4121  0000                     	_aa	set	0x3C
  4122                           
  4123                           	global	_adc_hbit
  4124                           
  4125                           	DABS	1,88,2	;_adc_hbit
  4126  0000                     	_adc_hbit	set	0x58
  4127                           
  4128                           	global	_adc_lbit
  4129                           
  4130                           	DABS	1,90,2	;_adc_lbit
  4131  0000                     	_adc_lbit	set	0x5A
  4132                           
  4133                           	global	_adc_temp
  4134                           
  4135                           	DABS	1,84,2	;_adc_temp
  4136  0000                     	_adc_temp	set	0x54
  4137                           
  4138                           	global	_adc_temp0
  4139                           
  4140                           	DABS	1,86,2	;_adc_temp0
  4141  0000                     	_adc_temp0	set	0x56
  4142                           
  4143                           	global	_adc_val1
  4144                           	psect	rbss_1
  4145                           
  4146                           	DABS	1,238,2	;_adc_val1
  4147  0000                     	_adc_val1	set	0xEE
  4148                           
  4149                           	global	_b
  4150                           	global	_b
  4151                           	psect	rbss_0
  4152                           
  4153                           	DABS	1,106,2	;_b
  4154  0000                     	_b	set	0x6A
  4155                           
  4156                           	global	_count
  4157                           	global	_count
  4158                           	psect	rbss_1
  4159                           
  4160                           	DABS	1,234,2	;_count
  4161  0000                     	_count	set	0xEA
  4162                           
  4163                           	global	_hb
  4164                           	global	_hb
  4165                           
  4166                           	DABS	1,236,2	;_hb
  4167  0000                     	_hb	set	0xEC
  4168                           
  4169                           	global	_i
  4170                           	global	_i
  4171                           	psect	rbss_0
  4172                           
  4173                           	DABS	1,54,2	;_i
  4174  0000                     	_i	set	0x36
  4175                           
  4176                           	global	_n1
  4177                           	global	_n1
  4178                           
  4179                           	DABS	1,56,2	;_n1
  4180  0000                     	_n1	set	0x38
  4181                           
  4182                           	global	_n2
  4183                           	global	_n2
  4184                           
  4185                           	DABS	1,108,2	;_n2
  4186  0000                     	_n2	set	0x6C
  4187                           
  4188                           	global	_n3
  4189                           	global	_n3
  4190                           
  4191                           	DABS	1,110,2	;_n3
  4192  0000                     	_n3	set	0x6E
  4193                           
  4194                           	global	_pres
  4195                           	global	_pres
  4196                           
  4197                           	DABS	1,92,2	;_pres
  4198  0000                     	_pres	set	0x5C
  4199                           
  4200                           	global	_sec
  4201                           	global	_sec
  4202                           	psect	common,class=COMMON,space=1
  4203                           
  4204                           	DABS	1,122,2	;_sec
  4205  0000                     	_sec	set	0x7A
  4206                           
  4207                           	global	_shb
  4208                           	global	_shb
  4209                           
  4210                           	DABS	1,124,2	;_shb
  4211  0000                     	_shb	set	0x7C
  4212                           
  4213                           	global	_sp
  4214                           	global	_sp
  4215                           	psect	rbss_0
  4216                           
  4217                           	DABS	1,101,2	;_sp
  4218  0000                     	_sp	set	0x65
  4219                           
  4220                           	global	_ss
  4221                           	global	_ss
  4222                           	psect	common
  4223                           
  4224                           	DABS	1,120,2	;_ss
  4225  0000                     	_ss	set	0x78
  4226                           
  4227                           	global	_st
  4228                           	global	_st
  4229                           
  4230                           	DABS	1,114,2	;_st
  4231  0000                     	_st	set	0x72
  4232                           
  4233                           	global	_temp
  4234                           	global	_temp
  4235                           
  4236                           	DABS	1,116,2	;_temp
  4237  0000                     	_temp	set	0x74
  4238                           
  4239                           	global	_x
  4240                           
  4241                           	DABS	1,118,2	;_x
  4242  0000                     	_x	set	0x76
  4243                           
  4244                           	global	_y
  4245                           
  4246                           	DABS	1,112,2	;_y
  4247  0000                     	_y	set	0x70
  4248                           
  4249                           	global	_z
  4250                           	psect	rbss_0
  4251                           
  4252                           	DABS	1,103,2	;_z
  4253  0000                     	_z	set	0x67
  4254                           
  4255                           	global	_adc_del
  4256                           
  4257                           	DABS	1,96,1	;_adc_del
  4258  0000                     	_adc_del	set	0x60
  4259                           
  4260                           	global	_adc_j
  4261                           
  4262                           	DABS	1,94,1	;_adc_j
  4263  0000                     	_adc_j	set	0x5E
  4264                           
  4265                           	global	_adc_val
  4266                           
  4267                           	DABS	1,95,1	;_adc_val
  4268  0000                     	_adc_val	set	0x5F
  4269                           
  4270                           	global	_j
  4271                           	global	_j
  4272                           
  4273                           	DABS	1,99,1	;_j
  4274  0000                     	_j	set	0x63
  4275                           
  4276                           	global	_kc
  4277                           	global	_kc
  4278                           
  4279                           	DABS	1,100,1	;_kc
  4280  0000                     	_kc	set	0x64
  4281                           
  4282                           	global	_s
  4283                           	global	_s
  4284                           
  4285                           	DABS	1,97,1	;_s
  4286  0000                     	_s	set	0x61
  4287                           
  4288                           	global	_u
  4289                           	global	_u
  4290                           
  4291                           	DABS	1,98,1	;_u
  4292  0000                     	_u	set	0x62
  4293                           
  4294                           	global	_ADCON0
  4295  0000                     	_ADCON0	set	0x1F
  4296                           
  4297                           	global	_ADCON1
  4298                           	global	_ADCON1
  4299  0000                     	_ADCON1	set	0x9F
  4300                           
  4301                           	global	_ADRESH
  4302  0000                     	_ADRESH	set	0x1E
  4303                           
  4304                           	global	_ADRESL
  4305  0000                     	_ADRESL	set	0x9E
  4306                           
  4307                           	global	_CCP1CON
  4308                           	global	_CCP1CON
  4309  0000                     	_CCP1CON	set	0x17
  4310                           
  4311                           	global	_CCP2CON
  4312                           	global	_CCP2CON
  4313  0000                     	_CCP2CON	set	0x1D
  4314                           
  4315                           	global	_CCPR1H
  4316                           	global	_CCPR1H
  4317  0000                     	_CCPR1H	set	0x16
  4318                           
  4319                           	global	_CCPR1L
  4320                           	global	_CCPR1L
  4321  0000                     	_CCPR1L	set	0x15
  4322                           
  4323                           	global	_CCPR2H
  4324                           	global	_CCPR2H
  4325  0000                     	_CCPR2H	set	0x1C
  4326                           
  4327                           	global	_CCPR2L
  4328                           	global	_CCPR2L
  4329  0000                     	_CCPR2L	set	0x1B
  4330                           
  4331                           	global	_CMCON
  4332                           	global	_CMCON
  4333  0000                     	_CMCON	set	0x9C
  4334                           
  4335                           	global	_CVRCON
  4336                           	global	_CVRCON
  4337  0000                     	_CVRCON	set	0x9D
  4338                           
  4339                           	global	_EEADR
  4340                           	global	_EEADR
  4341  0000                     	_EEADR	set	0x10D
  4342                           
  4343                           	global	_EEADRH
  4344                           	global	_EEADRH
  4345  0000                     	_EEADRH	set	0x10F
  4346                           
  4347                           	global	_EEADRL
  4348                           	global	_EEADRL
  4349  0000                     	_EEADRL	set	0x10D
  4350                           
  4351                           	global	_EECON1
  4352                           	global	_EECON1
  4353  0000                     	_EECON1	set	0x18C
  4354                           
  4355                           	global	_EECON2
  4356                           	global	_EECON2
  4357  0000                     	_EECON2	set	0x18D
  4358                           
  4359                           	global	_EEDATA
  4360                           	global	_EEDATA
  4361  0000                     	_EEDATA	set	0x10C
  4362                           
  4363                           	global	_EEDATH
  4364                           	global	_EEDATH
  4365  0000                     	_EEDATH	set	0x10E
  4366                           
  4367                           	global	_FSR
  4368                           	global	_FSR
  4369  0000                     	_FSR	set	0x4
  4370                           
  4371                           	global	_INDF
  4372                           	global	_INDF
  4373  0000                     	_INDF	set	0x0
  4374                           
  4375                           	global	_INTCON
  4376                           	global	_INTCON
  4377  0000                     	_INTCON	set	0xB
  4378                           
  4379                           	global	_OPTION
  4380                           	global	_OPTION
  4381  0000                     	_OPTION	set	0x81
  4382                           
  4383                           	global	_PCL
  4384                           	global	_PCL
  4385  0000                     	_PCL	set	0x2
  4386                           
  4387                           	global	_PCLATH
  4388                           	global	_PCLATH
  4389  0000                     	_PCLATH	set	0xA
  4390                           
  4391                           	global	_PCON
  4392                           	global	_PCON
  4393  0000                     	_PCON	set	0x8E
  4394                           
  4395                           	global	_PIE1
  4396                           	global	_PIE1
  4397  0000                     	_PIE1	set	0x8C
  4398                           
  4399                           	global	_PIE2
  4400                           	global	_PIE2
  4401  0000                     	_PIE2	set	0x8D
  4402                           
  4403                           	global	_PIR1
  4404                           	global	_PIR1
  4405  0000                     	_PIR1	set	0xC
  4406                           
  4407                           	global	_PIR2
  4408                           	global	_PIR2
  4409  0000                     	_PIR2	set	0xD
  4410                           
  4411                           	global	_PORTA
  4412                           	global	_PORTA
  4413  0000                     	_PORTA	set	0x5
  4414                           
  4415                           	global	_PORTB
  4416                           	global	_PORTB
  4417  0000                     	_PORTB	set	0x6
  4418                           
  4419                           	global	_PORTC
  4420                           	global	_PORTC
  4421  0000                     	_PORTC	set	0x7
  4422                           
  4423                           	global	_PORTD
  4424  0000                     	_PORTD	set	0x8
  4425                           
  4426                           	global	_PORTE
  4427                           	global	_PORTE
  4428  0000                     	_PORTE	set	0x9
  4429                           
  4430                           	global	_PR2
  4431                           	global	_PR2
  4432  0000                     	_PR2	set	0x92
  4433                           
  4434                           	global	_RCREG
  4435                           	global	_RCREG
  4436  0000                     	_RCREG	set	0x1A
  4437                           
  4438                           	global	_RCSTA
  4439                           	global	_RCSTA
  4440  0000                     	_RCSTA	set	0x18
  4441                           
  4442                           	global	_SPBRG
  4443  0000                     	_SPBRG	set	0x99
  4444                           
  4445                           	global	_SSPADD
  4446                           	global	_SSPADD
  4447  0000                     	_SSPADD	set	0x93
  4448                           
  4449                           	global	_SSPBUF
  4450                           	global	_SSPBUF
  4451  0000                     	_SSPBUF	set	0x13
  4452                           
  4453                           	global	_SSPCON
  4454                           	global	_SSPCON
  4455  0000                     	_SSPCON	set	0x14
  4456                           
  4457                           	global	_SSPCON2
  4458                           	global	_SSPCON2
  4459  0000                     	_SSPCON2	set	0x91
  4460                           
  4461                           	global	_SSPSTAT
  4462                           	global	_SSPSTAT
  4463  0000                     	_SSPSTAT	set	0x94
  4464                           
  4465                           	global	_STATUS
  4466                           	global	_STATUS
  4467  0000                     	_STATUS	set	0x3
  4468                           
  4469                           	global	_T1CON
  4470                           	global	_T1CON
  4471  0000                     	_T1CON	set	0x10
  4472                           
  4473                           	global	_T2CON
  4474                           	global	_T2CON
  4475  0000                     	_T2CON	set	0x12
  4476                           
  4477                           	global	_TMR0
  4478                           	global	_TMR0
  4479  0000                     	_TMR0	set	0x1
  4480                           
  4481                           	global	_TMR1H
  4482                           	global	_TMR1H
  4483  0000                     	_TMR1H	set	0xF
  4484                           
  4485                           	global	_TMR1L
  4486                           	global	_TMR1L
  4487  0000                     	_TMR1L	set	0xE
  4488                           
  4489                           	global	_TMR2
  4490                           	global	_TMR2
  4491  0000                     	_TMR2	set	0x11
  4492                           
  4493                           	global	_TRISA
  4494  0000                     	_TRISA	set	0x85
  4495                           
  4496                           	global	_TRISB
  4497  0000                     	_TRISB	set	0x86
  4498                           
  4499                           	global	_TRISC
  4500  0000                     	_TRISC	set	0x87
  4501                           
  4502                           	global	_TRISD
  4503  0000                     	_TRISD	set	0x88
  4504                           
  4505                           	global	_TRISE
  4506                           	global	_TRISE
  4507  0000                     	_TRISE	set	0x89
  4508                           
  4509                           	global	_TXREG
  4510  0000                     	_TXREG	set	0x19
  4511                           
  4512                           	global	_TXSTA
  4513                           	global	_TXSTA
  4514  0000                     	_TXSTA	set	0x98
  4515                           
  4516                           	global	_ACKDT
  4517                           	global	_ACKDT
  4518  0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  4519                           
  4520                           	global	_ACKEN
  4521                           	global	_ACKEN
  4522  0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  4523                           
  4524                           	global	_ACKSTAT
  4525                           	global	_ACKSTAT
  4526  0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  4527                           
  4528                           	global	_ADCS0
  4529                           	global	_ADCS0
  4530  0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  4531                           
  4532                           	global	_ADCS1
  4533                           	global	_ADCS1
  4534  0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  4535                           
  4536                           	global	_ADCS2
  4537                           	global	_ADCS2
  4538  0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  4539                           
  4540                           	global	_ADDEN
  4541                           	global	_ADDEN
  4542  0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  4543                           
  4544                           	global	_ADFM
  4545  0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  4546                           
  4547                           	global	_ADGO
  4548                           	global	_ADGO
  4549  0000                     	_ADGO	set	0xFA	;byte address: 0x1F
  4550                           
  4551                           	global	_ADIE
  4552                           	global	_ADIE
  4553  0000                     	_ADIE	set	0x466	;byte address: 0x8C
  4554                           
  4555                           	global	_ADIF
  4556                           	global	_ADIF
  4557  0000                     	_ADIF	set	0x66	;byte address: 0xC
  4558                           
  4559                           	global	_ADON
  4560  0000                     	_ADON	set	0xF8	;byte address: 0x1F
  4561                           
  4562                           	global	_BCLIE
  4563                           	global	_BCLIE
  4564  0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  4565                           
  4566                           	global	_BCLIF
  4567                           	global	_BCLIF
  4568  0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  4569                           
  4570                           	global	_BF
  4571                           	global	_BF
  4572  0000                     	_BF	set	0x4A0	;byte address: 0x94
  4573                           
  4574                           	global	_BOR
  4575                           	global	_BOR
  4576  0000                     	_BOR	set	0x470	;byte address: 0x8E
  4577                           
  4578                           	global	_BRGH
  4579  0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  4580                           
  4581                           	global	_C1INV
  4582                           	global	_C1INV
  4583  0000                     	_C1INV	set	0x4E4	;byte address: 0x9C
  4584                           
  4585                           	global	_C1OUT
  4586                           	global	_C1OUT
  4587  0000                     	_C1OUT	set	0x4E6	;byte address: 0x9C
  4588                           
  4589                           	global	_C2INV
  4590                           	global	_C2INV
  4591  0000                     	_C2INV	set	0x4E5	;byte address: 0x9C
  4592                           
  4593                           	global	_C2OUT
  4594                           	global	_C2OUT
  4595  0000                     	_C2OUT	set	0x4E7	;byte address: 0x9C
  4596                           
  4597                           	global	_CARRY
  4598                           	global	_CARRY
  4599  0000                     	_CARRY	set	0x18	;byte address: 0x3
  4600                           
  4601                           	global	_CCP1IE
  4602                           	global	_CCP1IE
  4603  0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  4604                           
  4605                           	global	_CCP1IF
  4606                           	global	_CCP1IF
  4607  0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  4608                           
  4609                           	global	_CCP1M0
  4610                           	global	_CCP1M0
  4611  0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  4612                           
  4613                           	global	_CCP1M1
  4614                           	global	_CCP1M1
  4615  0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  4616                           
  4617                           	global	_CCP1M2
  4618                           	global	_CCP1M2
  4619  0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  4620                           
  4621                           	global	_CCP1M3
  4622                           	global	_CCP1M3
  4623  0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  4624                           
  4625                           	global	_CCP1X
  4626                           	global	_CCP1X
  4627  0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  4628                           
  4629                           	global	_CCP1Y
  4630                           	global	_CCP1Y
  4631  0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  4632                           
  4633                           	global	_CCP2IE
  4634                           	global	_CCP2IE
  4635  0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  4636                           
  4637                           	global	_CCP2IF
  4638                           	global	_CCP2IF
  4639  0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  4640                           
  4641                           	global	_CCP2M0
  4642                           	global	_CCP2M0
  4643  0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  4644                           
  4645                           	global	_CCP2M1
  4646                           	global	_CCP2M1
  4647  0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  4648                           
  4649                           	global	_CCP2M2
  4650                           	global	_CCP2M2
  4651  0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  4652                           
  4653                           	global	_CCP2M3
  4654                           	global	_CCP2M3
  4655  0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  4656                           
  4657                           	global	_CCP2X
  4658                           	global	_CCP2X
  4659  0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  4660                           
  4661                           	global	_CCP2Y
  4662                           	global	_CCP2Y
  4663  0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  4664                           
  4665                           	global	_CHS0
  4666                           	global	_CHS0
  4667  0000                     	_CHS0	set	0xFB	;byte address: 0x1F
  4668                           
  4669                           	global	_CHS1
  4670                           	global	_CHS1
  4671  0000                     	_CHS1	set	0xFC	;byte address: 0x1F
  4672                           
  4673                           	global	_CHS2
  4674                           	global	_CHS2
  4675  0000                     	_CHS2	set	0xFD	;byte address: 0x1F
  4676                           
  4677                           	global	_CIS
  4678                           	global	_CIS
  4679  0000                     	_CIS	set	0x4E3	;byte address: 0x9C
  4680                           
  4681                           	global	_CKE
  4682                           	global	_CKE
  4683  0000                     	_CKE	set	0x4A6	;byte address: 0x94
  4684                           
  4685                           	global	_CKP
  4686                           	global	_CKP
  4687  0000                     	_CKP	set	0xA4	;byte address: 0x14
  4688                           
  4689                           	global	_CM0
  4690                           	global	_CM0
  4691  0000                     	_CM0	set	0x4E0	;byte address: 0x9C
  4692                           
  4693                           	global	_CM1
  4694                           	global	_CM1
  4695  0000                     	_CM1	set	0x4E1	;byte address: 0x9C
  4696                           
  4697                           	global	_CM2
  4698                           	global	_CM2
  4699  0000                     	_CM2	set	0x4E2	;byte address: 0x9C
  4700                           
  4701                           	global	_CMIE
  4702                           	global	_CMIE
  4703  0000                     	_CMIE	set	0x46E	;byte address: 0x8D
  4704                           
  4705                           	global	_CMIF
  4706                           	global	_CMIF
  4707  0000                     	_CMIF	set	0x6E	;byte address: 0xD
  4708                           
  4709                           	global	_CREN
  4710  0000                     	_CREN	set	0xC4	;byte address: 0x18
  4711                           
  4712                           	global	_CSRC
  4713                           	global	_CSRC
  4714  0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  4715                           
  4716                           	global	_CVR0
  4717                           	global	_CVR0
  4718  0000                     	_CVR0	set	0x4E8	;byte address: 0x9D
  4719                           
  4720                           	global	_CVR1
  4721                           	global	_CVR1
  4722  0000                     	_CVR1	set	0x4E9	;byte address: 0x9D
  4723                           
  4724                           	global	_CVR2
  4725                           	global	_CVR2
  4726  0000                     	_CVR2	set	0x4EA	;byte address: 0x9D
  4727                           
  4728                           	global	_CVR3
  4729                           	global	_CVR3
  4730  0000                     	_CVR3	set	0x4EB	;byte address: 0x9D
  4731                           
  4732                           	global	_CVREN
  4733                           	global	_CVREN
  4734  0000                     	_CVREN	set	0x4EF	;byte address: 0x9D
  4735                           
  4736                           	global	_CVROE
  4737                           	global	_CVROE
  4738  0000                     	_CVROE	set	0x4EE	;byte address: 0x9D
  4739                           
  4740                           	global	_CVRR
  4741                           	global	_CVRR
  4742  0000                     	_CVRR	set	0x4ED	;byte address: 0x9D
  4743                           
  4744                           	global	_DA
  4745                           	global	_DA
  4746  0000                     	_DA	set	0x4A5	;byte address: 0x94
  4747                           
  4748                           	global	_DC
  4749                           	global	_DC
  4750  0000                     	_DC	set	0x19	;byte address: 0x3
  4751                           
  4752                           	global	_EEIE
  4753                           	global	_EEIE
  4754  0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  4755                           
  4756                           	global	_EEIF
  4757                           	global	_EEIF
  4758  0000                     	_EEIF	set	0x6C	;byte address: 0xD
  4759                           
  4760                           	global	_EEPGD
  4761                           	global	_EEPGD
  4762  0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  4763                           
  4764                           	global	_FERR
  4765                           	global	_FERR
  4766  0000                     	_FERR	set	0xC2	;byte address: 0x18
  4767                           
  4768                           	global	_GCEN
  4769                           	global	_GCEN
  4770  0000                     	_GCEN	set	0x48F	;byte address: 0x91
  4771                           
  4772                           	global	_GIE
  4773  0000                     	_GIE	set	0x5F	;byte address: 0xB
  4774                           
  4775                           	global	_GODONE
  4776                           	global	_GODONE
  4777  0000                     	_GODONE	set	0xFA	;byte address: 0x1F
  4778                           
  4779                           	global	_IBF
  4780                           	global	_IBF
  4781  0000                     	_IBF	set	0x44F	;byte address: 0x89
  4782                           
  4783                           	global	_IBOV
  4784                           	global	_IBOV
  4785  0000                     	_IBOV	set	0x44D	;byte address: 0x89
  4786                           
  4787                           	global	_INTE
  4788                           	global	_INTE
  4789  0000                     	_INTE	set	0x5C	;byte address: 0xB
  4790                           
  4791                           	global	_INTEDG
  4792                           	global	_INTEDG
  4793  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  4794                           
  4795                           	global	_INTF
  4796                           	global	_INTF
  4797  0000                     	_INTF	set	0x59	;byte address: 0xB
  4798                           
  4799                           	global	_IRP
  4800                           	global	_IRP
  4801  0000                     	_IRP	set	0x1F	;byte address: 0x3
  4802                           
  4803                           	global	_Lcd_en
  4804  0000                     	_Lcd_en	set	0x3D	;byte address: 0x7
  4805                           
  4806                           	global	_Lcd_rs
  4807  0000                     	_Lcd_rs	set	0x3C	;byte address: 0x7
  4808                           
  4809                           	global	_OBF
  4810                           	global	_OBF
  4811  0000                     	_OBF	set	0x44E	;byte address: 0x89
  4812                           
  4813                           	global	_OERR
  4814                           	global	_OERR
  4815  0000                     	_OERR	set	0xC1	;byte address: 0x18
  4816                           
  4817                           	global	_PCFG0
  4818                           	global	_PCFG0
  4819  0000                     	_PCFG0	set	0x4F8	;byte address: 0x9F
  4820                           
  4821                           	global	_PCFG1
  4822                           	global	_PCFG1
  4823  0000                     	_PCFG1	set	0x4F9	;byte address: 0x9F
  4824                           
  4825                           	global	_PCFG2
  4826                           	global	_PCFG2
  4827  0000                     	_PCFG2	set	0x4FA	;byte address: 0x9F
  4828                           
  4829                           	global	_PCFG3
  4830                           	global	_PCFG3
  4831  0000                     	_PCFG3	set	0x4FB	;byte address: 0x9F
  4832                           
  4833                           	global	_PD
  4834                           	global	_PD
  4835  0000                     	_PD	set	0x1B	;byte address: 0x3
  4836                           
  4837                           	global	_PEIE
  4838  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  4839                           
  4840                           	global	_PEN
  4841                           	global	_PEN
  4842  0000                     	_PEN	set	0x48A	;byte address: 0x91
  4843                           
  4844                           	global	_POR
  4845                           	global	_POR
  4846  0000                     	_POR	set	0x471	;byte address: 0x8E
  4847                           
  4848                           	global	_PS0
  4849                           	global	_PS0
  4850  0000                     	_PS0	set	0x408	;byte address: 0x81
  4851                           
  4852                           	global	_PS1
  4853                           	global	_PS1
  4854  0000                     	_PS1	set	0x409	;byte address: 0x81
  4855                           
  4856                           	global	_PS2
  4857                           	global	_PS2
  4858  0000                     	_PS2	set	0x40A	;byte address: 0x81
  4859                           
  4860                           	global	_PSA
  4861                           	global	_PSA
  4862  0000                     	_PSA	set	0x40B	;byte address: 0x81
  4863                           
  4864                           	global	_PSPIE
  4865                           	global	_PSPIE
  4866  0000                     	_PSPIE	set	0x467	;byte address: 0x8C
  4867                           
  4868                           	global	_PSPIF
  4869                           	global	_PSPIF
  4870  0000                     	_PSPIF	set	0x67	;byte address: 0xC
  4871                           
  4872                           	global	_PSPMODE
  4873                           	global	_PSPMODE
  4874  0000                     	_PSPMODE	set	0x44C	;byte address: 0x89
  4875                           
  4876                           	global	_RA0
  4877                           	global	_RA0
  4878  0000                     	_RA0	set	0x28	;byte address: 0x5
  4879                           
  4880                           	global	_RA1
  4881                           	global	_RA1
  4882  0000                     	_RA1	set	0x29	;byte address: 0x5
  4883                           
  4884                           	global	_RA2
  4885                           	global	_RA2
  4886  0000                     	_RA2	set	0x2A	;byte address: 0x5
  4887                           
  4888                           	global	_RA3
  4889                           	global	_RA3
  4890  0000                     	_RA3	set	0x2B	;byte address: 0x5
  4891                           
  4892                           	global	_RA4
  4893                           	global	_RA4
  4894  0000                     	_RA4	set	0x2C	;byte address: 0x5
  4895                           
  4896                           	global	_RA5
  4897                           	global	_RA5
  4898  0000                     	_RA5	set	0x2D	;byte address: 0x5
  4899                           
  4900                           	global	_RB0
  4901  0000                     	_RB0	set	0x30	;byte address: 0x6
  4902                           
  4903                           	global	_RB1
  4904  0000                     	_RB1	set	0x31	;byte address: 0x6
  4905                           
  4906                           	global	_RB2
  4907  0000                     	_RB2	set	0x32	;byte address: 0x6
  4908                           
  4909                           	global	_RB3
  4910  0000                     	_RB3	set	0x33	;byte address: 0x6
  4911                           
  4912                           	global	_RB4
  4913                           	global	_RB4
  4914  0000                     	_RB4	set	0x34	;byte address: 0x6
  4915                           
  4916                           	global	_RB5
  4917                           	global	_RB5
  4918  0000                     	_RB5	set	0x35	;byte address: 0x6
  4919                           
  4920                           	global	_RB6
  4921                           	global	_RB6
  4922  0000                     	_RB6	set	0x36	;byte address: 0x6
  4923                           
  4924                           	global	_RB7
  4925                           	global	_RB7
  4926  0000                     	_RB7	set	0x37	;byte address: 0x6
  4927                           
  4928                           	global	_RBIE
  4929                           	global	_RBIE
  4930  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  4931                           
  4932                           	global	_RBIF
  4933                           	global	_RBIF
  4934  0000                     	_RBIF	set	0x58	;byte address: 0xB
  4935                           
  4936                           	global	_RBPU
  4937                           	global	_RBPU
  4938  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  4939                           
  4940                           	global	_RC0
  4941                           	global	_RC0
  4942  0000                     	_RC0	set	0x38	;byte address: 0x7
  4943                           
  4944                           	global	_RC1
  4945                           	global	_RC1
  4946  0000                     	_RC1	set	0x39	;byte address: 0x7
  4947                           
  4948                           	global	_RC2
  4949                           	global	_RC2
  4950  0000                     	_RC2	set	0x3A	;byte address: 0x7
  4951                           
  4952                           	global	_RC3
  4953                           	global	_RC3
  4954  0000                     	_RC3	set	0x3B	;byte address: 0x7
  4955                           
  4956                           	global	_RC4
  4957                           	global	_RC4
  4958  0000                     	_RC4	set	0x3C	;byte address: 0x7
  4959                           
  4960                           	global	_RC5
  4961                           	global	_RC5
  4962  0000                     	_RC5	set	0x3D	;byte address: 0x7
  4963                           
  4964                           	global	_RC6
  4965                           	global	_RC6
  4966  0000                     	_RC6	set	0x3E	;byte address: 0x7
  4967                           
  4968                           	global	_RC7
  4969                           	global	_RC7
  4970  0000                     	_RC7	set	0x3F	;byte address: 0x7
  4971                           
  4972                           	global	_RCEN
  4973                           	global	_RCEN
  4974  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  4975                           
  4976                           	global	_RCIE
  4977  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  4978                           
  4979                           	global	_RCIF
  4980                           	global	_RCIF
  4981  0000                     	_RCIF	set	0x65	;byte address: 0xC
  4982                           
  4983                           	global	_RD
  4984                           	global	_RD
  4985  0000                     	_RD	set	0xC60	;byte address: 0x18C
  4986                           
  4987                           	global	_RD0
  4988                           	global	_RD0
  4989  0000                     	_RD0	set	0x40	;byte address: 0x8
  4990                           
  4991                           	global	_RD1
  4992                           	global	_RD1
  4993  0000                     	_RD1	set	0x41	;byte address: 0x8
  4994                           
  4995                           	global	_RD2
  4996                           	global	_RD2
  4997  0000                     	_RD2	set	0x42	;byte address: 0x8
  4998                           
  4999                           	global	_RD3
  5000                           	global	_RD3
  5001  0000                     	_RD3	set	0x43	;byte address: 0x8
  5002                           
  5003                           	global	_RD4
  5004                           	global	_RD4
  5005  0000                     	_RD4	set	0x44	;byte address: 0x8
  5006                           
  5007                           	global	_RD5
  5008                           	global	_RD5
  5009  0000                     	_RD5	set	0x45	;byte address: 0x8
  5010                           
  5011                           	global	_RD6
  5012                           	global	_RD6
  5013  0000                     	_RD6	set	0x46	;byte address: 0x8
  5014                           
  5015                           	global	_RD7
  5016                           	global	_RD7
  5017  0000                     	_RD7	set	0x47	;byte address: 0x8
  5018                           
  5019                           	global	_RE0
  5020                           	global	_RE0
  5021  0000                     	_RE0	set	0x48	;byte address: 0x9
  5022                           
  5023                           	global	_RE1
  5024                           	global	_RE1
  5025  0000                     	_RE1	set	0x49	;byte address: 0x9
  5026                           
  5027                           	global	_RE2
  5028                           	global	_RE2
  5029  0000                     	_RE2	set	0x4A	;byte address: 0x9
  5030                           
  5031                           	global	_RP0
  5032                           	global	_RP0
  5033  0000                     	_RP0	set	0x1D	;byte address: 0x3
  5034                           
  5035                           	global	_RP1
  5036                           	global	_RP1
  5037  0000                     	_RP1	set	0x1E	;byte address: 0x3
  5038                           
  5039                           	global	_RSEN
  5040                           	global	_RSEN
  5041  0000                     	_RSEN	set	0x489	;byte address: 0x91
  5042                           
  5043                           	global	_RW
  5044                           	global	_RW
  5045  0000                     	_RW	set	0x4A2	;byte address: 0x94
  5046                           
  5047                           	global	_RX9
  5048                           	global	_RX9
  5049  0000                     	_RX9	set	0xC6	;byte address: 0x18
  5050                           
  5051                           	global	_RX9D
  5052                           	global	_RX9D
  5053  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  5054                           
  5055                           	global	_SEN
  5056                           	global	_SEN
  5057  0000                     	_SEN	set	0x488	;byte address: 0x91
  5058                           
  5059                           	global	_SMP
  5060                           	global	_SMP
  5061  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  5062                           
  5063                           	global	_SPEN
  5064  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  5065                           
  5066                           	global	_SREN
  5067                           	global	_SREN
  5068  0000                     	_SREN	set	0xC5	;byte address: 0x18
  5069                           
  5070                           	global	_SSPEN
  5071                           	global	_SSPEN
  5072  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  5073                           
  5074                           	global	_SSPIE
  5075                           	global	_SSPIE
  5076  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  5077                           
  5078                           	global	_SSPIF
  5079                           	global	_SSPIF
  5080  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  5081                           
  5082                           	global	_SSPM0
  5083                           	global	_SSPM0
  5084  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  5085                           
  5086                           	global	_SSPM1
  5087                           	global	_SSPM1
  5088  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  5089                           
  5090                           	global	_SSPM2
  5091                           	global	_SSPM2
  5092  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  5093                           
  5094                           	global	_SSPM3
  5095                           	global	_SSPM3
  5096  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  5097                           
  5098                           	global	_SSPOV
  5099                           	global	_SSPOV
  5100  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  5101                           
  5102                           	global	_START
  5103                           	global	_START
  5104  0000                     	_START	set	0x4A3	;byte address: 0x94
  5105                           
  5106                           	global	_STOP
  5107                           	global	_STOP
  5108  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  5109                           
  5110                           	global	_SYNC
  5111  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  5112                           
  5113                           	global	_T0CS
  5114                           	global	_T0CS
  5115  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  5116                           
  5117                           	global	_T0IE
  5118                           	global	_T0IE
  5119  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  5120                           
  5121                           	global	_T0IF
  5122                           	global	_T0IF
  5123  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  5124                           
  5125                           	global	_T0SE
  5126                           	global	_T0SE
  5127  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  5128                           
  5129                           	global	_T1CKPS0
  5130                           	global	_T1CKPS0
  5131  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  5132                           
  5133                           	global	_T1CKPS1
  5134                           	global	_T1CKPS1
  5135  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  5136                           
  5137                           	global	_T1OSCEN
  5138                           	global	_T1OSCEN
  5139  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  5140                           
  5141                           	global	_T1SYNC
  5142                           	global	_T1SYNC
  5143  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  5144                           
  5145                           	global	_T2CKPS0
  5146                           	global	_T2CKPS0
  5147  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  5148                           
  5149                           	global	_T2CKPS1
  5150                           	global	_T2CKPS1
  5151  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  5152                           
  5153                           	global	_TMR0IE
  5154                           	global	_TMR0IE
  5155  0000                     	_TMR0IE	set	0x5D	;byte address: 0xB
  5156                           
  5157                           	global	_TMR0IF
  5158                           	global	_TMR0IF
  5159  0000                     	_TMR0IF	set	0x5A	;byte address: 0xB
  5160                           
  5161                           	global	_TMR1CS
  5162                           	global	_TMR1CS
  5163  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  5164                           
  5165                           	global	_TMR1IE
  5166                           	global	_TMR1IE
  5167  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  5168                           
  5169                           	global	_TMR1IF
  5170                           	global	_TMR1IF
  5171  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  5172                           
  5173                           	global	_TMR1ON
  5174                           	global	_TMR1ON
  5175  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  5176                           
  5177                           	global	_TMR2IE
  5178                           	global	_TMR2IE
  5179  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  5180                           
  5181                           	global	_TMR2IF
  5182                           	global	_TMR2IF
  5183  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  5184                           
  5185                           	global	_TMR2ON
  5186                           	global	_TMR2ON
  5187  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  5188                           
  5189                           	global	_TO
  5190                           	global	_TO
  5191  0000                     	_TO	set	0x1C	;byte address: 0x3
  5192                           
  5193                           	global	_TOUTPS0
  5194                           	global	_TOUTPS0
  5195  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  5196                           
  5197                           	global	_TOUTPS1
  5198                           	global	_TOUTPS1
  5199  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  5200                           
  5201                           	global	_TOUTPS2
  5202                           	global	_TOUTPS2
  5203  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  5204                           
  5205                           	global	_TOUTPS3
  5206                           	global	_TOUTPS3
  5207  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  5208                           
  5209                           	global	_TRISA0
  5210                           	global	_TRISA0
  5211  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  5212                           
  5213                           	global	_TRISA1
  5214                           	global	_TRISA1
  5215  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  5216                           
  5217                           	global	_TRISA2
  5218                           	global	_TRISA2
  5219  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  5220                           
  5221                           	global	_TRISA3
  5222                           	global	_TRISA3
  5223  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  5224                           
  5225                           	global	_TRISA4
  5226                           	global	_TRISA4
  5227  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  5228                           
  5229                           	global	_TRISA5
  5230                           	global	_TRISA5
  5231  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  5232                           
  5233                           	global	_TRISB0
  5234                           	global	_TRISB0
  5235  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  5236                           
  5237                           	global	_TRISB1
  5238                           	global	_TRISB1
  5239  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  5240                           
  5241                           	global	_TRISB2
  5242                           	global	_TRISB2
  5243  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  5244                           
  5245                           	global	_TRISB3
  5246                           	global	_TRISB3
  5247  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  5248                           
  5249                           	global	_TRISB4
  5250                           	global	_TRISB4
  5251  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  5252                           
  5253                           	global	_TRISB5
  5254                           	global	_TRISB5
  5255  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  5256                           
  5257                           	global	_TRISB6
  5258                           	global	_TRISB6
  5259  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  5260                           
  5261                           	global	_TRISB7
  5262                           	global	_TRISB7
  5263  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  5264                           
  5265                           	global	_TRISC0
  5266                           	global	_TRISC0
  5267  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  5268                           
  5269                           	global	_TRISC1
  5270                           	global	_TRISC1
  5271  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  5272                           
  5273                           	global	_TRISC2
  5274                           	global	_TRISC2
  5275  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  5276                           
  5277                           	global	_TRISC3
  5278                           	global	_TRISC3
  5279  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  5280                           
  5281                           	global	_TRISC4
  5282                           	global	_TRISC4
  5283  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  5284                           
  5285                           	global	_TRISC5
  5286                           	global	_TRISC5
  5287  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  5288                           
  5289                           	global	_TRISC6
  5290                           	global	_TRISC6
  5291  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  5292                           
  5293                           	global	_TRISC7
  5294                           	global	_TRISC7
  5295  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  5296                           
  5297                           	global	_TRISD0
  5298                           	global	_TRISD0
  5299  0000                     	_TRISD0	set	0x440	;byte address: 0x88
  5300                           
  5301                           	global	_TRISD1
  5302                           	global	_TRISD1
  5303  0000                     	_TRISD1	set	0x441	;byte address: 0x88
  5304                           
  5305                           	global	_TRISD2
  5306                           	global	_TRISD2
  5307  0000                     	_TRISD2	set	0x442	;byte address: 0x88
  5308                           
  5309                           	global	_TRISD3
  5310                           	global	_TRISD3
  5311  0000                     	_TRISD3	set	0x443	;byte address: 0x88
  5312                           
  5313                           	global	_TRISD4
  5314                           	global	_TRISD4
  5315  0000                     	_TRISD4	set	0x444	;byte address: 0x88
  5316                           
  5317                           	global	_TRISD5
  5318                           	global	_TRISD5
  5319  0000                     	_TRISD5	set	0x445	;byte address: 0x88
  5320                           
  5321                           	global	_TRISD6
  5322                           	global	_TRISD6
  5323  0000                     	_TRISD6	set	0x446	;byte address: 0x88
  5324                           
  5325                           	global	_TRISD7
  5326                           	global	_TRISD7
  5327  0000                     	_TRISD7	set	0x447	;byte address: 0x88
  5328                           
  5329                           	global	_TRISE0
  5330                           	global	_TRISE0
  5331  0000                     	_TRISE0	set	0x448	;byte address: 0x89
  5332                           
  5333                           	global	_TRISE1
  5334                           	global	_TRISE1
  5335  0000                     	_TRISE1	set	0x449	;byte address: 0x89
  5336                           
  5337                           	global	_TRISE2
  5338                           	global	_TRISE2
  5339  0000                     	_TRISE2	set	0x44A	;byte address: 0x89
  5340                           
  5341                           	global	_TRMT
  5342                           	global	_TRMT
  5343  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  5344                           
  5345                           	global	_TX9
  5346                           	global	_TX9
  5347  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  5348                           
  5349                           	global	_TX9D
  5350                           	global	_TX9D
  5351  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  5352                           
  5353                           	global	_TXEN
  5354  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  5355                           
  5356                           	global	_TXIE
  5357                           	global	_TXIE
  5358  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  5359                           
  5360                           	global	_TXIF
  5361  0000                     	_TXIF	set	0x64	;byte address: 0xC
  5362                           
  5363                           	global	_UA
  5364                           	global	_UA
  5365  0000                     	_UA	set	0x4A1	;byte address: 0x94
  5366                           
  5367                           	global	_WCOL
  5368                           	global	_WCOL
  5369  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  5370                           
  5371                           	global	_WR
  5372                           	global	_WR
  5373  0000                     	_WR	set	0xC61	;byte address: 0x18C
  5374                           
  5375                           	global	_WREN
  5376                           	global	_WREN
  5377  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  5378                           
  5379                           	global	_WRERR
  5380                           	global	_WRERR
  5381  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  5382                           
  5383                           	global	_ZERO
  5384                           	global	_ZERO
  5385  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  5386                           
  5387                           	psect	strings
  5388                           	
  5389  070F                     STR_2:	
  5390  070F  3442               	retlw	66	;'B'
  5391  0710  3453               	retlw	83	;'S'
  5392  0711  3444               	retlw	68	;'D'
  5393  0712  3420               	retlw	32	;' '
  5394  0713  3452               	retlw	82	;'R'
  5395  0714  344F               	retlw	79	;'O'
  5396  0715  3442               	retlw	66	;'B'
  5397  0716  344F               	retlw	79	;'O'
  5398  0717  3454               	retlw	84	;'T'
  5399  0718  3420               	retlw	32	;' '
  5400  0719  3443               	retlw	67	;'C'
  5401  071A  344F               	retlw	79	;'O'
  5402  071B  344E               	retlw	78	;'N'
  5403  071C  3454               	retlw	84	;'T'
  5404  071D  3452               	retlw	82	;'R'
  5405  071E  344C               	retlw	76	;'L'
  5406  071F  3400               	retlw	0
  5407                           	
  5408  0720                     STR_1:	
  5409  0720  342D               	retlw	45	;'-'
  5410  0721  342D               	retlw	45	;'-'
  5411  0722  3448               	retlw	72	;'H'
  5412  0723  3441               	retlw	65	;'A'
  5413  0724  344E               	retlw	78	;'N'
  5414  0725  3444               	retlw	68	;'D'
  5415  0726  3420               	retlw	32	;' '
  5416  0727  344D               	retlw	77	;'M'
  5417  0728  344F               	retlw	79	;'O'
  5418  0729  3456               	retlw	86	;'V'
  5419  072A  3445               	retlw	69	;'E'
  5420  072B  344D               	retlw	77	;'M'
  5421  072C  3445               	retlw	69	;'E'
  5422  072D  344E               	retlw	78	;'N'
  5423  072E  3454               	retlw	84	;'T'
  5424  072F  342D               	retlw	45	;'-'
  5425  0730  3400               	retlw	0
  5426                           	
  5427  0731                     STR_4:	
  5428  0731  3420               	retlw	32	;' '
  5429  0732  3420               	retlw	32	;' '
  5430  0733  3420               	retlw	32	;' '
  5431  0734  3420               	retlw	32	;' '
  5432  0735  3420               	retlw	32	;' '
  5433  0736  3420               	retlw	32	;' '
  5434  0737  3420               	retlw	32	;' '
  5435  0738  3420               	retlw	32	;' '
  5436  0739  3420               	retlw	32	;' '
  5437  073A  3420               	retlw	32	;' '
  5438  073B  3420               	retlw	32	;' '
  5439  073C  3420               	retlw	32	;' '
  5440  073D  3420               	retlw	32	;' '
  5441  073E  3420               	retlw	32	;' '
  5442  073F  3420               	retlw	32	;' '
  5443  0740  3420               	retlw	32	;' '
  5444  0741  3400               	retlw	0
  5445                           	
  5446  0742                     STR_3:	
  5447  0742  3458               	retlw	88	;'X'
  5448  0743  343A               	retlw	58	;':'
  5449  0744  3420               	retlw	32	;' '
  5450  0745  3420               	retlw	32	;' '
  5451  0746  3420               	retlw	32	;' '
  5452  0747  3420               	retlw	32	;' '
  5453  0748  3459               	retlw	89	;'Y'
  5454  0749  343A               	retlw	58	;':'
  5455  074A  3420               	retlw	32	;' '
  5456  074B  3420               	retlw	32	;' '
  5457  074C  3420               	retlw	32	;' '
  5458  074D  345A               	retlw	90	;'Z'
  5459  074E  343A               	retlw	58	;':'
  5460  074F  3420               	retlw	32	;' '
  5461  0750  3420               	retlw	32	;' '
  5462  0751  3420               	retlw	32	;' '
  5463  0752  3400               	retlw	0
  5464                           	
  5465  0753                     STR_8:	
  5466  0753  3453               	retlw	83	;'S'
  5467  0754  3454               	retlw	84	;'T'
  5468  0755  3441               	retlw	65	;'A'
  5469  0756  3452               	retlw	82	;'R'
  5470  0757  3454               	retlw	84	;'T'
  5471  0758  3420               	retlw	32	;' '
  5472  0759  3420               	retlw	32	;' '
  5473  075A  3420               	retlw	32	;' '
  5474  075B  3420               	retlw	32	;' '
  5475  075C  3420               	retlw	32	;' '
  5476  075D  3400               	retlw	0
  5477                           	
  5478  075E                     STR_7:	
  5479  075E  3452               	retlw	82	;'R'
  5480  075F  3449               	retlw	73	;'I'
  5481  0760  3447               	retlw	71	;'G'
  5482  0761  3448               	retlw	72	;'H'
  5483  0762  3454               	retlw	84	;'T'
  5484  0763  3420               	retlw	32	;' '
  5485  0764  3420               	retlw	32	;' '
  5486  0765  3420               	retlw	32	;' '
  5487  0766  3420               	retlw	32	;' '
  5488  0767  3420               	retlw	32	;' '
  5489  0768  3400               	retlw	0
  5490                           	
  5491  0769                     STR_9:	
  5492  0769  3452               	retlw	82	;'R'
  5493  076A  3445               	retlw	69	;'E'
  5494  076B  3456               	retlw	86	;'V'
  5495  076C  3445               	retlw	69	;'E'
  5496  076D  3452               	retlw	82	;'R'
  5497  076E  3453               	retlw	83	;'S'
  5498  076F  3445               	retlw	69	;'E'
  5499  0770  3420               	retlw	32	;' '
  5500  0771  3420               	retlw	32	;' '
  5501  0772  3420               	retlw	32	;' '
  5502  0773  3400               	retlw	0
  5503                           	
  5504  0774                     STR_6:	
  5505  0774  344C               	retlw	76	;'L'
  5506  0775  3445               	retlw	69	;'E'
  5507  0776  3446               	retlw	70	;'F'
  5508  0777  3454               	retlw	84	;'T'
  5509  0778  3420               	retlw	32	;' '
  5510  0779  3420               	retlw	32	;' '
  5511  077A  3420               	retlw	32	;' '
  5512  077B  3420               	retlw	32	;' '
  5513  077C  3420               	retlw	32	;' '
  5514  077D  3420               	retlw	32	;' '
  5515  077E  3400               	retlw	0
  5516                           	
  5517  077F                     STR_5:	
  5518  077F  3453               	retlw	83	;'S'
  5519  0780  3454               	retlw	84	;'T'
  5520  0781  344F               	retlw	79	;'O'
  5521  0782  3450               	retlw	80	;'P'
  5522  0783  3420               	retlw	32	;' '
  5523  0784  3420               	retlw	32	;' '
  5524  0785  3420               	retlw	32	;' '
  5525  0786  3420               	retlw	32	;' '
  5526  0787  3420               	retlw	32	;' '
  5527  0788  3420               	retlw	32	;' '
  5528  0789  3400               	retlw	0
  5529                           	PSECT	fnauto0,class=BANK0,space=1
  5530                           	FNCONF	fnauto0,??,?
  5531                           
  5532                           	DABS	1,126,2	;btemp
  5533                           	global	btemp
  5534  0000                     	btemp set 07Eh
  5535                           apbank macro
  5536                           	bcf	status,5
  5537                           	bcf	status,6
  5538  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Tue Dec 26 11:10:11 2023

             __Lrbss_0 006A               __Lrbss_1 00EA  
                    l1 0FFF                      l2 024A  
                    l3 028F                      l4 02BA  
                    l5 0297                      l6 02BA  
                    l8 02AC              __Lrdata_1 00E1  
                    _a 003A                      _b 006A  
                    _c 00E1                      _f 004A  
                    _i 0036                      _j 0063  
                    _s 0061                      _u 0062  
                    _x 0076                      _y 0070  
                    _z 0067                      pc 0002  
            __Lramdata 00E1                     l10 0433  
                   l12 07FF                     _DA 04A5  
                   l13 07EF                     _BF 04A0  
                   l30 04DB                     _DC 0019  
                   l15 07FF                     l31 047C  
                   l32 04DB                     l40 0FE6  
                   l16 026B                     l33 0494  
                   l41 0FE0                     l26 04DB  
                   l34 04DB                     l42 0FE6  
                   l50 0506                     l35 04AC  
                   l27 044C                     l43 06FF  
                   l51 0509                     l36 04DB  
                   l28 04DB                     l44 0529  
                   l37 04C4                     l29 0464  
                   l61 0546                     l53 050F  
                   l45 04F7                     l38 04DB  
                   l70 057D                     l62 0549  
                   l54 06E2                     l46 0528  
                   l39 04DB                     l55 0569  
                   l72 0585                     l64 054F  
                   l56 053A                     l48 04FE  
                   l65 06E2                     l81 05BC  
                   l73 0588                     l57 0568  
                   l90 0625                     l66 05A8  
                   l83 05C4                     l75 058E  
                   l67 0579                     l59 053E  
                   l76 06E2                     l92 05FB  
                   l84 05C7                     l68 05A7  
                   l77 05E7                     l94 0603  
                   l86 05CD                     l78 05B8  
                   l87 06E2                     l95 0606  
                   l79 05E6                     l88 0626  
                   l97 060C                     l89 05F7  
                   l98 06E2                     l99 0665  
                   _PD 001B                     _RD 0C60  
                   _UA 04A1                     _TO 001C  
                   _RW 04A2                     _WR 0C61  
                   _n1 0038                     _n2 006C  
                   _n3 006E                     _aa 003C  
                   _hb 00EC                     _kc 0064  
                   _cu 00E8                     _qq 00E9  
                   _sp 0065                     _ss 0078  
                   _st 0072                     fsr 0004  
        _Lcd8_Write_lr 002C       _Lcd8_Command_com 002E  
      ___lwmod_divisor 002E        ___lwmod_counter 0030  
                  l100 0636                    l101 0664  
                  l110 06A4                    l111 0675  
                  l103 063A                    l120 06E2  
                  l112 06A3                    l121 06E2  
                  l105 0642                    l130 06C9  
                  l122 06B4                    l114 0679  
                  l106 0645                    l123 06E2  
                  l116 0681                    l108 064B  
                  l220 0229                    l109 06E2  
                  l125 06B8                    l117 0684  
                  l221 00BF                    l127 06C0  
                  l119 068A                    l223 0141  
                  l240 030C                    l400 039D  
                  l128 06C3                    l224 017B  
                  l241 0301                    l401 0378  
                  l225 01B5                    l242 0310  
                  l402 0390                    l250 02C5  
                  l226 01EF                    l403 03A6  
                  l251 02D4                    l227 0229  
                  l244 0335                    l245 0310  
                  l253 02F1                    l238 033C  
                  l246 0328                    l254 02D4  
                  l239 0335                    l247 02F2  
                  l255 02E4                    l248 02F1  
                  l249 02D0                    _CM0 04E0  
                  _CM1 04E1                    _CM2 04E2  
                  l480 07C6                    l392 03AD  
                  l393 034E                    l474 07ED  
                  l482 07E3                    l394 035B  
                  l483 07C6                    l475 07A4  
                  l395 039D                    l484 07D6  
                  l476 07AD                    l396 0374  
                  l485 07EC                    l477 07E3  
                  l397 0369                    l478 07C2  
                  l398 0378                    l479 07B7  
                  _CKE 04A6                    _IBF 044F  
                  _CIS 04E3                    _CKP 00A4  
                  _GIE 005F                    _BOR 0470  
                  _RA0 0028                    _RA1 0029  
                  _RB0 0030                    _RA2 002A  
                  _RB1 0031                    _RA3 002B  
                  _RC0 0038                    _RB2 0032  
                  _RA4 002C                    _RC1 0039  
                  _RB3 0033                    _RA5 002D  
                  _RD0 0040                    _RC2 003A  
                  _RB4 0034                    _RD1 0041  
                  _RC3 003B                    _RB5 0035  
                  _RE0 0048                    _RD2 0042  
                  _RC4 003C                    _RB6 0036  
                  _RE1 0049                    _RD3 0043  
                  _RC5 003D                    _RB7 0037  
                  _RE2 004A                    _RD4 0044  
                  _RC6 003E                    _RD5 0045  
                  _RC7 003F                    _RD6 0046  
                  _OBF 044E                    _RD7 0047  
                  _FSR 0004                    _PCL 0002  
                  _PS0 0408                    _PR2 0092  
                  _PS1 0409                    _RP0 001D  
                  _PS2 040A                    _PEN 048A  
                  _IRP 001F                    _RP1 001E  
                  _SEN 0488                    _PSA 040B  
     _Lcd8_Display_com 0023                    _POR 0471  
                  _RX9 00C6                    _SMP 04A7  
                  _TX9 04C6               _adc_hbit 0058  
             _adc_lbit 005A               _adc_val1 00EE  
        _Baudrate_baud 0024                    _add 00E6  
             _adc_temp 0054                    _sec 007A  
                  _shb 007C         _Lcd8_Write_com 002D  
                  indf 0000       ___lwmod_dividend 002C  
              ??_Delay 0031       ___lwdiv_dividend 002C  
          _Serial_Init 024B                   _ADIE 0466  
                 _ADIF 0066                   _ADFM 04FF  
                 _ADGO 00FA               __tempreg 0020  
                 _ADON 00F8                   _CHS0 00FB  
                 _CHS1 00FC                   _CHS2 00FD  
                 _EEIE 046C                   _EEIF 006C  
                 STR_1 0720                   STR_2 070F  
                 STR_3 0742                   STR_4 0731  
                 STR_5 077F                   _GCEN 048F  
                 STR_6 0774                   STR_7 075E  
                 STR_8 0753                   STR_9 0769  
                 _CMIE 046E                   _CMIF 006E  
                 _BRGH 04C2                   _T0IE 005D  
                 _T0IF 005A                   _CREN 00C4  
                 _T0CS 040D                   _FERR 00C2  
                 _IBOV 044D                   _CVR0 04E8  
                 _CVR1 04E9                   _CVR2 04EA  
                 _CVR3 04EB                   _T0SE 040C  
                 _CSRC 04C7                   _INDF 0000  
                 u5000 0506                   u5001 0505  
                 u5010 050F                   u5011 050E  
                 u5100 0585                   u5020 0528  
                 u5101 0584                   u5021 0527  
                 u5110 058E                   u5030 0530  
                 _PIE1 008C                   u5111 058D  
                 u5031 052F                   _PIE2 008D  
                 u5200 0603                   u5120 05A7  
                 u5201 0602                   u5121 05A6  
                 u5210 060C                   u5130 05AE  
                 u5050 0546                   u5211 060B  
                 u5131 05AD                   u5051 0545  
                 u5300 0681                   u5220 0625  
                 u5060 054F                   u5301 0680  
                 u5221 0624                   u5061 054E  
                 _CVRR 04ED                   u5310 068A  
                 u5230 062C                   u5150 05C4  
                 u5070 0568                   u5311 0689  
                 u5231 062B                   u5151 05C3  
                 u5071 0567                   u5400 02C1  
                 u5320 06A3                   u5160 05CD  
                 u5080 056F                   u5401 02C0  
                 u5321 06A2                   u5161 05CC  
                 u5081 056E                   u5330 06AA  
                 u5250 0642                   u5170 05E6  
                 _PEIE 005E                   u5331 06A9  
                 u5251 0641                   u5171 05E5  
                 u5500 0378                   u5420 02D4  
                 u5260 064B                   u5180 05ED  
                 _INTE 005C                   u5501 0377  
                 u5421 02D3                   u5261 064A  
                 u5181 05EC                   _INTF 0059  
                 u5430 02DE                   u5350 06C0  
                 u5270 0664                   _RBIE 005B  
                 u5431 02DD                   u5415 02C6  
                 u5351 06BF                   u5271 0663  
                 _RBIF 0058                   u5600 07C6  
                 u5520 0389                   u5360 06C9  
                 u5280 066B                   u4800 0125  
                 u5601 07C5                   u5521 0388  
                 u5361 06C8                   u5281 066A  
                 u4801 0124                   u5610 07D0  
                 u5450 02F1                   u5370 06E2  
                 u4810 012F                   _RCIE 0465  
                 u5611 07CF                   u5515 0379  
                 u5451 02F0                   u5435 02DA  
                 u5371 06E1                   u4811 012E  
                 _RCIF 0065                   _RCEN 048B  
                 u5540 039D                   u5460 0346  
                 u5380 0FD9                   u4900 01BF  
                 u4820 014B                   u5541 039C  
                 u5525 0385                   u5461 0345  
                 u5445 02E5                   u5381 0FD8  
                 u4901 01BE                   u4821 014A  
                 u4805 0121                   u5710 0335  
                 u5630 07E3                   u5550 03A1  
                 u5470 0352                   u5390 02BA  
                 u4910 01C9                   u4830 0155  
                 u5711 0334                   u5631 07E2  
                 u5615 07CC                   u5535 0391  
                 u5471 0351                   u5391 02B9  
                 u4911 01C8                   u4831 0154  
                 u4815 012B                   _PCON 008E  
                 u5720 0446                   u5640 07E7  
                 u5560 079C                   u5480 0365  
                 u4920 01D3                   u4840 015F  
                 _PIR1 000C                   u5721 0445  
                 u5705 0329                   u5625 07D7  
                 u5561 079B                   u5481 0364  
                 u4921 01D2                   u4905 01BB  
                 u4841 015E                   u4825 0147  
                 _PIR2 000D                   u5730 045E  
                 u5650 02FD                   u5570 07A8  
                 u4930 01DD                   u4850 0169  
                 u5731 045D                   u5651 02FC  
                 u5571 07A7                   u5395 02B6  
                 u4931 01DC                   u4915 01C5  
                 u4851 0168                   u4835 0151  
                 u5740 0476                   u5580 07B3  
                 u4940 01F9                   u4860 0185  
                 u4780 0111                   u5741 0475  
                 u5725 0442                   u5581 07B2  
                 u4941 01F8                   u4925 01CF  
                 u4861 0184                   u4845 015B  
                 u4781 0110                   u5750 048E  
                 u5670 0310                   u4950 0203  
                 u4870 018F                   u4790 011B  
                 u5751 048D                   u5735 045A  
                 u5671 030F                   u5495 036A  
                 u4951 0202                   u4935 01D9  
                 u4871 018E                   u4855 0165  
                 u4791 011A                   u5760 04A6  
                 u4960 020D                   u4880 0199  
                 u5761 04A5                   u5745 0472  
                 u5665 0302                   u4961 020C  
                 u4945 01F5                   u4881 0198  
                 u4865 0181                   u4785 010D  
                 _OERR 00C1                   u5770 04BE  
                 u5690 0321                   u4970 0217  
                 u4890 01A3                   u5771 04BD  
                 u5755 048A                   u5691 0320  
                 u5595 07B8                   u4971 0216  
                 u4955 01FF                   u4891 01A2  
                 u4875 018B                   u4795 0117  
                 u5780 04D6                   u4980 04ED  
                 u5781 04D5                   u5765 04A2  
                 u5685 0311                   u4981 04EC  
                 u4965 0209                   u4885 0195  
                 u5790 07FF                   u5791 07FE  
                 u5775 04BA                   u5695 031D  
                 u4975 0213                   u4895 019F  
                 u5785 04D2                   u5795 07FB  
                 _RBPU 040F                   _RX9D 00C0  
                 _TMR0 0001                   _TMR2 0011  
                 _WCOL 00A7                   _SPEN 00C7  
  __end_of_Serial_Init 026C                   _RSEN 0489  
            __databank 0001                   _TX9D 04C0  
                 _SREN 00C5                   _TRMT 04C1  
                 _STOP 04A4                   _ZERO 001A  
                 _TXIE 0464                   _WREN 0C62  
                 _TXIF 0064                   _TXEN 04C5  
                 _SYNC 04C4      _Lcd8_Display_word 0020  
            _adc_temp0 0056          ?_Lcd8_Command 002E  
        ?_Lcd8_Display 0020                   _main 0030  
                 _val1 003E                   _temp 0074  
                 _pres 005C                   btemp 007E  
                 start 0000           ___awdiv_sign 0031  
    _Lcd8_Decimal3_com 0021      _Lcd8_Decimal3_val 0020  
      ___awmod_divisor 002E        __end_of_Receive 0FE7  
      ___awmod_counter 0031           ?_Serial_Init 0020  
         ___awmod_sign 0030       __end_of_Adc8_Cha 0700  
      __end_of___awdiv 03AE        __end_of___awmod 07EE  
            stringcode 0708          __end_of_Delay 0800  
      __end_of___lwdiv 033D       ___lwdiv_quotient 0031  
      __end_of___lwmod 02F3                _CCP1CON 0017  
              _CCP2CON 001D                _ACKSTAT 048E  
                _C1INV 04E4     _Lcd8_Display_Lcd_i 0024  
                _C2INV 04E5                  _C1OUT 04E6  
                _C2OUT 04E7                  _ADCS0 00FE  
                _ADCS1 00FF                  _ADCS2 04FE  
                _ADDEN 00C3                  ?_main 0020  
                _ACKEN 048C                  _ACKDT 048D  
                _BCLIE 046B                  _BCLIF 006B  
                _CCP1X 00BD                  _CCP1Y 00BC  
                _CCP2X 00ED                  _CCP2Y 00EC  
                _EEADR 010D                  _CARRY 0018  
                _EEPGD 0C67                  _CMCON 009C  
       ?_Lcd8_Decimal3 0020                  _T1CON 0010  
                _T2CON 0012                _T1CKPS0 0084  
              _T1CKPS1 0085                  _PCFG0 04F8  
                _PCFG1 04F9                  _PCFG2 04FA  
                _PCFG3 04FB                _T2CKPS0 0090  
              _T2CKPS1 0091                  _CVREN 04EF  
                _CVROE 04EE                  _RCREG 001A  
                _RCSTA 0018                  _TMR1H 000F  
                _TMR1L 000E                  _SPBRG 0099  
                _PORTA 0005                  _PORTB 0006  
      ??_Lcd8_Decimal3 0021                _T1OSCEN 0083  
                _PORTC 0007                  _PORTD 0008  
                _PORTE 0009                  _PSPIE 0467  
                _PSPIF 0067                  _START 04A3  
                _SSPM0 00A0                  _SSPM1 00A1  
                _SSPM2 00A2                  _SSPM3 00A3  
                _TRISA 0085                  _TRISB 0086  
                _TRISC 0087                  _TRISD 0088  
                _SSPIE 0463                  _TRISE 0089  
                _SSPIF 0063                  _SSPEN 00A5  
                _SSPOV 00A6                  _WRERR 0C63  
                _TXREG 0019                  _TXSTA 0098  
                _Delay 07EE       __end_of_Baudrate 04DC  
                _adc_j 005E                  _count 00EA  
              _PSPMODE 044C                _SSPCON2 0091  
              _SSPSTAT 0094                _TOUTPS0 0093  
              _TOUTPS1 0094                _TOUTPS2 0095  
              _TOUTPS3 0096                  pclath 000A  
                status 0003       ___awmod_dividend 002C  
              _Receive 0FCF               ?_Receive 0020  
           _Lcd8_Write 026C     __end_of_Lcd8_Write 0290  
            ??_Receive 0020       ___awdiv_dividend 002C  
          __stringbase 070E           _Adc8_Cha_val 0022  
        ??_Serial_Init 0024                ___awdiv 033D  
              ___awmod 0793                _adc_del 0060  
             ?___awdiv 002C               ?___awmod 002C  
              _adc_val 005F                ___lwdiv 02F3  
              ___lwmod 02BB               ?___lwdiv 002C  
             ?___lwmod 002C              ??___awdiv 0030  
            ??___awmod 0030            ?_Lcd8_Write 002C  
            ??___lwdiv 0030              ??___lwmod 0030  
               ??_main 0020        ___lwdiv_divisor 002E  
      ___lwdiv_counter 0030                 ?_Delay 002F  
             stringdir 0709               stringjmp 070D  
             stringtab 0700                 _ADCON0 001F  
               _ADCON1 009F                 _CCP1M0 00B8  
               _CCP1M1 00B9                 _CCP1M2 00BA  
               _CCP1M3 00BB                 _CCP2M0 00E8  
               _CCP2M1 00E9                 _CCP2M2 00EA  
               _CCP2M3 00EB                 _CCP1IE 0462  
               _CCP1IF 0062                 _CCP2IE 0468  
               _CCP2IF 0068                 _ADRESH 001E  
               _EEADRH 010F                 _ADRESL 009E  
               _EEADRL 010D                 _EEDATA 010C  
               _CCPR1H 0016                 _EEDATH 010E  
               _CCPR2H 001C                 _CCPR1L 0015  
               _CCPR2L 001B                 _EECON1 018C  
               _EECON2 018D           __end_of_main 022D  
     ___awdiv_quotient 0032                 _GODONE 00FA  
               _CVRCON 009D                 _T1SYNC 0082  
               _INTEDG 040E                 _PCLATH 000A  
               _INTCON 000B           ??_Lcd8_Write 002D  
               _TMR0IE 005D                 _TMR0IF 005A  
               _TMR1IE 0460                 _TMR1IF 0060  
               _TMR1CS 0081                 _TMR2IE 0461  
               _TMR2IF 0061                 _TMR1ON 0080  
               _OPTION 0081                 _TMR2ON 0092  
       ??_Lcd8_Command 002E                 _SSPADD 0093  
               _TRISA0 0428                 _TRISA1 0429  
               _TRISB0 0430                 _TRISA2 042A  
               _TRISB1 0431                 _TRISA3 042B  
               _TRISC0 0438                 _TRISB2 0432  
               _TRISA4 042C                 _TRISC1 0439  
               _TRISB3 0433                 _TRISA5 042D  
               _TRISD0 0440                 _TRISC2 043A  
               _TRISB4 0434                 _TRISD1 0441  
               _TRISC3 043B                 _TRISB5 0435  
       ??_Lcd8_Display 0023                 _TRISE0 0448  
               _TRISD2 0442                 _TRISC4 043C  
               _TRISB6 0436                 _TRISE1 0449  
               _TRISD3 0443                 _TRISC5 043D  
               _TRISB7 0437                 _TRISE2 044A  
               _TRISD4 0444                 _TRISC6 043E  
               _TRISD5 0445                 _TRISC7 043F  
               _TRISD6 0446                 _TRISD7 0447  
               _STATUS 0003                 _SSPCON 0014  
               _SSPBUF 0013                 _Lcd_en 003D  
               _Lcd_rs 003C              _Lcd8_Init 0FE7  
    __end_of_Lcd8_Init 1000        ___awdiv_divisor 002E  
       _Lcd8_Display_n 0021        ___awdiv_counter 0030  
           ?_Lcd8_Init 0020           _Receive_rece 0020  
 _Lcd8_Decimal3_Lcd_hr 0028              _Delay_del 002F  
             _Adc8_Cha 04DC              ?_Adc8_Cha 0020  
        _Lcd8_Decimal3 03AE             ??_Adc8_Cha 0022  
          ??_Lcd8_Init 0020               _Baudrate 0434  
  _Lcd8_Decimal3_Lcd_h 0022    _Lcd8_Decimal3_Lcd_o 0026  
  _Lcd8_Decimal3_Lcd_t 0024              ?_Baudrate 0024  
__end_of_Lcd8_Decimal3 0434             ??_Baudrate 0028  
         _Lcd8_Command 022D           _Lcd8_Display 0290  
 __end_of_Lcd8_Command 024B   __end_of_Lcd8_Display 02BB  
     _Serial_Init_baud 0020              __Hrdata_1 00EA  
            __Hramdata 00EA               __Hrbss_0 007E  
             __Hrbss_1 00F0  
