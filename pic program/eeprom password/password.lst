

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Aug 15 13:03:11 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 3 "E:\pic program\eeprom password\password.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 3 "E:\pic program\eeprom password\password.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFBF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_Lcd8_Init
    47                           	FNCALL	_main,_Lcd8_Display
    48                           	FNCALL	_main,_cmd
    49                           	FNCALL	_main,_write
    50                           	FNCALL	_Lcd8_Display,_Lcd8_Write
    51                           	FNCALL	_Lcd8_Write,_Lcd8_Command
    52                           	FNCALL	_Lcd8_Write,_Delay
    53                           	FNCALL	_Lcd8_Init,_Lcd8_Command
    54                           	FNCALL	_Lcd8_Command,_Delay
    55                           	FNROOT	_main
    56                           	global	_b
    57                           psect	idataBANK0,class=CODE,space=0,delta=2
    58                           global __pidataBANK0
    59  05EA                     __pidataBANK0:
    60                           	file	"E:\pic program\eeprom password\password.c"
    61                           	line	14
    62                           
    63                           ;initializer for _b
    64  05EA  3432               	retlw	032h
    65  05EB  3430               	retlw	030h
    66  05EC  3430               	retlw	030h
    67  05ED  3434               	retlw	034h
    68  05EE  3400               	retlw	0
    69                           	global	_key
    70                           	global	_m
    71                           	global	_a
    72                           	global	_PORTD
    73  0008                     _PORTD	set	8
    74                           	global	_CARRY
    75  0018                     _CARRY	set	24
    76                           	global	_GIE
    77  005F                     _GIE	set	95
    78                           	global	_Lcd_en
    79  003D                     _Lcd_en	set	61
    80                           	global	_Lcd_rs
    81  003C                     _Lcd_rs	set	60
    82                           	global	_RB0
    83  0030                     _RB0	set	48
    84                           	global	_RB1
    85  0031                     _RB1	set	49
    86                           	global	_RB2
    87  0032                     _RB2	set	50
    88                           	global	_RB3
    89  0033                     _RB3	set	51
    90                           	global	_RB4
    91  0034                     _RB4	set	52
    92                           	global	_RB5
    93  0035                     _RB5	set	53
    94                           	global	_RB6
    95  0036                     _RB6	set	54
    96                           	global	_TRISB
    97  0086                     _TRISB	set	134
    98                           	global	_TRISC
    99  0087                     _TRISC	set	135
   100                           	global	_TRISD
   101  0088                     _TRISD	set	136
   102                           	global	_EEADR
   103  010D                     _EEADR	set	269
   104                           	global	_EEDATA
   105  010C                     _EEDATA	set	268
   106                           	global	_EECON1
   107  018C                     _EECON1	set	396
   108                           	global	_EECON2
   109  018D                     _EECON2	set	397
   110                           	global	_RD
   111  0C60                     _RD	set	3168
   112                           	global	_WR
   113  0C61                     _WR	set	3169
   114                           	global	_WREN
   115  0C62                     _WREN	set	3170
   116                           psect	strings,class=STRING,delta=2
   117                           global __pstrings
   118  0003                     __pstrings:
   119                           ;	global	stringdir,stringtab,__stringbase
   120  0003                     stringtab:
   121                           ;	String table - string pointers are 1 byte each
   122  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   123  0003  3000               movlw high(stringdir)
   124  0004  008A               movwf pclath
   125  0005  0804               movf fsr,w
   126  0006  0A84               incf fsr
   127  0007  0782               	addwf pc
   128  0008                     __stringbase:
   129  0008  3400               	retlw	0
   130                           psect	strings
   131                           	
   132  0009                     STR_1:	
   133  0009  3445               	retlw	69	;'E'
   134  000A  344E               	retlw	78	;'N'
   135  000B  3454               	retlw	84	;'T'
   136  000C  3445               	retlw	69	;'E'
   137  000D  3452               	retlw	82	;'R'
   138  000E  3445               	retlw	69	;'E'
   139  000F  3444               	retlw	68	;'D'
   140  0010  3420               	retlw	32	;' '
   141  0011  344B               	retlw	75	;'K'
   142  0012  3445               	retlw	69	;'E'
   143  0013  3459               	retlw	89	;'Y'
   144  0014  343A               	retlw	58	;':'
   145  0015  3400               	retlw	0
   146                           psect	strings
   147                           	file	"password.as"
   148                           	line	#
   149                           psect cinit,class=CODE,delta=2
   150                           global start_initialization
   151  065C                     start_initialization:
   152                           
   153                           psect	bssCOMMON,class=COMMON,space=1
   154                           global __pbssCOMMON
   155  007D                     __pbssCOMMON:
   156  007D                     _a:
   157  007D                            ds      1
   158                           
   159                           psect	bssBANK0,class=BANK0,space=1
   160                           global __pbssBANK0
   161  0025                     __pbssBANK0:
   162  0025                     _key:
   163  0025                            ds      1
   164                           
   165  0026                     _m:
   166  0026                            ds      1
   167                           
   168                           psect	dataBANK0,class=BANK0,space=1
   169                           global __pdataBANK0
   170  0020                     __pdataBANK0:
   171                           	file	"E:\pic program\eeprom password\password.c"
   172  0020                     _b:
   173  0020                            ds      5
   174                           
   175                           ; Clear objects allocated to COMMON
   176                           psect cinit,class=CODE,delta=2
   177  065C  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   178                           ; Clear objects allocated to BANK0
   179                           psect cinit,class=CODE,delta=2
   180  065D  01A5               	clrf	((__pbssBANK0)+0)&07Fh
   181  065E  01A6               	clrf	((__pbssBANK0)+1)&07Fh
   182                           ; Initialize objects allocated to BANK0
   183                           	global __pidataBANK0
   184                           psect cinit,class=CODE,delta=2
   185  065F  120A  118A  25EA   	fcall	__pidataBANK0+0		;fetch initializer
              120A  118A         
   186  0664  00A0               	movwf	__pdataBANK0+0&07fh		
   187  0665  120A  118A  25EB   	fcall	__pidataBANK0+1		;fetch initializer
              120A  118A         
   188  066A  00A1               	movwf	__pdataBANK0+1&07fh		
   189  066B  120A  118A  25EC   	fcall	__pidataBANK0+2		;fetch initializer
              120A  118A         
   190  0670  00A2               	movwf	__pdataBANK0+2&07fh		
   191  0671  120A  118A  25ED   	fcall	__pidataBANK0+3		;fetch initializer
              120A  118A         
   192  0676  00A3               	movwf	__pdataBANK0+3&07fh		
   193  0677  120A  118A  25EE   	fcall	__pidataBANK0+4		;fetch initializer
              120A  118A         
   194  067C  00A4               	movwf	__pdataBANK0+4&07fh		
   195                           psect cinit,class=CODE,delta=2
   196                           global end_of_initialization
   197                           
   198                           ;End of C runtime variable initialization code
   199                           
   200  067D                     end_of_initialization:
   201  067D  0183               clrf status
   202  067E  120A  118A  2EAA   ljmp _main	;jump to C main() function
   203                           psect	cstackCOMMON,class=COMMON,space=1
   204                           global __pcstackCOMMON
   205  0070                     __pcstackCOMMON:
   206                           	global	?_Lcd8_Command
   207  0070                     ?_Lcd8_Command:	; 0 bytes @ 0x0
   208                           	global	?_Delay
   209  0070                     ?_Delay:	; 0 bytes @ 0x0
   210                           	global	?_Lcd8_Init
   211  0070                     ?_Lcd8_Init:	; 0 bytes @ 0x0
   212                           	global	?_main
   213  0070                     ?_main:	; 0 bytes @ 0x0
   214                           	global	?_cmd
   215  0070                     ?_cmd:	; 2 bytes @ 0x0
   216                           	global	?_write
   217  0070                     ?_write:	; 2 bytes @ 0x0
   218                           	global	Delay@del
   219  0070                     Delay@del:	; 2 bytes @ 0x0
   220  0070                     	ds	2
   221                           	global	??_Lcd8_Command
   222  0072                     ??_Lcd8_Command:	; 0 bytes @ 0x2
   223                           	global	??_Delay
   224  0072                     ??_Delay:	; 0 bytes @ 0x2
   225                           	global	??_cmd
   226  0072                     ??_cmd:	; 0 bytes @ 0x2
   227                           	global	??_write
   228  0072                     ??_write:	; 0 bytes @ 0x2
   229                           	global	Lcd8_Command@com
   230  0072                     Lcd8_Command@com:	; 1 bytes @ 0x2
   231  0072                     	ds	1
   232                           	global	??_Lcd8_Init
   233  0073                     ??_Lcd8_Init:	; 0 bytes @ 0x3
   234                           	global	?_Lcd8_Write
   235  0073                     ?_Lcd8_Write:	; 0 bytes @ 0x3
   236                           	global	Lcd8_Write@lr
   237  0073                     Lcd8_Write@lr:	; 1 bytes @ 0x3
   238  0073                     	ds	1
   239                           	global	??_Lcd8_Write
   240  0074                     ??_Lcd8_Write:	; 0 bytes @ 0x4
   241                           	global	Lcd8_Write@com
   242  0074                     Lcd8_Write@com:	; 1 bytes @ 0x4
   243  0074                     	ds	1
   244                           	global	?_Lcd8_Display
   245  0075                     ?_Lcd8_Display:	; 0 bytes @ 0x5
   246                           	global	Lcd8_Display@word
   247  0075                     Lcd8_Display@word:	; 1 bytes @ 0x5
   248  0075                     	ds	1
   249                           	global	Lcd8_Display@n
   250  0076                     Lcd8_Display@n:	; 2 bytes @ 0x6
   251  0076                     	ds	2
   252                           	global	??_Lcd8_Display
   253  0078                     ??_Lcd8_Display:	; 0 bytes @ 0x8
   254  0078                     	ds	2
   255                           	global	Lcd8_Display@com
   256  007A                     Lcd8_Display@com:	; 1 bytes @ 0xA
   257  007A                     	ds	1
   258                           	global	Lcd8_Display@Lcd_i
   259  007B                     Lcd8_Display@Lcd_i:	; 1 bytes @ 0xB
   260  007B                     	ds	1
   261                           	global	??_main
   262  007C                     ??_main:	; 0 bytes @ 0xC
   263  007C                     	ds	1
   264 ;;Data sizes: Strings 13, constant 0, data 5, bss 3, persistent 0 stack 0
   265 ;;Auto spaces:   Size  Autos    Used
   266 ;; COMMON          14     13      14
   267 ;; BANK0           80      0       7
   268 ;; BANK1           80      0       0
   269 ;; BANK3           96      0       0
   270 ;; BANK2           96      0       0
   271                           
   272 ;;
   273 ;; Pointer list with targets:
   274                           
   275 ;; Lcd8_Display@word	PTR const unsigned char  size(1) Largest target is 13
   276 ;;		 -> STR_1(CODE[13]), 
   277 ;;
   278                           
   279                           
   280 ;;
   281 ;; Critical Paths under _main in COMMON
   282 ;;
   283 ;;   _main->_Lcd8_Display
   284 ;;   _Lcd8_Display->_Lcd8_Write
   285 ;;   _Lcd8_Write->_Lcd8_Command
   286 ;;   _Lcd8_Init->_Lcd8_Command
   287 ;;   _Lcd8_Command->_Delay
   288 ;;
   289 ;; Critical Paths under _main in BANK0
   290 ;;
   291 ;;   None.
   292 ;;
   293 ;; Critical Paths under _main in BANK1
   294 ;;
   295 ;;   None.
   296 ;;
   297 ;; Critical Paths under _main in BANK3
   298 ;;
   299 ;;   None.
   300 ;;
   301 ;; Critical Paths under _main in BANK2
   302 ;;
   303 ;;   None.
   304                           
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   307 ;;
   308                           
   309 ;;
   310 ;;Call Graph Tables:
   311 ;;
   312 ;; ---------------------------------------------------------------------------------
   313 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   314 ;; ---------------------------------------------------------------------------------
   315 ;; (0) _main                                                 1     1      0     288
   316 ;;                                             12 COMMON     1     1      0
   317 ;;                          _Lcd8_Init
   318 ;;                       _Lcd8_Display
   319 ;;                                _cmd
   320 ;;                              _write
   321 ;; ---------------------------------------------------------------------------------
   322 ;; (1) _Lcd8_Display                                         7     4      3     244
   323 ;;                                              5 COMMON     7     4      3
   324 ;;                         _Lcd8_Write
   325 ;; ---------------------------------------------------------------------------------
   326 ;; (2) _Lcd8_Write                                           2     1      1     110
   327 ;;                                              3 COMMON     2     1      1
   328 ;;                       _Lcd8_Command
   329 ;;                              _Delay
   330 ;; ---------------------------------------------------------------------------------
   331 ;; (1) _Lcd8_Init                                            0     0      0      44
   332 ;;                       _Lcd8_Command
   333 ;; ---------------------------------------------------------------------------------
   334 ;; (3) _Lcd8_Command                                         1     1      0      44
   335 ;;                                              2 COMMON     1     1      0
   336 ;;                              _Delay
   337 ;; ---------------------------------------------------------------------------------
   338 ;; (1) _write                                                2     0      2       0
   339 ;;                                              0 COMMON     2     0      2
   340 ;; ---------------------------------------------------------------------------------
   341 ;; (1) _cmd                                                  2     0      2       0
   342 ;;                                              0 COMMON     2     0      2
   343 ;; ---------------------------------------------------------------------------------
   344 ;; (3) _Delay                                                2     0      2      22
   345 ;;                                              0 COMMON     2     0      2
   346 ;; ---------------------------------------------------------------------------------
   347 ;; Estimated maximum stack depth 3
   348 ;; ---------------------------------------------------------------------------------
   349                           
   350 ;; Call Graph Graphs:
   351                           
   352 ;; _main (ROOT)
   353 ;;   _Lcd8_Init
   354 ;;     _Lcd8_Command
   355 ;;       _Delay
   356 ;;   _Lcd8_Display
   357 ;;     _Lcd8_Write
   358 ;;       _Lcd8_Command
   359 ;;         _Delay
   360 ;;       _Delay
   361 ;;   _cmd
   362 ;;   _write
   363 ;;
   364                           
   365 ;; Address spaces:
   366                           
   367 ;;Name               Size   Autos  Total    Cost      Usage
   368 ;;BANK3               60      0       0       9        0.0%
   369 ;;BITBANK3            60      0       0       8        0.0%
   370 ;;SFR3                 0      0       0       4        0.0%
   371 ;;BITSFR3              0      0       0       4        0.0%
   372 ;;BANK2               60      0       0      11        0.0%
   373 ;;BITBANK2            60      0       0      10        0.0%
   374 ;;SFR2                 0      0       0       5        0.0%
   375 ;;BITSFR2              0      0       0       5        0.0%
   376 ;;SFR1                 0      0       0       2        0.0%
   377 ;;BITSFR1              0      0       0       2        0.0%
   378 ;;BANK1               50      0       0       7        0.0%
   379 ;;BITBANK1            50      0       0       6        0.0%
   380 ;;CODE                 0      0       0       0        0.0%
   381 ;;DATA                 0      0      19      12        0.0%
   382 ;;ABS                  0      0      15       3        0.0%
   383 ;;NULL                 0      0       0       0        0.0%
   384 ;;STACK                0      0       4       2        0.0%
   385 ;;BANK0               50      0       7       5        8.8%
   386 ;;BITBANK0            50      0       0       4        0.0%
   387 ;;SFR0                 0      0       0       1        0.0%
   388 ;;BITSFR0              0      0       0       1        0.0%
   389 ;;COMMON               E      D       E       1      100.0%
   390 ;;BITCOMMON            E      0       0       0        0.0%
   391 ;;EEDATA             100      0       0       0        0.0%
   392                           
   393                           	global	_main
   394                           psect	maintext,global,class=CODE,delta=2
   395                           global __pmaintext
   396  06AA                     __pmaintext:
   397                           
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 18 in file "E:\pic program\eeprom password\password.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;		None               void
   407 ;; Registers used:
   408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 17F/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          1       0       0       0       0
   417 ;;      Totals:         1       0       0       0       0
   418 ;;Total ram usage:        1 bytes
   419 ;; Hardware stack levels required when called:    4
   420 ;; This function calls:
   421 ;;		_Lcd8_Init
   422 ;;		_Lcd8_Display
   423 ;;		_cmd
   424 ;;		_write
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           psect	maintext
   430                           	file	"E:\pic program\eeprom password\password.c"
   431                           	line	18
   432                           	global	__size_of_main
   433  0156                     	__size_of_main	equ	__end_of_main-_main
   434                           	
   435  06AA                     _main:	
   436                           	opt	stack 4
   437                           ; Regs used in _main: [allreg]
   438                           	line	19
   439                           	
   440  06AA                     l3128:	
   441                           ;password.c: 19: TRISC = 0xC0;
   442  06AA  30C0               	movlw	(0C0h)
   443  06AB  1683               	bsf	status, 5	;RP0=1, select bank1
   444  06AC  1303               	bcf	status, 6	;RP1=0, select bank1
   445  06AD  0087               	movwf	(135)^080h	;volatile
   446                           	line	20
   447                           	
   448  06AE                     l3130:	
   449                           ;password.c: 20: TRISD = 0x00;
   450  06AE  0188               	clrf	(136)^080h	;volatile
   451                           	line	21
   452                           	
   453  06AF                     l3132:	
   454                           ;password.c: 21: TRISB = 0xff;
   455  06AF  30FF               	movlw	(0FFh)
   456  06B0  0086               	movwf	(134)^080h	;volatile
   457                           	line	22
   458                           	
   459  06B1                     l3134:	
   460                           ;password.c: 22: Lcd8_Init();
   461  06B1  120A  118A  2603   	fcall	_Lcd8_Init
              120A  118A         
   462                           	line	23
   463                           	
   464  06B6                     l3136:	
   465                           ;password.c: 23: Lcd8_Display(0x80,"ENTERED KEY:",12);
   466  06B6  3001               	movlw	((STR_1-__stringbase))&0ffh
   467  06B7  00FC               	movwf	(??_main+0)+0
   468  06B8  087C               	movf	(??_main+0)+0,w
   469  06B9  00F5               	movwf	(?_Lcd8_Display)
   470  06BA  300C               	movlw	low(0Ch)
   471  06BB  00F6               	movwf	0+(?_Lcd8_Display)+01h
   472  06BC  3000               	movlw	high(0Ch)
   473  06BD  00F7               	movwf	(0+(?_Lcd8_Display)+01h)+1
   474  06BE  3080               	movlw	(080h)
   475  06BF  120A  118A  2681   	fcall	_Lcd8_Display
              120A  118A         
   476  06C4  2EC5               	goto	l3138
   477                           	line	25
   478                           ;password.c: 25: while(1)
   479                           	
   480  06C5                     l735:	
   481                           	line	27
   482                           	
   483  06C5                     l3138:	
   484                           ;password.c: 26: {
   485                           ;password.c: 27: cmd(0x8c);
   486  06C5  308C               	movlw	low(08Ch)
   487  06C6  00F0               	movwf	(?_cmd)
   488  06C7  3000               	movlw	high(08Ch)
   489  06C8  00F1               	movwf	((?_cmd))+1
   490  06C9  120A  118A  2000   	fcall	_cmd
              120A  118A         
   491                           	line	28
   492                           	
   493  06CE                     l3140:	
   494                           ;password.c: 28: RB0 = 0; RB1 = 1; RB2 = 1;
   495  06CE  1283               	bcf	status, 5	;RP0=0, select bank0
   496  06CF  1303               	bcf	status, 6	;RP1=0, select bank0
   497  06D0  1006               	bcf	(48/8),(48)&7
   498                           	
   499  06D1                     l3142:	
   500  06D1  1486               	bsf	(49/8),(49)&7
   501                           	
   502  06D2                     l3144:	
   503  06D2  1506               	bsf	(50/8),(50)&7
   504                           	line	29
   505                           	
   506  06D3                     l3146:	
   507                           ;password.c: 29: if(!RB3){while(!RB3);write('1');}
   508  06D3  1986               	btfsc	(51/8),(51)&7
   509  06D4  2ED6               	goto	u2501
   510  06D5  2ED7               	goto	u2500
   511  06D6                     u2501:
   512  06D6  2EE8               	goto	l3152
   513  06D7                     u2500:
   514  06D7  2ED9               	goto	l737
   515                           	
   516  06D8                     l3148:	
   517  06D8  2ED9               	goto	l737
   518                           	
   519  06D9                     l738:	
   520                           	
   521  06D9                     l737:	
   522  06D9  1D86               	btfss	(51/8),(51)&7
   523  06DA  2EDC               	goto	u2511
   524  06DB  2EDD               	goto	u2510
   525  06DC                     u2511:
   526  06DC  2ED9               	goto	l737
   527  06DD                     u2510:
   528  06DD  2EDE               	goto	l3150
   529                           	
   530  06DE                     l739:	
   531                           	
   532  06DE                     l3150:	
   533  06DE  3031               	movlw	low(031h)
   534  06DF  00F0               	movwf	(?_write)
   535  06E0  3000               	movlw	high(031h)
   536  06E1  00F1               	movwf	((?_write))+1
   537  06E2  120A  118A  2000   	fcall	_write
              120A  118A         
   538  06E7  2EE8               	goto	l3152
   539                           	
   540  06E8                     l736:	
   541                           	line	30
   542                           	
   543  06E8                     l3152:	
   544                           ;password.c: 30: if(!RB4){while(!RB4);write('4');}
   545  06E8  1283               	bcf	status, 5	;RP0=0, select bank0
   546  06E9  1303               	bcf	status, 6	;RP1=0, select bank0
   547  06EA  1A06               	btfsc	(52/8),(52)&7
   548  06EB  2EED               	goto	u2521
   549  06EC  2EEE               	goto	u2520
   550  06ED                     u2521:
   551  06ED  2EFF               	goto	l3158
   552  06EE                     u2520:
   553  06EE  2EF0               	goto	l741
   554                           	
   555  06EF                     l3154:	
   556  06EF  2EF0               	goto	l741
   557                           	
   558  06F0                     l742:	
   559                           	
   560  06F0                     l741:	
   561  06F0  1E06               	btfss	(52/8),(52)&7
   562  06F1  2EF3               	goto	u2531
   563  06F2  2EF4               	goto	u2530
   564  06F3                     u2531:
   565  06F3  2EF0               	goto	l741
   566  06F4                     u2530:
   567  06F4  2EF5               	goto	l3156
   568                           	
   569  06F5                     l743:	
   570                           	
   571  06F5                     l3156:	
   572  06F5  3034               	movlw	low(034h)
   573  06F6  00F0               	movwf	(?_write)
   574  06F7  3000               	movlw	high(034h)
   575  06F8  00F1               	movwf	((?_write))+1
   576  06F9  120A  118A  2000   	fcall	_write
              120A  118A         
   577  06FE  2EFF               	goto	l3158
   578                           	
   579  06FF                     l740:	
   580                           	line	31
   581                           	
   582  06FF                     l3158:	
   583                           ;password.c: 31: if(!RB5){while(!RB5);write('7');}
   584  06FF  1283               	bcf	status, 5	;RP0=0, select bank0
   585  0700  1303               	bcf	status, 6	;RP1=0, select bank0
   586  0701  1A86               	btfsc	(53/8),(53)&7
   587  0702  2F04               	goto	u2541
   588  0703  2F05               	goto	u2540
   589  0704                     u2541:
   590  0704  2F16               	goto	l3164
   591  0705                     u2540:
   592  0705  2F07               	goto	l745
   593                           	
   594  0706                     l3160:	
   595  0706  2F07               	goto	l745
   596                           	
   597  0707                     l746:	
   598                           	
   599  0707                     l745:	
   600  0707  1E86               	btfss	(53/8),(53)&7
   601  0708  2F0A               	goto	u2551
   602  0709  2F0B               	goto	u2550
   603  070A                     u2551:
   604  070A  2F07               	goto	l745
   605  070B                     u2550:
   606  070B  2F0C               	goto	l3162
   607                           	
   608  070C                     l747:	
   609                           	
   610  070C                     l3162:	
   611  070C  3037               	movlw	low(037h)
   612  070D  00F0               	movwf	(?_write)
   613  070E  3000               	movlw	high(037h)
   614  070F  00F1               	movwf	((?_write))+1
   615  0710  120A  118A  2000   	fcall	_write
              120A  118A         
   616  0715  2F16               	goto	l3164
   617                           	
   618  0716                     l744:	
   619                           	line	32
   620                           	
   621  0716                     l3164:	
   622                           ;password.c: 32: if(!RB6){while(!RB6);write('*');}
   623  0716  1283               	bcf	status, 5	;RP0=0, select bank0
   624  0717  1303               	bcf	status, 6	;RP1=0, select bank0
   625  0718  1B06               	btfsc	(54/8),(54)&7
   626  0719  2F1B               	goto	u2561
   627  071A  2F1C               	goto	u2560
   628  071B                     u2561:
   629  071B  2F2D               	goto	l3170
   630  071C                     u2560:
   631  071C  2F1E               	goto	l749
   632                           	
   633  071D                     l3166:	
   634  071D  2F1E               	goto	l749
   635                           	
   636  071E                     l750:	
   637                           	
   638  071E                     l749:	
   639  071E  1F06               	btfss	(54/8),(54)&7
   640  071F  2F21               	goto	u2571
   641  0720  2F22               	goto	u2570
   642  0721                     u2571:
   643  0721  2F1E               	goto	l749
   644  0722                     u2570:
   645  0722  2F23               	goto	l3168
   646                           	
   647  0723                     l751:	
   648                           	
   649  0723                     l3168:	
   650  0723  302A               	movlw	low(02Ah)
   651  0724  00F0               	movwf	(?_write)
   652  0725  3000               	movlw	high(02Ah)
   653  0726  00F1               	movwf	((?_write))+1
   654  0727  120A  118A  2000   	fcall	_write
              120A  118A         
   655  072C  2F2D               	goto	l3170
   656                           	
   657  072D                     l748:	
   658                           	line	33
   659                           	
   660  072D                     l3170:	
   661                           ;password.c: 33: RB0 = 1; RB1 = 0; RB2 = 1;
   662  072D  1283               	bcf	status, 5	;RP0=0, select bank0
   663  072E  1303               	bcf	status, 6	;RP1=0, select bank0
   664  072F  1406               	bsf	(48/8),(48)&7
   665                           	
   666  0730                     l3172:	
   667  0730  1086               	bcf	(49/8),(49)&7
   668                           	
   669  0731                     l3174:	
   670  0731  1506               	bsf	(50/8),(50)&7
   671                           	line	34
   672                           	
   673  0732                     l3176:	
   674                           ;password.c: 34: if(!RB3){while(!RB3);write('2');}
   675  0732  1986               	btfsc	(51/8),(51)&7
   676  0733  2F35               	goto	u2581
   677  0734  2F36               	goto	u2580
   678  0735                     u2581:
   679  0735  2F47               	goto	l3182
   680  0736                     u2580:
   681  0736  2F38               	goto	l753
   682                           	
   683  0737                     l3178:	
   684  0737  2F38               	goto	l753
   685                           	
   686  0738                     l754:	
   687                           	
   688  0738                     l753:	
   689  0738  1D86               	btfss	(51/8),(51)&7
   690  0739  2F3B               	goto	u2591
   691  073A  2F3C               	goto	u2590
   692  073B                     u2591:
   693  073B  2F38               	goto	l753
   694  073C                     u2590:
   695  073C  2F3D               	goto	l3180
   696                           	
   697  073D                     l755:	
   698                           	
   699  073D                     l3180:	
   700  073D  3032               	movlw	low(032h)
   701  073E  00F0               	movwf	(?_write)
   702  073F  3000               	movlw	high(032h)
   703  0740  00F1               	movwf	((?_write))+1
   704  0741  120A  118A  2000   	fcall	_write
              120A  118A         
   705  0746  2F47               	goto	l3182
   706                           	
   707  0747                     l752:	
   708                           	line	35
   709                           	
   710  0747                     l3182:	
   711                           ;password.c: 35: if(!RB4){while(!RB4);write('5');}
   712  0747  1283               	bcf	status, 5	;RP0=0, select bank0
   713  0748  1303               	bcf	status, 6	;RP1=0, select bank0
   714  0749  1A06               	btfsc	(52/8),(52)&7
   715  074A  2F4C               	goto	u2601
   716  074B  2F4D               	goto	u2600
   717  074C                     u2601:
   718  074C  2F5E               	goto	l3188
   719  074D                     u2600:
   720  074D  2F4F               	goto	l757
   721                           	
   722  074E                     l3184:	
   723  074E  2F4F               	goto	l757
   724                           	
   725  074F                     l758:	
   726                           	
   727  074F                     l757:	
   728  074F  1E06               	btfss	(52/8),(52)&7
   729  0750  2F52               	goto	u2611
   730  0751  2F53               	goto	u2610
   731  0752                     u2611:
   732  0752  2F4F               	goto	l757
   733  0753                     u2610:
   734  0753  2F54               	goto	l3186
   735                           	
   736  0754                     l759:	
   737                           	
   738  0754                     l3186:	
   739  0754  3035               	movlw	low(035h)
   740  0755  00F0               	movwf	(?_write)
   741  0756  3000               	movlw	high(035h)
   742  0757  00F1               	movwf	((?_write))+1
   743  0758  120A  118A  2000   	fcall	_write
              120A  118A         
   744  075D  2F5E               	goto	l3188
   745                           	
   746  075E                     l756:	
   747                           	line	36
   748                           	
   749  075E                     l3188:	
   750                           ;password.c: 36: if(!RB5){while(!RB5);write('8');}
   751  075E  1283               	bcf	status, 5	;RP0=0, select bank0
   752  075F  1303               	bcf	status, 6	;RP1=0, select bank0
   753  0760  1A86               	btfsc	(53/8),(53)&7
   754  0761  2F63               	goto	u2621
   755  0762  2F64               	goto	u2620
   756  0763                     u2621:
   757  0763  2F75               	goto	l3194
   758  0764                     u2620:
   759  0764  2F66               	goto	l761
   760                           	
   761  0765                     l3190:	
   762  0765  2F66               	goto	l761
   763                           	
   764  0766                     l762:	
   765                           	
   766  0766                     l761:	
   767  0766  1E86               	btfss	(53/8),(53)&7
   768  0767  2F69               	goto	u2631
   769  0768  2F6A               	goto	u2630
   770  0769                     u2631:
   771  0769  2F66               	goto	l761
   772  076A                     u2630:
   773  076A  2F6B               	goto	l3192
   774                           	
   775  076B                     l763:	
   776                           	
   777  076B                     l3192:	
   778  076B  3038               	movlw	low(038h)
   779  076C  00F0               	movwf	(?_write)
   780  076D  3000               	movlw	high(038h)
   781  076E  00F1               	movwf	((?_write))+1
   782  076F  120A  118A  2000   	fcall	_write
              120A  118A         
   783  0774  2F75               	goto	l3194
   784                           	
   785  0775                     l760:	
   786                           	line	37
   787                           	
   788  0775                     l3194:	
   789                           ;password.c: 37: if(!RB6){while(!RB6);write('0');}
   790  0775  1283               	bcf	status, 5	;RP0=0, select bank0
   791  0776  1303               	bcf	status, 6	;RP1=0, select bank0
   792  0777  1B06               	btfsc	(54/8),(54)&7
   793  0778  2F7A               	goto	u2641
   794  0779  2F7B               	goto	u2640
   795  077A                     u2641:
   796  077A  2F8C               	goto	l3200
   797  077B                     u2640:
   798  077B  2F7D               	goto	l765
   799                           	
   800  077C                     l3196:	
   801  077C  2F7D               	goto	l765
   802                           	
   803  077D                     l766:	
   804                           	
   805  077D                     l765:	
   806  077D  1F06               	btfss	(54/8),(54)&7
   807  077E  2F80               	goto	u2651
   808  077F  2F81               	goto	u2650
   809  0780                     u2651:
   810  0780  2F7D               	goto	l765
   811  0781                     u2650:
   812  0781  2F82               	goto	l3198
   813                           	
   814  0782                     l767:	
   815                           	
   816  0782                     l3198:	
   817  0782  3030               	movlw	low(030h)
   818  0783  00F0               	movwf	(?_write)
   819  0784  3000               	movlw	high(030h)
   820  0785  00F1               	movwf	((?_write))+1
   821  0786  120A  118A  2000   	fcall	_write
              120A  118A         
   822  078B  2F8C               	goto	l3200
   823                           	
   824  078C                     l764:	
   825                           	line	38
   826                           	
   827  078C                     l3200:	
   828                           ;password.c: 38: RB0 = 1; RB1 = 1; RB2 = 0;
   829  078C  1283               	bcf	status, 5	;RP0=0, select bank0
   830  078D  1303               	bcf	status, 6	;RP1=0, select bank0
   831  078E  1406               	bsf	(48/8),(48)&7
   832                           	
   833  078F                     l3202:	
   834  078F  1486               	bsf	(49/8),(49)&7
   835                           	
   836  0790                     l3204:	
   837  0790  1106               	bcf	(50/8),(50)&7
   838                           	line	39
   839                           	
   840  0791                     l3206:	
   841                           ;password.c: 39: if(!RB3){while(!RB3);write('3');}
   842  0791  1986               	btfsc	(51/8),(51)&7
   843  0792  2F94               	goto	u2661
   844  0793  2F95               	goto	u2660
   845  0794                     u2661:
   846  0794  2FA6               	goto	l3212
   847  0795                     u2660:
   848  0795  2F97               	goto	l769
   849                           	
   850  0796                     l3208:	
   851  0796  2F97               	goto	l769
   852                           	
   853  0797                     l770:	
   854                           	
   855  0797                     l769:	
   856  0797  1D86               	btfss	(51/8),(51)&7
   857  0798  2F9A               	goto	u2671
   858  0799  2F9B               	goto	u2670
   859  079A                     u2671:
   860  079A  2F97               	goto	l769
   861  079B                     u2670:
   862  079B  2F9C               	goto	l3210
   863                           	
   864  079C                     l771:	
   865                           	
   866  079C                     l3210:	
   867  079C  3033               	movlw	low(033h)
   868  079D  00F0               	movwf	(?_write)
   869  079E  3000               	movlw	high(033h)
   870  079F  00F1               	movwf	((?_write))+1
   871  07A0  120A  118A  2000   	fcall	_write
              120A  118A         
   872  07A5  2FA6               	goto	l3212
   873                           	
   874  07A6                     l768:	
   875                           	line	40
   876                           	
   877  07A6                     l3212:	
   878                           ;password.c: 40: if(!RB4){while(!RB4);write('6');}
   879  07A6  1283               	bcf	status, 5	;RP0=0, select bank0
   880  07A7  1303               	bcf	status, 6	;RP1=0, select bank0
   881  07A8  1A06               	btfsc	(52/8),(52)&7
   882  07A9  2FAB               	goto	u2681
   883  07AA  2FAC               	goto	u2680
   884  07AB                     u2681:
   885  07AB  2FBD               	goto	l3218
   886  07AC                     u2680:
   887  07AC  2FAE               	goto	l773
   888                           	
   889  07AD                     l3214:	
   890  07AD  2FAE               	goto	l773
   891                           	
   892  07AE                     l774:	
   893                           	
   894  07AE                     l773:	
   895  07AE  1E06               	btfss	(52/8),(52)&7
   896  07AF  2FB1               	goto	u2691
   897  07B0  2FB2               	goto	u2690
   898  07B1                     u2691:
   899  07B1  2FAE               	goto	l773
   900  07B2                     u2690:
   901  07B2  2FB3               	goto	l3216
   902                           	
   903  07B3                     l775:	
   904                           	
   905  07B3                     l3216:	
   906  07B3  3036               	movlw	low(036h)
   907  07B4  00F0               	movwf	(?_write)
   908  07B5  3000               	movlw	high(036h)
   909  07B6  00F1               	movwf	((?_write))+1
   910  07B7  120A  118A  2000   	fcall	_write
              120A  118A         
   911  07BC  2FBD               	goto	l3218
   912                           	
   913  07BD                     l772:	
   914                           	line	41
   915                           	
   916  07BD                     l3218:	
   917                           ;password.c: 41: if(!RB5){while(!RB5);write('9');}
   918  07BD  1283               	bcf	status, 5	;RP0=0, select bank0
   919  07BE  1303               	bcf	status, 6	;RP1=0, select bank0
   920  07BF  1A86               	btfsc	(53/8),(53)&7
   921  07C0  2FC2               	goto	u2701
   922  07C1  2FC3               	goto	u2700
   923  07C2                     u2701:
   924  07C2  2FD4               	goto	l3224
   925  07C3                     u2700:
   926  07C3  2FC5               	goto	l777
   927                           	
   928  07C4                     l3220:	
   929  07C4  2FC5               	goto	l777
   930                           	
   931  07C5                     l778:	
   932                           	
   933  07C5                     l777:	
   934  07C5  1E86               	btfss	(53/8),(53)&7
   935  07C6  2FC8               	goto	u2711
   936  07C7  2FC9               	goto	u2710
   937  07C8                     u2711:
   938  07C8  2FC5               	goto	l777
   939  07C9                     u2710:
   940  07C9  2FCA               	goto	l3222
   941                           	
   942  07CA                     l779:	
   943                           	
   944  07CA                     l3222:	
   945  07CA  3039               	movlw	low(039h)
   946  07CB  00F0               	movwf	(?_write)
   947  07CC  3000               	movlw	high(039h)
   948  07CD  00F1               	movwf	((?_write))+1
   949  07CE  120A  118A  2000   	fcall	_write
              120A  118A         
   950  07D3  2FD4               	goto	l3224
   951                           	
   952  07D4                     l776:	
   953                           	line	42
   954                           	
   955  07D4                     l3224:	
   956                           ;password.c: 42: if(!RB6){while(!RB6);write('#');}
   957  07D4  1283               	bcf	status, 5	;RP0=0, select bank0
   958  07D5  1303               	bcf	status, 6	;RP1=0, select bank0
   959  07D6  1B06               	btfsc	(54/8),(54)&7
   960  07D7  2FD9               	goto	u2721
   961  07D8  2FDA               	goto	u2720
   962  07D9                     u2721:
   963  07D9  2EC5               	goto	l3138
   964  07DA                     u2720:
   965  07DA  2FDC               	goto	l781
   966                           	
   967  07DB                     l3226:	
   968  07DB  2FDC               	goto	l781
   969                           	
   970  07DC                     l782:	
   971                           	
   972  07DC                     l781:	
   973  07DC  1F06               	btfss	(54/8),(54)&7
   974  07DD  2FDF               	goto	u2731
   975  07DE  2FE0               	goto	u2730
   976  07DF                     u2731:
   977  07DF  2FDC               	goto	l781
   978  07E0                     u2730:
   979  07E0  2FE1               	goto	l3228
   980                           	
   981  07E1                     l783:	
   982                           	
   983  07E1                     l3228:	
   984  07E1  3023               	movlw	low(023h)
   985  07E2  00F0               	movwf	(?_write)
   986  07E3  3000               	movlw	high(023h)
   987  07E4  00F1               	movwf	((?_write))+1
   988  07E5  120A  118A  2000   	fcall	_write
              120A  118A         
   989  07EA  2EC5               	goto	l3138
   990                           	
   991  07EB                     l780:	
   992  07EB  2EC5               	goto	l3138
   993                           	line	43
   994                           	
   995  07EC                     l784:	
   996                           	line	25
   997  07EC  2EC5               	goto	l3138
   998                           	
   999  07ED                     l785:	
  1000                           	line	44
  1001                           ;password.c: 43: }
  1002                           ;password.c: 44: for(a=0; b[a]=4; a++)
  1003  07ED  01FD               	clrf	(_a)
  1004  07EE  2FF4               	goto	l3232
  1005                           	line	45
  1006                           	
  1007  07EF                     l787:	
  1008                           	line	44
  1009                           	
  1010  07EF                     l3230:	
  1011                           ;password.c: 45: {
  1012  07EF  3001               	movlw	(01h)
  1013  07F0  00FC               	movwf	(??_main+0)+0
  1014  07F1  087C               	movf	(??_main+0)+0,w
  1015  07F2  07FD               	addwf	(_a),f
  1016  07F3  2FF4               	goto	l3232
  1017                           	
  1018  07F4                     l786:	
  1019                           	
  1020  07F4                     l3232:	
  1021  07F4  3004               	movlw	(04h)
  1022  07F5  00FC               	movwf	(??_main+0)+0
  1023  07F6  087D               	movf	(_a),w
  1024  07F7  3E20               	addlw	_b&0ffh
  1025  07F8  0084               	movwf	fsr0
  1026  07F9  087C               	movf	(??_main+0)+0,w
  1027  07FA  1383               	bcf	status, 7	;select IRP bank0
  1028  07FB  0080               	movwf	indf
  1029  07FC  2FEF               	goto	l3230
  1030                           	
  1031  07FD                     l788:	
  1032                           	line	48
  1033                           	
  1034  07FD                     l789:	
  1035                           	global	start
  1036  07FD  120A  118A  2800   	ljmp	start
  1037                           	opt stack 0
  1038                           GLOBAL	__end_of_main
  1039  0800                     	__end_of_main:
  1040 ;; =============== function _main ends ============
  1041                           
  1042                           	signat	_main,88
  1043                           	global	_Lcd8_Display
  1044                           psect	text167,local,class=CODE,delta=2
  1045                           global __ptext167
  1046  0681                     __ptext167:
  1047                           
  1048 ;; *************** function _Lcd8_Display *****************
  1049 ;; Defined at:
  1050 ;;		line 52 in file "E:\pic program\eeprom password\pic_lcd8.h"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  com             1    wreg     unsigned char 
  1053 ;;  word            1    5[COMMON] PTR const unsigned char 
  1054 ;;		 -> STR_1(13), 
  1055 ;;  n               2    6[COMMON] unsigned int 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  com             1   10[COMMON] unsigned char 
  1058 ;;  Lcd_i           1   11[COMMON] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;		None               void
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         3       0       0       0       0
  1069 ;;      Locals:         2       0       0       0       0
  1070 ;;      Temps:          2       0       0       0       0
  1071 ;;      Totals:         7       0       0       0       0
  1072 ;;Total ram usage:        7 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    3
  1075 ;; This function calls:
  1076 ;;		_Lcd8_Write
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           psect	text167
  1082                           	file	"E:\pic program\eeprom password\pic_lcd8.h"
  1083                           	line	52
  1084                           	global	__size_of_Lcd8_Display
  1085  0029                     	__size_of_Lcd8_Display	equ	__end_of_Lcd8_Display-_Lcd8_Display
  1086                           	
  1087  0681                     _Lcd8_Display:	
  1088                           	opt	stack 4
  1089                           ; Regs used in _Lcd8_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1090                           ;Lcd8_Display@com stored from wreg
  1091                           	line	55
  1092  0681  00FA               	movwf	(Lcd8_Display@com)
  1093                           	
  1094  0682                     l3120:	
  1095                           ;pic_lcd8.h: 53: unsigned char Lcd_i;
  1096                           ;pic_lcd8.h: 55: for(Lcd_i=0;Lcd_i<n;Lcd_i++)
  1097  0682  01FB               	clrf	(Lcd8_Display@Lcd_i)
  1098  0683  2E9B               	goto	l3126
  1099                           	line	56
  1100                           	
  1101  0684                     l715:	
  1102                           	line	57
  1103                           	
  1104  0684                     l3122:	
  1105                           ;pic_lcd8.h: 56: {
  1106                           ;pic_lcd8.h: 57: Lcd8_Write(com+Lcd_i,word[Lcd_i]);
  1107  0684  087B               	movf	(Lcd8_Display@Lcd_i),w
  1108  0685  0775               	addwf	(Lcd8_Display@word),w
  1109  0686  0084               	movwf	fsr0
  1110  0687  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1111  068C  00F8               	movwf	(??_Lcd8_Display+0)+0
  1112  068D  0878               	movf	(??_Lcd8_Display+0)+0,w
  1113  068E  00F3               	movwf	(?_Lcd8_Write)
  1114  068F  087B               	movf	(Lcd8_Display@Lcd_i),w
  1115  0690  077A               	addwf	(Lcd8_Display@com),w
  1116  0691  120A  118A  2639   	fcall	_Lcd8_Write
              120A  118A         
  1117                           	line	55
  1118                           	
  1119  0696                     l3124:	
  1120  0696  3001               	movlw	(01h)
  1121  0697  00F8               	movwf	(??_Lcd8_Display+0)+0
  1122  0698  0878               	movf	(??_Lcd8_Display+0)+0,w
  1123  0699  07FB               	addwf	(Lcd8_Display@Lcd_i),f
  1124  069A  2E9B               	goto	l3126
  1125                           	
  1126  069B                     l714:	
  1127                           	
  1128  069B                     l3126:	
  1129  069B  087B               	movf	(Lcd8_Display@Lcd_i),w
  1130  069C  00F8               	movwf	(??_Lcd8_Display+0)+0
  1131  069D  01F9               	clrf	(??_Lcd8_Display+0)+0+1
  1132  069E  0877               	movf	(Lcd8_Display@n+1),w
  1133  069F  0279               	subwf	1+(??_Lcd8_Display+0)+0,w
  1134  06A0  1D03               	skipz
  1135  06A1  2EA4               	goto	u2495
  1136  06A2  0876               	movf	(Lcd8_Display@n),w
  1137  06A3  0278               	subwf	0+(??_Lcd8_Display+0)+0,w
  1138  06A4                     u2495:
  1139  06A4  1C03               	skipc
  1140  06A5  2EA7               	goto	u2491
  1141  06A6  2EA8               	goto	u2490
  1142  06A7                     u2491:
  1143  06A7  2E84               	goto	l3122
  1144  06A8                     u2490:
  1145  06A8  2EA9               	goto	l717
  1146                           	
  1147  06A9                     l716:	
  1148                           	line	59
  1149                           	
  1150  06A9                     l717:	
  1151  06A9  0008               	return
  1152                           	opt stack 0
  1153                           GLOBAL	__end_of_Lcd8_Display
  1154  06AA                     	__end_of_Lcd8_Display:
  1155 ;; =============== function _Lcd8_Display ends ============
  1156                           
  1157                           	signat	_Lcd8_Display,12408
  1158                           	global	_Lcd8_Write
  1159                           psect	text168,local,class=CODE,delta=2
  1160                           global __ptext168
  1161  0639                     __ptext168:
  1162                           
  1163 ;; *************** function _Lcd8_Write *****************
  1164 ;; Defined at:
  1165 ;;		line 40 in file "E:\pic program\eeprom password\pic_lcd8.h"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  com             1    wreg     unsigned char 
  1168 ;;  lr              1    3[COMMON] unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  com             1    4[COMMON] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         1       0       0       0       0
  1181 ;;      Locals:         1       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0
  1183 ;;      Totals:         2       0       0       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    2
  1187 ;; This function calls:
  1188 ;;		_Lcd8_Command
  1189 ;;		_Delay
  1190 ;; This function is called by:
  1191 ;;		_Lcd8_Display
  1192 ;;		_Lcd8_Decimal2
  1193 ;;		_Lcd8_Decimal3
  1194 ;;		_Lcd8_Decimal4
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           psect	text168
  1198                           	file	"E:\pic program\eeprom password\pic_lcd8.h"
  1199                           	line	40
  1200                           	global	__size_of_Lcd8_Write
  1201  0023                     	__size_of_Lcd8_Write	equ	__end_of_Lcd8_Write-_Lcd8_Write
  1202                           	
  1203  0639                     _Lcd8_Write:	
  1204                           	opt	stack 4
  1205                           ; Regs used in _Lcd8_Write: [wreg+status,2+status,0+pclath+cstack]
  1206                           ;Lcd8_Write@com stored from wreg
  1207  0639  00F4               	movwf	(Lcd8_Write@com)
  1208                           	line	41
  1209                           	
  1210  063A                     l3106:	
  1211                           ;pic_lcd8.h: 41: Lcd8_Command(com);
  1212  063A  0874               	movf	(Lcd8_Write@com),w
  1213  063B  120A  118A  261C   	fcall	_Lcd8_Command
              120A  118A         
  1214                           	line	43
  1215                           	
  1216  0640                     l3108:	
  1217                           ;pic_lcd8.h: 43: PORTD=lr;
  1218  0640  0873               	movf	(Lcd8_Write@lr),w
  1219  0641  1283               	bcf	status, 5	;RP0=0, select bank0
  1220  0642  1303               	bcf	status, 6	;RP1=0, select bank0
  1221  0643  0088               	movwf	(8)	;volatile
  1222                           	line	44
  1223                           	
  1224  0644                     l3110:	
  1225                           ;pic_lcd8.h: 44: Lcd_en=1;
  1226  0644  1687               	bsf	(61/8),(61)&7
  1227                           	line	45
  1228                           	
  1229  0645                     l3112:	
  1230                           ;pic_lcd8.h: 45: Lcd_rs=1;
  1231  0645  1607               	bsf	(60/8),(60)&7
  1232                           	line	46
  1233                           	
  1234  0646                     l3114:	
  1235                           ;pic_lcd8.h: 46: Delay(125);
  1236  0646  307D               	movlw	low(07Dh)
  1237  0647  00F0               	movwf	(?_Delay)
  1238  0648  3000               	movlw	high(07Dh)
  1239  0649  00F1               	movwf	((?_Delay))+1
  1240  064A  120A  118A  25EF   	fcall	_Delay
              120A  118A         
  1241                           	line	47
  1242                           	
  1243  064F                     l3116:	
  1244                           ;pic_lcd8.h: 47: Lcd_en=0;
  1245  064F  1283               	bcf	status, 5	;RP0=0, select bank0
  1246  0650  1303               	bcf	status, 6	;RP1=0, select bank0
  1247  0651  1287               	bcf	(61/8),(61)&7
  1248                           	line	48
  1249                           	
  1250  0652                     l3118:	
  1251                           ;pic_lcd8.h: 48: Delay(125);
  1252  0652  307D               	movlw	low(07Dh)
  1253  0653  00F0               	movwf	(?_Delay)
  1254  0654  3000               	movlw	high(07Dh)
  1255  0655  00F1               	movwf	((?_Delay))+1
  1256  0656  120A  118A  25EF   	fcall	_Delay
              120A  118A         
  1257                           	line	49
  1258                           	
  1259  065B                     l711:	
  1260  065B  0008               	return
  1261                           	opt stack 0
  1262                           GLOBAL	__end_of_Lcd8_Write
  1263  065C                     	__end_of_Lcd8_Write:
  1264 ;; =============== function _Lcd8_Write ends ============
  1265                           
  1266                           	signat	_Lcd8_Write,8312
  1267                           	global	_Lcd8_Init
  1268                           psect	text169,local,class=CODE,delta=2
  1269                           global __ptext169
  1270  0603                     __ptext169:
  1271                           
  1272 ;; *************** function _Lcd8_Init *****************
  1273 ;; Defined at:
  1274 ;;		line 22 in file "E:\pic program\eeprom password\pic_lcd8.h"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;		None               void
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    2
  1295 ;; This function calls:
  1296 ;;		_Lcd8_Command
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           psect	text169
  1302                           	file	"E:\pic program\eeprom password\pic_lcd8.h"
  1303                           	line	22
  1304                           	global	__size_of_Lcd8_Init
  1305  0019                     	__size_of_Lcd8_Init	equ	__end_of_Lcd8_Init-_Lcd8_Init
  1306                           	
  1307  0603                     _Lcd8_Init:	
  1308                           	opt	stack 5
  1309                           ; Regs used in _Lcd8_Init: [wreg+status,2+status,0+pclath+cstack]
  1310                           	line	23
  1311                           	
  1312  0603                     l3104:	
  1313                           ;pic_lcd8.h: 23: Lcd8_Command(0x38);
  1314  0603  3038               	movlw	(038h)
  1315  0604  120A  118A  261C   	fcall	_Lcd8_Command
              120A  118A         
  1316                           	line	24
  1317                           ;pic_lcd8.h: 24: Lcd8_Command(0x06);
  1318  0609  3006               	movlw	(06h)
  1319  060A  120A  118A  261C   	fcall	_Lcd8_Command
              120A  118A         
  1320                           	line	25
  1321                           ;pic_lcd8.h: 25: Lcd8_Command(0x0c);
  1322  060F  300C               	movlw	(0Ch)
  1323  0610  120A  118A  261C   	fcall	_Lcd8_Command
              120A  118A         
  1324                           	line	26
  1325                           ;pic_lcd8.h: 26: Lcd8_Command(0x01);
  1326  0615  3001               	movlw	(01h)
  1327  0616  120A  118A  261C   	fcall	_Lcd8_Command
              120A  118A         
  1328                           	line	27
  1329                           	
  1330  061B                     l705:	
  1331  061B  0008               	return
  1332                           	opt stack 0
  1333                           GLOBAL	__end_of_Lcd8_Init
  1334  061C                     	__end_of_Lcd8_Init:
  1335 ;; =============== function _Lcd8_Init ends ============
  1336                           
  1337                           	signat	_Lcd8_Init,88
  1338                           	global	_Lcd8_Command
  1339                           psect	text170,local,class=CODE,delta=2
  1340                           global __ptext170
  1341  061C                     __ptext170:
  1342                           
  1343 ;; *************** function _Lcd8_Command *****************
  1344 ;; Defined at:
  1345 ;;		line 30 in file "E:\pic program\eeprom password\pic_lcd8.h"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  com             1    wreg     unsigned char 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  com             1    2[COMMON] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;		None               void
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, pclath, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         1       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         1       0       0       0       0
  1363 ;;Total ram usage:        1 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		_Delay
  1368 ;; This function is called by:
  1369 ;;		_Lcd8_Init
  1370 ;;		_Lcd8_Write
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           psect	text170
  1374                           	file	"E:\pic program\eeprom password\pic_lcd8.h"
  1375                           	line	30
  1376                           	global	__size_of_Lcd8_Command
  1377  001D                     	__size_of_Lcd8_Command	equ	__end_of_Lcd8_Command-_Lcd8_Command
  1378                           	
  1379  061C                     _Lcd8_Command:	
  1380                           	opt	stack 4
  1381                           ; Regs used in _Lcd8_Command: [wreg+status,2+status,0+pclath+cstack]
  1382                           ;Lcd8_Command@com stored from wreg
  1383  061C  00F2               	movwf	(Lcd8_Command@com)
  1384                           	line	31
  1385                           	
  1386  061D                     l3092:	
  1387                           ;pic_lcd8.h: 31: PORTD=com;
  1388  061D  0872               	movf	(Lcd8_Command@com),w
  1389  061E  1283               	bcf	status, 5	;RP0=0, select bank0
  1390  061F  1303               	bcf	status, 6	;RP1=0, select bank0
  1391  0620  0088               	movwf	(8)	;volatile
  1392                           	line	32
  1393                           	
  1394  0621                     l3094:	
  1395                           ;pic_lcd8.h: 32: Lcd_en=1;
  1396  0621  1687               	bsf	(61/8),(61)&7
  1397                           	line	33
  1398                           	
  1399  0622                     l3096:	
  1400                           ;pic_lcd8.h: 33: Lcd_rs=0;
  1401  0622  1207               	bcf	(60/8),(60)&7
  1402                           	line	34
  1403                           	
  1404  0623                     l3098:	
  1405                           ;pic_lcd8.h: 34: Delay(125);
  1406  0623  307D               	movlw	low(07Dh)
  1407  0624  00F0               	movwf	(?_Delay)
  1408  0625  3000               	movlw	high(07Dh)
  1409  0626  00F1               	movwf	((?_Delay))+1
  1410  0627  120A  118A  25EF   	fcall	_Delay
              120A  118A         
  1411                           	line	35
  1412                           	
  1413  062C                     l3100:	
  1414                           ;pic_lcd8.h: 35: Lcd_en=0;
  1415  062C  1283               	bcf	status, 5	;RP0=0, select bank0
  1416  062D  1303               	bcf	status, 6	;RP1=0, select bank0
  1417  062E  1287               	bcf	(61/8),(61)&7
  1418                           	line	36
  1419                           	
  1420  062F                     l3102:	
  1421                           ;pic_lcd8.h: 36: Delay(125);
  1422  062F  307D               	movlw	low(07Dh)
  1423  0630  00F0               	movwf	(?_Delay)
  1424  0631  3000               	movlw	high(07Dh)
  1425  0632  00F1               	movwf	((?_Delay))+1
  1426  0633  120A  118A  25EF   	fcall	_Delay
              120A  118A         
  1427                           	line	37
  1428                           	
  1429  0638                     l708:	
  1430  0638  0008               	return
  1431                           	opt stack 0
  1432                           GLOBAL	__end_of_Lcd8_Command
  1433  0639                     	__end_of_Lcd8_Command:
  1434 ;; =============== function _Lcd8_Command ends ============
  1435                           
  1436                           	signat	_Lcd8_Command,4216
  1437                           	global	_write
  1438                           	global	_cmd
  1439                           	global	_Delay
  1440                           psect	text171,local,class=CODE,delta=2
  1441                           global __ptext171
  1442  05EF                     __ptext171:
  1443                           
  1444 ;; *************** function _Delay *****************
  1445 ;; Defined at:
  1446 ;;		line 107 in file "E:\pic program\eeprom password\pic_lcd8.h"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  del             2    0[COMMON] unsigned int 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;		None               void
  1453 ;; Registers used:
  1454 ;;		wreg
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         2       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0
  1462 ;;      Temps:          0       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_Lcd8_Command
  1470 ;;		_Lcd8_Write
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           psect	text171
  1474                           	file	"E:\pic program\eeprom password\pic_lcd8.h"
  1475                           	line	107
  1476                           	global	__size_of_Delay
  1477  0014                     	__size_of_Delay	equ	__end_of_Delay-_Delay
  1478                           	
  1479  05EF                     _Delay:	
  1480                           	opt	stack 5
  1481                           ; Regs used in _Delay: [wreg]
  1482                           	line	108
  1483                           	
  1484  05EF                     l3082:	
  1485                           ;pic_lcd8.h: 108: while(del--);
  1486  05EF  2DF1               	goto	l3084
  1487                           	
  1488  05F0                     l730:	
  1489  05F0  2DF1               	goto	l3084
  1490                           	
  1491  05F1                     l729:	
  1492                           	
  1493  05F1                     l3084:	
  1494  05F1  3001               	movlw	low(01h)
  1495  05F2  02F0               	subwf	(Delay@del),f
  1496  05F3  3000               	movlw	high(01h)
  1497  05F4  1C03               	skipc
  1498  05F5  03F1               	decf	(Delay@del+1),f
  1499  05F6  02F1               	subwf	(Delay@del+1),f
  1500  05F7  30FF               	movlw	high(0FFFFh)
  1501  05F8  0671               	xorwf	((Delay@del+1)),w
  1502  05F9  1D03               	skipz
  1503  05FA  2DFD               	goto	u2485
  1504  05FB  30FF               	movlw	low(0FFFFh)
  1505  05FC  0670               	xorwf	((Delay@del)),w
  1506  05FD                     u2485:
  1507                           
  1508  05FD  1D03               	skipz
  1509  05FE  2E00               	goto	u2481
  1510  05FF  2E01               	goto	u2480
  1511  0600                     u2481:
  1512  0600  2DF1               	goto	l3084
  1513  0601                     u2480:
  1514  0601  2E02               	goto	l732
  1515                           	
  1516  0602                     l731:	
  1517                           	line	109
  1518                           	
  1519  0602                     l732:	
  1520  0602  0008               	return
  1521                           	opt stack 0
  1522                           GLOBAL	__end_of_Delay
  1523  0603                     	__end_of_Delay:
  1524 ;; =============== function _Delay ends ============
  1525                           
  1526                           	signat	_Delay,4216
  1527                           psect	text172,local,class=CODE,delta=2
  1528                           global __ptext172
  1529  0000                     __ptext172:
  1530                           	global	btemp
  1531  007E                     	btemp set 07Eh
  1532                           
  1533                           	DABS	1,126,2	;btemp
  1534                           	global	wtemp0
  1535  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Aug 15 13:03:11 2024

                    _a 007D                      _b 0020                      _m 0026                      pc 0002  
                   _RD 0C60                     _WR 0C61                     fsr 0004                    l711 065B  
                  l705 061B                    l730 05F0                    l714 069B                    l731 0602  
                  l715 0684                    l732 0602                    l708 0638                    l716 06A9  
                  l740 06FF                    l717 06A9                    l741 06F0                    l750 071E  
                  l742 06F0                    l751 0723                    l743 06F5                    l735 06C5  
                  l760 0775                    l752 0747                    l744 0716                    l736 06E8  
                  l729 05F1                    l761 0766                    l753 0738                    l745 0707  
                  l737 06D9                    l770 0797                    l762 0766                    l754 0738  
                  l746 0707                    l738 06D9                    l771 079C                    l763 076B  
                  l755 073D                    l747 070C                    l739 06DE                    l780 07EB  
                  l772 07BD                    l764 078C                    l756 075E                    l748 072D  
                  l781 07DC                    l773 07AE                    l765 077D                    l757 074F  
                  l749 071E                    l782 07DC                    l774 07AE                    l766 077D  
                  l758 074F                    l783 07E1                    l775 07B3                    l767 0782  
                  l759 0754                    l784 07EC                    l776 07D4                    l768 07A6  
                  l785 07ED                    l777 07C5                    l769 0797                    l786 07F4  
                  l778 07C5                    l787 07EF                    l779 07CA                    l788 07FD  
                  l789 07FD                    _GIE 005F                    _RB0 0030                    _RB1 0031  
                  _RB2 0032                    _RB3 0033                    _RB4 0034                    _RB5 0035  
                  _RB6 0036                    _cmd 0000                    _key 0025                    fsr0 0004  
                  indf 0000       Lcd8_Display@word 0075                   l3100 062C                   l3102 062F  
                 l3110 0644                   l3104 0603                   l3112 0645                   l3120 0682  
                 l3200 078C                   l3114 0646                   l3106 063A                   l3122 0684  
                 l3210 079C                   l3202 078F                   l3130 06AE                   ?_cmd 0070  
                 l3116 064F                   l3108 0640                   l3124 0696                   l3220 07C4  
                 l3212 07A6                   l3204 0790                   l3140 06CE                   l3132 06AF  
                 l3118 0652                   l3126 069B                   l3230 07EF                   l3222 07CA  
                 l3214 07AD                   l3206 0791                   l3150 06DE                   l3142 06D1  
                 l3134 06B1                   l3232 07F4                   l3224 07D4                   l3216 07B3  
                 l3208 0796                   l3160 0706                   l3152 06E8                   l3144 06D2  
                 l3136 06B6                   l3128 06AA                   l3082 05EF                   l3226 07DB  
                 l3218 07BD                   l3170 072D                   l3162 070C                   l3154 06EF  
                 l3146 06D3                   l3138 06C5                   l3084 05F1                   l3092 061D  
                 l3228 07E1                   l3180 073D                   l3172 0730                   l3164 0716  
                 l3156 06F5                   l3148 06D8                   l3094 0621                   l3190 0765  
                 l3182 0747                   l3174 0731                   l3166 071D                   l3158 06FF  
                 l3096 0622                   l3192 076B                   l3184 074E                   l3176 0732  
                 l3168 0723                   l3098 0623                   l3194 0775                   l3186 0754  
                 l3178 0737                   l3196 077C                   l3188 075E                   l3198 0782  
           _Lcd8_Write 0639                   STR_1 0009                   u2500 06D7                   u2501 06D6  
                 u2510 06DD                   u2511 06DC                   u2600 074D                   u2520 06EE  
                 u2601 074C                   u2521 06ED                   u2610 0753                   u2530 06F4  
                 u2611 0752                   u2531 06F3                   u2700 07C3                   u2620 0764  
                 u2540 0705                   u2701 07C2                   u2621 0763                   u2541 0704  
                 u2710 07C9                   u2630 076A                   u2550 070B                   u2711 07C8  
                 u2631 0769                   u2551 070A                   u2480 0601                   u2720 07DA  
                 u2640 077B                   u2560 071C                   u2481 0600                   u2721 07D9  
                 u2641 077A                   u2561 071B                   u2490 06A8                   u2730 07E0  
                 u2650 0781                   u2570 0722                   u2491 06A7                   u2731 07DF  
                 u2651 0780                   u2571 0721                   u2660 0795                   u2580 0736  
                 u2485 05FD                   u2661 0794                   u2581 0735                   u2670 079B  
                 u2590 073C                   u2495 06A4                   u2671 079A                   u2591 073B  
                 u2680 07AC                   u2681 07AB                   u2690 07B2                   u2691 07B1  
                 _WREN 0C62      Lcd8_Display@Lcd_i 007B                   _main 06AA                   btemp 007E  
                 start 0000                  ??_cmd 0072                  ?_main 0070                  _EEADR 010D  
                _CARRY 0018                  _PORTD 0008                  _TRISB 0086                  _TRISC 0087  
                _TRISD 0088                  _Delay 05EF  __size_of_Lcd8_Command 001D  __size_of_Lcd8_Display 0029  
                _write 0000                  pclath 000A                  status 0003                  wtemp0 007E  
         __end_of_main 0800     __size_of_Lcd8_Init 0019           _Lcd8_Command 061C           _Lcd8_Display 0681  
               ??_main 007C                 ?_Delay 0070                 _EEDATA 010C                 _EECON1 018C  
               _EECON2 018D            ?_Lcd8_Write 0073                 ?_write 0070                 _Lcd_en 003D  
               _Lcd_rs 003C      __end_of_Lcd8_Init 061C          __end_of_Delay 0603         __pcstackCOMMON 0070  
         __pidataBANK0 05EA    __size_of_Lcd8_Write 0023                ??_Delay 0072                ??_write 0072  
           __pbssBANK0 0025             __pmaintext 06AA           ??_Lcd8_Write 0074   end_of_initialization 067D  
         Lcd8_Write@lr 0073     __end_of_Lcd8_Write 065C        Lcd8_Command@com 0072        Lcd8_Display@com 007A  
            _Lcd8_Init 0603    start_initialization 065C             ?_Lcd8_Init 0070            __pdataBANK0 0020  
          __pbssCOMMON 007D              __ptext170 061C              __ptext171 05EF              __ptext172 0000  
            __ptext167 0681              __ptext168 0639              __ptext169 0603          ?_Lcd8_Command 0070  
        ?_Lcd8_Display 0075              __pstrings 0003         __size_of_Delay 0014            ??_Lcd8_Init 0073  
             Delay@del 0070         ??_Lcd8_Command 0072         ??_Lcd8_Display 0078            __stringbase 0008  
        __size_of_main 0156          Lcd8_Display@n 0076   __end_of_Lcd8_Command 0639   __end_of_Lcd8_Display 06AA  
            stringcode 0003          Lcd8_Write@com 0074               stringdir 0003               stringtab 0003  
