

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Fri Aug 16 14:58:41 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 3 "E:\pic program\serial\serail.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 3 "E:\pic program\serial\serail.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFBF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNROOT	_main
    47                           	global	_dat
    48                           psect	idataCOMMON,class=CODE,space=0,delta=2
    49                           global __pidataCOMMON
    50  075C                     __pidataCOMMON:
    51                           	file	"E:\pic program\serial\serail.c"
    52                           	line	8
    53                           
    54                           ;initializer for _dat
    55  075C  3457               	retlw	057h
    56  075D  344F               	retlw	04Fh
    57  075E  3452               	retlw	052h
    58  075F  344B               	retlw	04Bh
    59  0760  3449               	retlw	049h
    60  0761  344E               	retlw	04Eh
    61  0762  3447               	retlw	047h
    62  0763  342E               	retlw	02Eh
    63  0764  342E               	retlw	02Eh
    64  0765  342E               	retlw	02Eh
    65  0766  3400               	retlw	0
    66                           	global	_a
    67                           	global	_PORTC
    68  0007                     _PORTC	set	7
    69                           	global	_TXREG
    70  0019                     _TXREG	set	25
    71                           	global	_CARRY
    72  0018                     _CARRY	set	24
    73                           	global	_CREN
    74  00C4                     _CREN	set	196
    75                           	global	_GIE
    76  005F                     _GIE	set	95
    77                           	global	_PEIE
    78  005E                     _PEIE	set	94
    79                           	global	_SPEN
    80  00C7                     _SPEN	set	199
    81                           	global	_TXIF
    82  0064                     _TXIF	set	100
    83                           	global	_SPBRG
    84  0099                     _SPBRG	set	153
    85                           	global	_TRISC
    86  0087                     _TRISC	set	135
    87                           	global	_BRGH
    88  04C2                     _BRGH	set	1218
    89                           	global	_RCIE
    90  0465                     _RCIE	set	1125
    91                           	global	_SYNC
    92  04C4                     _SYNC	set	1220
    93                           	global	_TXEN
    94  04C5                     _TXEN	set	1221
    95                           	global	_EEADR
    96  010D                     _EEADR	set	269
    97                           	global	_EEDATA
    98  010C                     _EEDATA	set	268
    99                           	global	_EECON1
   100  018C                     _EECON1	set	396
   101                           	global	_EECON2
   102  018D                     _EECON2	set	397
   103                           	global	_RD
   104  0C60                     _RD	set	3168
   105                           	global	_WR
   106  0C61                     _WR	set	3169
   107                           	global	_WREN
   108  0C62                     _WREN	set	3170
   109                           	file	"serial.as"
   110                           	line	#
   111                           psect cinit,class=CODE,delta=2
   112                           global start_initialization
   113  07B9                     start_initialization:
   114                           
   115                           psect	bssCOMMON,class=COMMON,space=1
   116                           global __pbssCOMMON
   117  007D                     __pbssCOMMON:
   118  007D                     _a:
   119  007D                            ds      1
   120                           
   121                           psect	dataCOMMON,class=COMMON,space=1
   122                           global __pdataCOMMON
   123  0070                     __pdataCOMMON:
   124                           	file	"E:\pic program\serial\serail.c"
   125  0070                     _dat:
   126  0070                            ds      11
   127                           
   128                           ; Clear objects allocated to COMMON
   129                           psect cinit,class=CODE,delta=2
   130  07B9  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   131                           global btemp
   132                           psect inittext,class=CODE,delta=2
   133                           global init_fetch,btemp
   134                           ;	Called with low address in FSR and high address in W
   135  0767                     init_fetch:
   136  0767  087E               	movf btemp,w
   137  0768  008A               	movwf pclath
   138  0769  087F               	movf btemp+1,w
   139  076A  0082               	movwf pc
   140                           global init_ram
   141                           ;Called with:
   142                           ;	high address of idata address in btemp 
   143                           ;	low address of idata address in btemp+1 
   144                           ;	low address of data in FSR
   145                           ;	high address + 1 of data in btemp-1
   146  076B                     init_ram:
   147  076B  120A  118A  2767   	fcall init_fetch
              120A  118A         
   148  0770  0080               	movwf indf,f
   149  0771  0A84               	incf fsr,f
   150  0772  0804               	movf fsr,w
   151  0773  067D               	xorwf btemp-1,w
   152  0774  1903               	btfsc status,2
   153  0775  3400               	retlw 0
   154  0776  0AFF               	incf btemp+1,f
   155  0777  1903               	btfsc status,2
   156  0778  0AFE               	incf btemp,f
   157  0779  2F6B               	goto init_ram
   158                           ; Initialize objects allocated to COMMON
   159                           	global __pidataCOMMON
   160                           psect cinit,class=CODE,delta=2
   161  07BA  120A  118A  275C   	fcall	__pidataCOMMON+0		;fetch initializer
              120A  118A         
   162  07BF  00F0               	movwf	__pdataCOMMON+0&07fh		
   163  07C0  120A  118A  275D   	fcall	__pidataCOMMON+1		;fetch initializer
              120A  118A         
   164  07C5  00F1               	movwf	__pdataCOMMON+1&07fh		
   165  07C6  120A  118A  275E   	fcall	__pidataCOMMON+2		;fetch initializer
              120A  118A         
   166  07CB  00F2               	movwf	__pdataCOMMON+2&07fh		
   167  07CC  120A  118A  275F   	fcall	__pidataCOMMON+3		;fetch initializer
              120A  118A         
   168  07D1  00F3               	movwf	__pdataCOMMON+3&07fh		
   169  07D2  120A  118A  2760   	fcall	__pidataCOMMON+4		;fetch initializer
              120A  118A         
   170  07D7  00F4               	movwf	__pdataCOMMON+4&07fh		
   171  07D8  120A  118A  2761   	fcall	__pidataCOMMON+5		;fetch initializer
              120A  118A         
   172  07DD  00F5               	movwf	__pdataCOMMON+5&07fh		
   173  07DE  120A  118A  2762   	fcall	__pidataCOMMON+6		;fetch initializer
              120A  118A         
   174  07E3  00F6               	movwf	__pdataCOMMON+6&07fh		
   175  07E4  120A  118A  2763   	fcall	__pidataCOMMON+7		;fetch initializer
              120A  118A         
   176  07E9  00F7               	movwf	__pdataCOMMON+7&07fh		
   177  07EA  120A  118A  2764   	fcall	__pidataCOMMON+8		;fetch initializer
              120A  118A         
   178  07EF  00F8               	movwf	__pdataCOMMON+8&07fh		
   179  07F0  120A  118A  2765   	fcall	__pidataCOMMON+9		;fetch initializer
              120A  118A         
   180  07F5  00F9               	movwf	__pdataCOMMON+9&07fh		
   181  07F6  120A  118A  2766   	fcall	__pidataCOMMON+10		;fetch initializer
              120A  118A         
   182  07FB  00FA               	movwf	__pdataCOMMON+10&07fh		
   183                           psect cinit,class=CODE,delta=2
   184                           global end_of_initialization
   185                           
   186                           ;End of C runtime variable initialization code
   187                           
   188  07FC                     end_of_initialization:
   189  07FC  0183               clrf status
   190  07FD  120A  118A  2F7A   ljmp _main	;jump to C main() function
   191                           psect	cstackCOMMON,class=COMMON,space=1
   192                           global __pcstackCOMMON
   193  007B                     __pcstackCOMMON:
   194                           	global	?_main
   195  007B                     ?_main:	; 0 bytes @ 0x0
   196                           	global	??_main
   197  007B                     ??_main:	; 0 bytes @ 0x0
   198  007B                     	ds	2
   199 ;;Data sizes: Strings 0, constant 0, data 11, bss 1, persistent 0 stack 0
   200 ;;Auto spaces:   Size  Autos    Used
   201 ;; COMMON          14      2      14
   202 ;; BANK0           80      0       0
   203 ;; BANK1           80      0       0
   204 ;; BANK3           96      0       0
   205 ;; BANK2           96      0       0
   206                           
   207 ;;
   208 ;; Pointer list with targets:
   209                           
   210                           
   211                           
   212 ;;
   213 ;; Critical Paths under _main in COMMON
   214 ;;
   215 ;;   None.
   216 ;;
   217 ;; Critical Paths under _main in BANK0
   218 ;;
   219 ;;   None.
   220 ;;
   221 ;; Critical Paths under _main in BANK1
   222 ;;
   223 ;;   None.
   224 ;;
   225 ;; Critical Paths under _main in BANK3
   226 ;;
   227 ;;   None.
   228 ;;
   229 ;; Critical Paths under _main in BANK2
   230 ;;
   231 ;;   None.
   232                           
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   235 ;;
   236                           
   237 ;;
   238 ;;Call Graph Tables:
   239 ;;
   240 ;; ---------------------------------------------------------------------------------
   241 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   242 ;; ---------------------------------------------------------------------------------
   243 ;; (0) _main                                                 2     2      0       0
   244 ;;                                              0 COMMON     2     2      0
   245 ;; ---------------------------------------------------------------------------------
   246 ;; Estimated maximum stack depth 0
   247 ;; ---------------------------------------------------------------------------------
   248                           
   249 ;; Call Graph Graphs:
   250                           
   251 ;; _main (ROOT)
   252 ;;
   253                           
   254 ;; Address spaces:
   255                           
   256 ;;Name               Size   Autos  Total    Cost      Usage
   257 ;;BANK3               60      0       0       9        0.0%
   258 ;;BITBANK3            60      0       0       8        0.0%
   259 ;;SFR3                 0      0       0       4        0.0%
   260 ;;BITSFR3              0      0       0       4        0.0%
   261 ;;BANK2               60      0       0      11        0.0%
   262 ;;BITBANK2            60      0       0      10        0.0%
   263 ;;SFR2                 0      0       0       5        0.0%
   264 ;;BITSFR2              0      0       0       5        0.0%
   265 ;;SFR1                 0      0       0       2        0.0%
   266 ;;BITSFR1              0      0       0       2        0.0%
   267 ;;BANK1               50      0       0       7        0.0%
   268 ;;BITBANK1            50      0       0       6        0.0%
   269 ;;CODE                 0      0       0       0        0.0%
   270 ;;DATA                 0      0       E      12        0.0%
   271 ;;ABS                  0      0       E       3        0.0%
   272 ;;NULL                 0      0       0       0        0.0%
   273 ;;STACK                0      0       0       2        0.0%
   274 ;;BANK0               50      0       0       5        0.0%
   275 ;;BITBANK0            50      0       0       4        0.0%
   276 ;;SFR0                 0      0       0       1        0.0%
   277 ;;BITSFR0              0      0       0       1        0.0%
   278 ;;COMMON               E      2       E       1      100.0%
   279 ;;BITCOMMON            E      0       0       0        0.0%
   280 ;;EEDATA             100      0       0       0        0.0%
   281                           
   282                           	global	_main
   283                           psect	maintext,global,class=CODE,delta=2
   284                           global __pmaintext
   285  077A                     __pmaintext:
   286                           
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 11 in file "E:\pic program\serial\serail.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;		None               void
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   298 ;; Tracked objects:
   299 ;;		On entry : 17F/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          2       0       0       0       0
   306 ;;      Totals:         2       0       0       0       0
   307 ;;Total ram usage:        2 bytes
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           psect	maintext
   315                           	file	"E:\pic program\serial\serail.c"
   316                           	line	11
   317                           	global	__size_of_main
   318  003F                     	__size_of_main	equ	__end_of_main-_main
   319                           	
   320  077A                     _main:	
   321                           	opt	stack 8
   322                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   323                           	line	12
   324                           	
   325  077A                     l2844:	
   326                           ;serail.c: 12: TRISC=0xbf;
   327  077A  30BF               	movlw	(0BFh)
   328  077B  1683               	bsf	status, 5	;RP0=1, select bank1
   329  077C  1303               	bcf	status, 6	;RP1=0, select bank1
   330  077D  0087               	movwf	(135)^080h	;volatile
   331                           	line	13
   332                           ;serail.c: 13: PORTC=0xbf;
   333  077E  30BF               	movlw	(0BFh)
   334  077F  1283               	bcf	status, 5	;RP0=0, select bank0
   335  0780  1303               	bcf	status, 6	;RP1=0, select bank0
   336  0781  0087               	movwf	(7)	;volatile
   337                           	line	14
   338                           	
   339  0782                     l2846:	
   340                           ;serail.c: 14: SYNC=0;
   341  0782  1683               	bsf	status, 5	;RP0=1, select bank1
   342  0783  1303               	bcf	status, 6	;RP1=0, select bank1
   343  0784  1218               	bcf	(1220/8)^080h,(1220)&7
   344                           	line	15
   345                           	
   346  0785                     l2848:	
   347                           ;serail.c: 15: SPEN=1;
   348  0785  1283               	bcf	status, 5	;RP0=0, select bank0
   349  0786  1303               	bcf	status, 6	;RP1=0, select bank0
   350  0787  1798               	bsf	(199/8),(199)&7
   351                           	line	16
   352                           	
   353  0788                     l2850:	
   354                           ;serail.c: 16: TXEN=1;
   355  0788  1683               	bsf	status, 5	;RP0=1, select bank1
   356  0789  1303               	bcf	status, 6	;RP1=0, select bank1
   357  078A  1698               	bsf	(1221/8)^080h,(1221)&7
   358                           	line	17
   359                           	
   360  078B                     l2852:	
   361                           ;serail.c: 17: BRGH=1;
   362  078B  1518               	bsf	(1218/8)^080h,(1218)&7
   363                           	line	18
   364                           ;serail.c: 18: SPBRG=129;
   365  078C  3081               	movlw	(081h)
   366  078D  0099               	movwf	(153)^080h	;volatile
   367  078E  2F90               	goto	l736
   368                           	line	20
   369                           ;serail.c: 20: while(1)
   370                           	
   371  078F                     l735:	
   372                           	line	22
   373                           ;serail.c: 21: {
   374                           ;serail.c: 22: while(TXIF==0);
   375  078F  2F90               	goto	l736
   376                           	
   377  0790                     l737:	
   378                           	
   379  0790                     l736:	
   380  0790  1283               	bcf	status, 5	;RP0=0, select bank0
   381  0791  1303               	bcf	status, 6	;RP1=0, select bank0
   382  0792  1E0C               	btfss	(100/8),(100)&7
   383  0793  2F95               	goto	u2321
   384  0794  2F96               	goto	u2320
   385  0795                     u2321:
   386  0795  2F90               	goto	l736
   387  0796                     u2320:
   388                           	
   389  0796                     l738:	
   390                           	line	23
   391                           ;serail.c: 23: TXIF=0;
   392  0796  120C               	bcf	(100/8),(100)&7
   393                           	line	24
   394                           	
   395  0797                     l2854:	
   396                           ;serail.c: 24: TXREG=dat[a];
   397  0797  087D               	movf	(_a),w
   398  0798  3E70               	addlw	_dat&0ffh
   399  0799  0084               	movwf	fsr0
   400  079A  0800               	movf	indf,w
   401  079B  0099               	movwf	(25)	;volatile
   402                           	line	25
   403                           ;serail.c: 25: if(dat[a]!='\0')
   404  079C  087D               	movf	(_a),w
   405  079D  3E70               	addlw	_dat&0ffh
   406  079E  0084               	movwf	fsr0
   407  079F  0880               	movf	indf
   408  07A0  1903               	skipnz
   409  07A1  2FA3               	goto	u2331
   410  07A2  2FA4               	goto	u2330
   411  07A3                     u2331:
   412  07A3  2FA9               	goto	l739
   413  07A4                     u2330:
   414                           	line	27
   415                           	
   416  07A4                     l2856:	
   417                           ;serail.c: 26: {
   418                           ;serail.c: 27: a++;
   419  07A4  3001               	movlw	(01h)
   420  07A5  00FB               	movwf	(??_main+0)+0
   421  07A6  087B               	movf	(??_main+0)+0,w
   422  07A7  07FD               	addwf	(_a),f
   423                           	line	28
   424                           ;serail.c: 28: }
   425  07A8  2FAB               	goto	l2858
   426                           	line	29
   427                           	
   428  07A9                     l739:	
   429                           	line	31
   430                           ;serail.c: 29: else
   431                           ;serail.c: 30: {
   432                           ;serail.c: 31: a=0;
   433  07A9  01FD               	clrf	(_a)
   434  07AA  2FAB               	goto	l2858
   435                           	line	32
   436                           	
   437  07AB                     l740:	
   438                           	line	33
   439                           	
   440  07AB                     l2858:	
   441                           ;serail.c: 32: }
   442                           ;serail.c: 33: _delay(100000);
   443                           	opt asmopt_off
   444  07AB  3082               movlw	130
   445  07AC  00FC               movwf	((??_main+0)+0+1),f
   446  07AD  30DD               	movlw	221
   447  07AE  00FB               movwf	((??_main+0)+0),f
   448  07AF                     u2347:
   449  07AF  0BFB               	decfsz	((??_main+0)+0),f
   450  07B0  2FAF               	goto	u2347
   451  07B1  0BFC               	decfsz	((??_main+0)+0+1),f
   452  07B2  2FAF               	goto	u2347
   453  07B3  2FB4               	nop2
   454                           opt asmopt_on
   455                           
   456  07B4  2F90               	goto	l736
   457                           	line	34
   458                           	
   459  07B5                     l741:	
   460                           	line	20
   461  07B5  2F90               	goto	l736
   462                           	
   463  07B6                     l742:	
   464                           	line	35
   465                           	
   466  07B6                     l743:	
   467                           	global	start
   468  07B6  120A  118A  2800   	ljmp	start
   469                           	opt stack 0
   470                           GLOBAL	__end_of_main
   471  07B9                     	__end_of_main:
   472 ;; =============== function _main ends ============
   473                           
   474                           	signat	_main,88
   475                           psect	maintext
   476                           	global	btemp
   477  007E                     	btemp set 07Eh
   478                           
   479                           	DABS	1,126,2	;btemp
   480                           	global	wtemp0
   481  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Fri Aug 16 14:58:41 2024

                   _a 007D                     pc 0002                    _RD 0C60                    _WR 0C61  
                  fsr 0004                   l740 07AB                   l741 07B5                   l742 07B6  
                 l743 07B6                   l735 078F                   l736 0790                   l737 0790  
                 l738 0796                   l739 07A9                   _GIE 005F                   _dat 0070  
                 fsr0 0004                   indf 0000                  l2850 0788                  l2852 078B  
                l2844 077A                  l2854 0797                  l2846 0782                  l2856 07A4  
                l2848 0785                  l2858 07AB                  _BRGH 04C2                  _CREN 00C4  
                u2320 0796                  u2321 0795                  u2330 07A4                  u2331 07A3  
                u2347 07AF                  _PEIE 005E                  _RCIE 0465                  _SPEN 00C7  
                _WREN 0C62                  _TXEN 04C5                  _TXIF 0064                  _SYNC 04C4  
                _main 077A                  btemp 007E                  start 0000                 ?_main 007B  
               _EEADR 010D                 _CARRY 0018                 _SPBRG 0099                 _PORTC 0007  
               _TRISC 0087                 _TXREG 0019                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 07B9                ??_main 007B                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D          __pdataCOMMON 0070        __pcstackCOMMON 007B  
          __pmaintext 077A  end_of_initialization 07FC               init_ram 076B         __pidataCOMMON 075C  
 start_initialization 07B9           __pbssCOMMON 007D             init_fetch 0767         __size_of_main 003F  
