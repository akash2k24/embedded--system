

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Dec 12 17:23:42 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  000E                     _TMR1L	set	14
   167  000F                     _TMR1H	set	15
   168  0010                     _T1CON	set	16
   169  0008                     _PORTD	set	8
   170  0060                     _TMR1IF	set	96
   171  0080                     _TMR1ON	set	128
   172  005E                     _PEIE	set	94
   173  005F                     _GIE	set	95
   174  0038                     _RC0	set	56
   175  0088                     _TRISD	set	136
   176  0438                     _TRISC0	set	1080
   177                           
   178                           	psect	cinit
   179  07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182  07FC                     __initialization:
   183  07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186  07FC                     __end_of__initialization:
   187  07FC  0183               	clrf	3
   188  07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191  0070                     __pcstackCOMMON:
   192  0070                     ?_timer1delay:
   193  0070                     ??_timer1delay:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_seq:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ?_main:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     timer1delay@i:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 2 bytes @ 0x0
   207  0070                     	ds	2
   208  0072                     ??_seq:
   209                           
   210                           ; 1 bytes @ 0x2
   211  0072                     	ds	1
   212  0073                     seq@get:
   213                           
   214                           ; 1 bytes @ 0x3
   215  0073                     	ds	1
   216  0074                     seq@j:
   217                           
   218                           ; 2 bytes @ 0x4
   219  0074                     	ds	2
   220  0076                     seq@j_40:
   221                           
   222                           ; 2 bytes @ 0x6
   223  0076                     	ds	2
   224  0078                     ??_main:
   225                           
   226                           	psect	maintext
   227  0783                     __pmaintext:	
   228                           ; 1 bytes @ 0x8
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 42 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : B00/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   248 ;;      Params:         0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called:    2
   254 ;; This function calls:
   255 ;;		_seq
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           
   262                           ;psect for function _main
   263  0783                     _main:
   264  0783                     l687:	
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   267                           
   268                           
   269                           ;main.c: 44: TRISC0 = 1;
   270  0783  1683               	bsf	3,5	;RP0=1, select bank1
   271  0784  1303               	bcf	3,6	;RP1=0, select bank1
   272  0785  1407               	bsf	7,0	;volatile
   273  0786                     l689:
   274                           
   275                           ;main.c: 45: TRISD = 0x00;
   276  0786  0188               	clrf	8	;volatile
   277                           
   278                           ;main.c: 46: PORTD=0x00;
   279  0787  1283               	bcf	3,5	;RP0=0, select bank0
   280  0788  1303               	bcf	3,6	;RP1=0, select bank0
   281  0789  0188               	clrf	8	;volatile
   282  078A                     l691:
   283                           
   284                           ;main.c: 48: {;main.c: 49:     if (RC0==0)
   285  078A  1807               	btfsc	7,0	;volatile
   286  078B  2F8D               	goto	u71
   287  078C  2F8E               	goto	u70
   288  078D                     u71:
   289  078D  2F8A               	goto	l691
   290  078E                     u70:
   291  078E                     l693:
   292                           
   293                           ;main.c: 50:     {;main.c: 52:         seq(1);
   294  078E  3001               	movlw	1
   295  078F  120A  118A  27B3  120A  118A  	fcall	_seq
   296                           
   297                           ;main.c: 53:         seq(3);
   298  0794  3003               	movlw	3
   299  0795  120A  118A  27B3  120A  118A  	fcall	_seq
   300                           
   301                           ;main.c: 54:         seq(7);
   302  079A  3007               	movlw	7
   303  079B  120A  118A  27B3  120A  118A  	fcall	_seq
   304                           
   305                           ;main.c: 55:         seq(15);
   306  07A0  300F               	movlw	15
   307  07A1  120A  118A  27B3  120A  118A  	fcall	_seq
   308                           
   309                           ;main.c: 57:         while(RC0==1)
   310  07A6  2FA9               	goto	l697
   311  07A7                     l695:
   312                           
   313                           ;main.c: 58:         {;main.c: 59:             PORTD=0xFF;
   314  07A7  30FF               	movlw	255
   315  07A8  0088               	movwf	8	;volatile
   316  07A9                     l697:
   317                           
   318                           ;main.c: 57:         while(RC0==1)
   319  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   320  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   321  07AB  1807               	btfsc	7,0	;volatile
   322  07AC  2FAE               	goto	u81
   323  07AD  2FAF               	goto	u80
   324  07AE                     u81:
   325  07AE  2FA7               	goto	l695
   326  07AF                     u80:
   327  07AF  2F8A               	goto	l691
   328  07B0  120A  118A  2800   	ljmp	start
   329  07B3                     __end_of_main:
   330                           
   331                           	psect	text1
   332  07B3                     __ptext1:	
   333 ;; *************** function _seq *****************
   334 ;; Defined at:
   335 ;;		line 26 in file "main.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;  get             1    wreg     unsigned char 
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  get             1    3[COMMON] unsigned char 
   340 ;;  j               2    6[COMMON] int 
   341 ;;  j               2    4[COMMON] int 
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         5       0       0       0       0
   353 ;;      Temps:          1       0       0       0       0
   354 ;;      Totals:         6       0       0       0       0
   355 ;;Total ram usage:        6 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; Hardware stack levels required when called:    1
   358 ;; This function calls:
   359 ;;		_timer1delay
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           
   366                           ;psect for function _seq
   367  07B3                     _seq:
   368                           
   369                           ;incstack = 0
   370                           ; Regs used in _seq: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   371                           ;seq@get stored from wreg
   372  07B3  00F3               	movwf	seq@get
   373  07B4                     l659:
   374                           
   375                           ;main.c: 26: void seq(char get);main.c: 27: {;main.c: 28: {;main.c: 29: for (int j=0; j<
      +                          =7; j++)
   376  07B4  01F4               	clrf	seq@j
   377  07B5  01F5               	clrf	seq@j+1
   378  07B6                     l665:
   379                           
   380                           ;main.c: 30: {;main.c: 31: PORTD = get << j;
   381  07B6  0873               	movf	seq@get,w
   382  07B7  00F2               	movwf	??_seq
   383  07B8  0A74               	incf	seq@j,w
   384  07B9  2FBC               	goto	u34
   385  07BA                     u35:
   386  07BA  1003               	clrc
   387  07BB  0DF2               	rlf	??_seq,f
   388  07BC                     u34:
   389  07BC  3EFF               	addlw	-1
   390  07BD  1D03               	skipz
   391  07BE  2FBA               	goto	u35
   392  07BF  0872               	movf	??_seq,w
   393  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   394  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   395  07C2  0088               	movwf	8	;volatile
   396  07C3                     l667:
   397                           
   398                           ;main.c: 32: timer1delay();
   399  07C3  120A  118A  2759  120A  118A  	fcall	_timer1delay
   400  07C8                     l669:
   401                           
   402                           ;main.c: 33: }
   403  07C8  3001               	movlw	1
   404  07C9  07F4               	addwf	seq@j,f
   405  07CA  1803               	skipnc
   406  07CB  0AF5               	incf	seq@j+1,f
   407  07CC  3000               	movlw	0
   408  07CD  07F5               	addwf	seq@j+1,f
   409  07CE                     l671:
   410  07CE  0875               	movf	seq@j+1,w
   411  07CF  3A80               	xorlw	128
   412  07D0  00FF               	movwf	btemp+1
   413  07D1  3080               	movlw	128
   414  07D2  027F               	subwf	btemp+1,w
   415  07D3  1D03               	skipz
   416  07D4  2FD7               	goto	u45
   417  07D5  3008               	movlw	8
   418  07D6  0274               	subwf	seq@j,w
   419  07D7                     u45:
   420  07D7  1C03               	skipc
   421  07D8  2FDA               	goto	u41
   422  07D9  2FDB               	goto	u40
   423  07DA                     u41:
   424  07DA  2FB6               	goto	l665
   425  07DB                     u40:
   426  07DB                     l673:
   427                           
   428                           ;main.c: 34: for (int j=7; j>=0; j--)
   429  07DB  3007               	movlw	7
   430  07DC  00F6               	movwf	seq@j_40
   431  07DD  3000               	movlw	0
   432  07DE  00F7               	movwf	seq@j_40+1
   433  07DF                     l679:
   434                           
   435                           ;main.c: 35: {;main.c: 36: PORTD = get << j;
   436  07DF  0873               	movf	seq@get,w
   437  07E0  00F2               	movwf	??_seq
   438  07E1  0A76               	incf	seq@j_40,w
   439  07E2  2FE5               	goto	u54
   440  07E3                     u55:
   441  07E3  1003               	clrc
   442  07E4  0DF2               	rlf	??_seq,f
   443  07E5                     u54:
   444  07E5  3EFF               	addlw	-1
   445  07E6  1D03               	skipz
   446  07E7  2FE3               	goto	u55
   447  07E8  0872               	movf	??_seq,w
   448  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   449  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   450  07EB  0088               	movwf	8	;volatile
   451  07EC                     l681:
   452                           
   453                           ;main.c: 37: timer1delay();
   454  07EC  120A  118A  2759  120A  118A  	fcall	_timer1delay
   455  07F1                     l683:
   456                           
   457                           ;main.c: 38: }
   458  07F1  30FF               	movlw	255
   459  07F2  07F6               	addwf	seq@j_40,f
   460  07F3  1803               	skipnc
   461  07F4  0AF7               	incf	seq@j_40+1,f
   462  07F5  30FF               	movlw	255
   463  07F6  07F7               	addwf	seq@j_40+1,f
   464  07F7                     l685:
   465  07F7  1FF7               	btfss	seq@j_40+1,7
   466  07F8  2FFA               	goto	u61
   467  07F9  2FFB               	goto	u60
   468  07FA                     u61:
   469  07FA  2FDF               	goto	l679
   470  07FB                     u60:
   471  07FB                     l31:
   472  07FB  0008               	return
   473  07FC                     __end_of_seq:
   474                           
   475                           	psect	text2
   476  0759                     __ptext2:	
   477 ;; *************** function _timer1delay *****************
   478 ;; Defined at:
   479 ;;		line 65 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  i               2    0[COMMON] int 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, btemp+1
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         2       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         2       0       0       0       0
   497 ;;Total ram usage:        2 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_seq
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _timer1delay
   508  0759                     _timer1delay:
   509  0759                     l643:	
   510                           ;incstack = 0
   511                           ; Regs used in _timer1delay: [wreg+btemp+1]
   512                           
   513                           
   514                           ;main.c: 66:     T1CON=0x31;
   515  0759  3031               	movlw	49
   516  075A  1283               	bcf	3,5	;RP0=0, select bank0
   517  075B  1303               	bcf	3,6	;RP1=0, select bank0
   518  075C  0090               	movwf	16	;volatile
   519                           
   520                           ;main.c: 67:     TMR1H=0x0B;
   521  075D  300B               	movlw	11
   522  075E  008F               	movwf	15	;volatile
   523                           
   524                           ;main.c: 68:     TMR1L=0xDB;
   525  075F  30DB               	movlw	219
   526  0760  008E               	movwf	14	;volatile
   527  0761                     l645:
   528                           
   529                           ;main.c: 69:     GIE=1;
   530  0761  178B               	bsf	11,7	;volatile
   531  0762                     l647:
   532                           
   533                           ;main.c: 70:     PEIE=1;
   534  0762  170B               	bsf	11,6	;volatile
   535  0763                     l649:
   536                           
   537                           ;main.c: 71:     TMR1ON =1;
   538  0763  1410               	bsf	16,0	;volatile
   539                           
   540                           ;main.c: 72:     for(int i=1; i<=5;i++){
   541  0764  3001               	movlw	1
   542  0765  00F0               	movwf	timer1delay@i
   543  0766  3000               	movlw	0
   544  0767  00F1               	movwf	timer1delay@i+1
   545  0768                     l48:
   546  0768  1283               	bcf	3,5	;RP0=0, select bank0
   547  0769  1303               	bcf	3,6	;RP1=0, select bank0
   548  076A  1C0C               	btfss	12,0	;volatile
   549  076B  2F6D               	goto	u11
   550  076C  2F6E               	goto	u10
   551  076D                     u11:
   552  076D  2F68               	goto	l48
   553  076E                     u10:
   554  076E                     l50:
   555                           
   556                           ;main.c: 74:   TMR1IF = 0;
   557  076E  100C               	bcf	12,0	;volatile
   558  076F                     l655:
   559                           
   560                           ;main.c: 75:     }
   561  076F  3001               	movlw	1
   562  0770  07F0               	addwf	timer1delay@i,f
   563  0771  1803               	skipnc
   564  0772  0AF1               	incf	timer1delay@i+1,f
   565  0773  3000               	movlw	0
   566  0774  07F1               	addwf	timer1delay@i+1,f
   567  0775                     l657:
   568  0775  0871               	movf	timer1delay@i+1,w
   569  0776  3A80               	xorlw	128
   570  0777  00FF               	movwf	btemp+1
   571  0778  3080               	movlw	128
   572  0779  027F               	subwf	btemp+1,w
   573  077A  1D03               	skipz
   574  077B  2F7E               	goto	u25
   575  077C  3006               	movlw	6
   576  077D  0270               	subwf	timer1delay@i,w
   577  077E                     u25:
   578  077E  1C03               	skipc
   579  077F  2F81               	goto	u21
   580  0780  2F82               	goto	u20
   581  0781                     u21:
   582  0781  2F68               	goto	l48
   583  0782                     u20:
   584  0782                     l51:
   585  0782  0008               	return
   586  0783                     __end_of_timer1delay:
   587  007E                     btemp	set	126	;btemp
   588  007E                     wtemp0	set	126
   589                           
   590                           	psect	config
   591                           
   592                           ;Config register CONFIG @ 0x2007
   593                           ;	Oscillator Selection bits
   594                           ;	FOSC = HS, HS oscillator
   595                           ;	Watchdog Timer Enable bit
   596                           ;	WDTE = OFF, WDT disabled
   597                           ;	Power-up Timer Enable bit
   598                           ;	PWRTE = OFF, PWRT disabled
   599                           ;	Brown-out Reset Enable bit
   600                           ;	BOREN = ON, BOR enabled
   601                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   602                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   603                           ;	Data EEPROM Memory Code Protection bit
   604                           ;	CPD = OFF, Data EEPROM code protection off
   605                           ;	Flash Program Memory Write Enable bits
   606                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   607                           ;	In-Circuit Debugger Mode bit
   608                           ;	DEBUG = 0x1, unprogrammed default
   609                           ;	Flash Program Memory Code Protection bit
   610                           ;	CP = OFF, Code protection off
   611  2007                     	org	8199
   612  2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_seq
    _seq->_timer1delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     150
                                _seq
 ---------------------------------------------------------------------------------
 (1) _seq                                                  6     6      0     150
                                              2 COMMON     6     6      0
                        _timer1delay
 ---------------------------------------------------------------------------------
 (2) _timer1delay                                          2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _seq
     _timer1delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Dec 12 17:23:42 2020

                     l31 07FB                       l50 076E                       l51 0782  
                     l48 0768                       u10 076E                       u11 076D  
                     u20 0782                       u21 0781                       u40 07DB  
                     u25 077E                       u41 07DA                       u34 07BC  
                     u35 07BA                       u60 07FB                       u61 07FA  
                     u45 07D7                       u54 07E5                       u70 078E  
                     u55 07E3                       u71 078D                       u80 07AF  
                     u81 07AE                      l643 0759                      l645 0761  
                    l655 076F                      l647 0762                      l671 07CE  
                    l657 0775                      l649 0763                      l681 07EC  
                    l673 07DB                      l665 07B6                      l683 07F1  
                    l667 07C3                      l659 07B4                      l691 078A  
                    l685 07F7                      l669 07C8                      l693 078E  
                    l679 07DF                      l695 07A7                      l687 0783  
                    l697 07A9                      l689 0786                      _GIE 005F  
                    _RC0 0038                      _seq 07B3                     ?_seq 0070  
                   _PEIE 005E                     _main 0783                     btemp 007E  
                   seq@j 0074                     start 0000                    ??_seq 0072  
                  ?_main 0070                    _T1CON 0010                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTD 0008                    _TRISD 0088  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07B3                   ??_main 0078                   _TMR1IF 0060  
                 _TMR1ON 0080                   _TRISC0 0438             ?_timer1delay 0070  
                 seq@get 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0783                  __ptext1 07B3                  __ptext2 0759  
   __size_of_timer1delay 002A             __size_of_seq 0049     end_of_initialization 07FC  
                seq@j_40 0076      start_initialization 07FC              __end_of_seq 07FC  
              ___latbits 0002            ??_timer1delay 0070      __end_of_timer1delay 0783  
          __size_of_main 0030             timer1delay@i 0070              _timer1delay 0759  
