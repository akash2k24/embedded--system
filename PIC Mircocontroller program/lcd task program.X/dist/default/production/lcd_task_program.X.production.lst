

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Aug 11 14:21:38 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     0722                     __pidataBANK0:
   174                           
   175                           ;initializer for _lcd_address
   176     0722  3481               	retlw	129
   177     0723  3482               	retlw	130
   178     0724  3483               	retlw	131
   179     0725  3484               	retlw	132
   180     0726  3485               	retlw	133
   181     0727  3486               	retlw	134
   182     0728  3487               	retlw	135
   183     0729  3488               	retlw	136
   184     072A  3489               	retlw	137
   185     072B  34CE               	retlw	206
   186     072C  34CD               	retlw	205
   187     072D  34CC               	retlw	204
   188     072E  34CB               	retlw	203
   189     072F  34CA               	retlw	202
   190     0730  34C9               	retlw	201
   191     0731  34C8               	retlw	200
   192     0732  34C7               	retlw	199
   193     0733  34C6               	retlw	198
   194                           
   195                           ;initializer for _array
   196     0734  3441               	retlw	65
   197     0735  344B               	retlw	75
   198     0736  3441               	retlw	65
   199     0737  3453               	retlw	83
   200     0738  3448               	retlw	72
   201     0739  3420               	retlw	32
   202     073A  3452               	retlw	82
   203     073B  3420               	retlw	32
   204     073C  3448               	retlw	72
   205     0008                     _PORTD	set	8
   206     0007                     _PORTC	set	7
   207     0088                     _TRISD	set	136
   208     0087                     _TRISC	set	135
   209                           
   210                           	psect	cinit
   211     07ED                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07ED                     __initialization:
   215                           
   216                           ; Initialize objects allocated to BANK0
   217     07ED  1383               	bcf	3,7	;select IRP bank0
   218     07EE  303B               	movlw	low (__pdataBANK0+27)
   219     07EF  00FD               	movwf	btemp+-1
   220     07F0  3007               	movlw	high __pidataBANK0
   221     07F1  00FE               	movwf	btemp
   222     07F2  3022               	movlw	low __pidataBANK0
   223     07F3  00FF               	movwf	btemp+1
   224     07F4  3020               	movlw	low __pdataBANK0
   225     07F5  0084               	movwf	4
   226     07F6  120A  118A  26E6  120A  118A  	fcall	init_ram0
   227                           
   228                           ; Clear objects allocated to COMMON
   229     07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   230     07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233     07FC                     __end_of__initialization:
   234     07FC  0183               	clrf	3
   235     07FD  120A  118A  2F3D   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMMON
   238     0077                     __pbssCOMMON:
   239     0077                     _X:
   240     0077                     	ds	1
   241                           
   242                           	psect	dataBANK0
   243     0020                     __pdataBANK0:
   244     0020                     _lcd_address:
   245     0020                     	ds	18
   246     0032                     _array:
   247     0032                     	ds	9
   248                           
   249                           	psect	inittext
   250     06E2                     init_fetch0:	
   251                           ;	Called with low address in FSR and high address in W
   252                           
   253     06E2  087E               	movf	btemp,w
   254     06E3  008A               	movwf	10
   255     06E4  087F               	movf	btemp+1,w
   256     06E5  0082               	movwf	2
   257     06E6                     init_ram0:	
   258                           ;Called with:
   259                           ;	high address of idata address in btemp 
   260                           ;	low address of idata address in btemp+1 
   261                           ;	low address of data in FSR
   262                           ;	high address + 1 of data in btemp-1
   263                           
   264     06E6  120A  118A  26E2  120A  118A  	fcall	init_fetch0
   265     06EB  0080               	movwf	0
   266     06EC  0A84               	incf	4,f
   267     06ED  0804               	movf	4,w
   268     06EE  067D               	xorwf	btemp+-1,w
   269     06EF  1903               	btfsc	3,2
   270     06F0  3400               	retlw	0
   271     06F1  0AFF               	incf	btemp+1,f
   272     06F2  1903               	btfsc	3,2
   273     06F3  0AFE               	incf	btemp,f
   274     06F4  2EE6               	goto	init_ram0
   275                           
   276                           	psect	cstackCOMMON
   277     0070                     __pcstackCOMMON:
   278     0070                     ?_init:
   279     0070                     ?_Lcd_Command:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ??_Lcd_Command:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_Lcd_Data:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ??_Lcd_Data:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_main:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296     0070                     	ds	2
   297     0072                     Lcd_Data@data:
   298     0072                     Lcd_Command@i:	
   299                           ; 1 bytes @ 0x2
   300                           
   301                           
   302                           ; 1 bytes @ 0x2
   303     0072                     	ds	1
   304     0073                     ??_init:
   305                           
   306                           ; 1 bytes @ 0x3
   307     0073                     	ds	2
   308     0075                     ??_main:
   309                           
   310                           ; 1 bytes @ 0x5
   311     0075                     	ds	2
   312                           
   313                           	psect	maintext
   314     073D                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 32 in file "lcd_task_program.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : B00/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0
   336 ;;      Temps:          2       0       0       0       0
   337 ;;      Totals:         2       0       0       0       0
   338 ;;Total ram usage:        2 bytes
   339 ;; Hardware stack levels required when called: 2
   340 ;; This function calls:
   341 ;;		_Lcd_Command
   342 ;;		_Lcd_Data
   343 ;;		_init
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349     073D                     _main:	
   350                           ;psect for function _main
   351                           
   352     073D                     l705:	
   353                           ;incstack = 0
   354                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   355                           
   356                           
   357                           ;lcd_task_program.c: 33:     init();
   358     073D  120A  118A  2794  120A  118A  	fcall	_init
   359     0742                     l707:
   360                           
   361                           ;lcd_task_program.c: 35:     for(X = 0; X < 9; X++) {
   362     0742  01F7               	clrf	_X
   363     0743                     l713:
   364                           
   365                           ;lcd_task_program.c: 36:         Lcd_Command(lcd_address[X]);
   366     0743  0877               	movf	_X,w
   367     0744  3E20               	addlw	(low (_lcd_address| 0))& (0+255)
   368     0745  0084               	movwf	4
   369     0746  1383               	bcf	3,7	;select IRP bank0
   370     0747  0800               	movf	0,w
   371     0748  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   372                           
   373                           ;lcd_task_program.c: 37:         Lcd_Data(array[X]);
   374     074D  0877               	movf	_X,w
   375     074E  3E32               	addlw	(low (_array| 0))& (0+255)
   376     074F  0084               	movwf	4
   377     0750  1383               	bcf	3,7	;select IRP bank0
   378     0751  0800               	movf	0,w
   379     0752  120A  118A  26F5  120A  118A  	fcall	_Lcd_Data
   380     0757                     l715:
   381                           
   382                           ;lcd_task_program.c: 38:         _delay((unsigned long)((100)*(6000000/4000.0)));
   383     0757  30C3               	movlw	195
   384     0758  00F6               	movwf	??_main+1
   385     0759  30CD               	movlw	205
   386     075A  00F5               	movwf	??_main
   387     075B                     u57:
   388     075B  0BF5               	decfsz	??_main,f
   389     075C  2F5B               	goto	u57
   390     075D  0BF6               	decfsz	??_main+1,f
   391     075E  2F5B               	goto	u57
   392     075F                     l717:
   393                           
   394                           ;lcd_task_program.c: 39:     }
   395     075F  3001               	movlw	1
   396     0760  00FF               	movwf	btemp+1
   397     0761  087F               	movf	btemp+1,w
   398     0762  07F7               	addwf	_X,f
   399     0763                     l719:
   400     0763  3009               	movlw	9
   401     0764  0277               	subwf	_X,w
   402     0765  1C03               	skipc
   403     0766  2F68               	goto	u31
   404     0767  2F69               	goto	u30
   405     0768                     u31:
   406     0768  2F43               	goto	l713
   407     0769                     u30:
   408     0769                     l721:
   409                           
   410                           ;lcd_task_program.c: 41:     for(X = 0; X < 9; X++) {
   411     0769  01F7               	clrf	_X
   412     076A                     l727:
   413                           
   414                           ;lcd_task_program.c: 42:         Lcd_Command(lcd_address[9 + X]);
   415     076A  0877               	movf	_X,w
   416     076B  3E29               	addlw	(low ((_lcd_address| 0+9)))& (0+255)
   417     076C  0084               	movwf	4
   418     076D  1383               	bcf	3,7	;select IRP bank0
   419     076E  0800               	movf	0,w
   420     076F  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   421                           
   422                           ;lcd_task_program.c: 43:         Lcd_Data(array[X]);
   423     0774  0877               	movf	_X,w
   424     0775  3E32               	addlw	(low (_array| 0))& (0+255)
   425     0776  0084               	movwf	4
   426     0777  1383               	bcf	3,7	;select IRP bank0
   427     0778  0800               	movf	0,w
   428     0779  120A  118A  26F5  120A  118A  	fcall	_Lcd_Data
   429     077E                     l729:
   430                           
   431                           ;lcd_task_program.c: 44:         _delay((unsigned long)((100)*(6000000/4000.0)));
   432     077E  30C3               	movlw	195
   433     077F  00F6               	movwf	??_main+1
   434     0780  30CD               	movlw	205
   435     0781  00F5               	movwf	??_main
   436     0782                     u67:
   437     0782  0BF5               	decfsz	??_main,f
   438     0783  2F82               	goto	u67
   439     0784  0BF6               	decfsz	??_main+1,f
   440     0785  2F82               	goto	u67
   441     0786                     l731:
   442                           
   443                           ;lcd_task_program.c: 45:     }
   444     0786  3001               	movlw	1
   445     0787  00FF               	movwf	btemp+1
   446     0788  087F               	movf	btemp+1,w
   447     0789  07F7               	addwf	_X,f
   448     078A                     l733:
   449     078A  3009               	movlw	9
   450     078B  0277               	subwf	_X,w
   451     078C  1C03               	skipc
   452     078D  2F8F               	goto	u41
   453     078E  2F90               	goto	u40
   454     078F                     u41:
   455     078F  2F6A               	goto	l727
   456     0790                     u40:
   457     0790                     l31:	
   458                           ;lcd_task_program.c: 46:     while(1);
   459                           
   460     0790  2F90               	goto	l31
   461     0791  120A  118A  2800   	ljmp	start
   462     0794                     __end_of_main:
   463                           
   464                           	psect	text1
   465     0794                     __ptext1:	
   466 ;; *************** function _init *****************
   467 ;; Defined at:
   468 ;;		line 49 in file "lcd_task_program.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         0       0       0       0       0
   484 ;;      Temps:          2       0       0       0       0
   485 ;;      Totals:         2       0       0       0       0
   486 ;;Total ram usage:        2 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; Hardware stack levels required when called: 1
   489 ;; This function calls:
   490 ;;		_Lcd_Command
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     0794                     _init:	
   497                           ;psect for function _init
   498                           
   499     0794                     l669:	
   500                           ;incstack = 0
   501                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   502                           
   503                           
   504                           ;lcd_task_program.c: 50:     TRISC = 0x00;
   505     0794  1683               	bsf	3,5	;RP0=1, select bank1
   506     0795  1303               	bcf	3,6	;RP1=0, select bank1
   507     0796  0187               	clrf	7	;volatile
   508                           
   509                           ;lcd_task_program.c: 51:     TRISD = 0x00;
   510     0797  0188               	clrf	8	;volatile
   511     0798                     l671:
   512                           
   513                           ;lcd_task_program.c: 52:     Lcd_Command(0x32);
   514     0798  3032               	movlw	50
   515     0799  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   516     079E                     l673:
   517                           
   518                           ;lcd_task_program.c: 53:     _delay((unsigned long)((100)*(6000000/4000.0)));
   519     079E  30C3               	movlw	195
   520     079F  00F4               	movwf	??_init+1
   521     07A0  30CD               	movlw	205
   522     07A1  00F3               	movwf	??_init
   523     07A2                     u77:
   524     07A2  0BF3               	decfsz	??_init,f
   525     07A3  2FA2               	goto	u77
   526     07A4  0BF4               	decfsz	??_init+1,f
   527     07A5  2FA2               	goto	u77
   528     07A6                     l675:
   529                           
   530                           ;lcd_task_program.c: 54:     Lcd_Command(0x32);
   531     07A6  3032               	movlw	50
   532     07A7  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   533     07AC                     l677:
   534                           
   535                           ;lcd_task_program.c: 55:     _delay((unsigned long)((100)*(6000000/4000.0)));
   536     07AC  30C3               	movlw	195
   537     07AD  00F4               	movwf	??_init+1
   538     07AE  30CD               	movlw	205
   539     07AF  00F3               	movwf	??_init
   540     07B0                     u87:
   541     07B0  0BF3               	decfsz	??_init,f
   542     07B1  2FB0               	goto	u87
   543     07B2  0BF4               	decfsz	??_init+1,f
   544     07B3  2FB0               	goto	u87
   545     07B4                     l679:
   546                           
   547                           ;lcd_task_program.c: 56:     Lcd_Command(0x32);
   548     07B4  3032               	movlw	50
   549     07B5  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   550     07BA                     l681:
   551                           
   552                           ;lcd_task_program.c: 57:     _delay((unsigned long)((100)*(6000000/4000.0)));
   553     07BA  30C3               	movlw	195
   554     07BB  00F4               	movwf	??_init+1
   555     07BC  30CD               	movlw	205
   556     07BD  00F3               	movwf	??_init
   557     07BE                     u97:
   558     07BE  0BF3               	decfsz	??_init,f
   559     07BF  2FBE               	goto	u97
   560     07C0  0BF4               	decfsz	??_init+1,f
   561     07C1  2FBE               	goto	u97
   562     07C2                     l683:
   563                           
   564                           ;lcd_task_program.c: 58:     Lcd_Command(0x38);
   565     07C2  3038               	movlw	56
   566     07C3  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   567     07C8                     l685:
   568                           
   569                           ;lcd_task_program.c: 59:     _delay((unsigned long)((100)*(6000000/4000.0)));
   570     07C8  30C3               	movlw	195
   571     07C9  00F4               	movwf	??_init+1
   572     07CA  30CD               	movlw	205
   573     07CB  00F3               	movwf	??_init
   574     07CC                     u107:
   575     07CC  0BF3               	decfsz	??_init,f
   576     07CD  2FCC               	goto	u107
   577     07CE  0BF4               	decfsz	??_init+1,f
   578     07CF  2FCC               	goto	u107
   579     07D0                     l687:
   580                           
   581                           ;lcd_task_program.c: 62:     Lcd_Command(0x0C);
   582     07D0  300C               	movlw	12
   583     07D1  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   584     07D6                     l689:
   585                           
   586                           ;lcd_task_program.c: 63:     _delay((unsigned long)((100)*(6000000/4000.0)));
   587     07D6  30C3               	movlw	195
   588     07D7  00F4               	movwf	??_init+1
   589     07D8  30CD               	movlw	205
   590     07D9  00F3               	movwf	??_init
   591     07DA                     u117:
   592     07DA  0BF3               	decfsz	??_init,f
   593     07DB  2FDA               	goto	u117
   594     07DC  0BF4               	decfsz	??_init+1,f
   595     07DD  2FDA               	goto	u117
   596     07DE                     l691:
   597                           
   598                           ;lcd_task_program.c: 64:     Lcd_Command(0x01);
   599     07DE  3001               	movlw	1
   600     07DF  120A  118A  270A  120A  118A  	fcall	_Lcd_Command
   601     07E4                     l693:
   602                           
   603                           ;lcd_task_program.c: 65:     _delay((unsigned long)((100)*(6000000/4000.0)));
   604     07E4  30C3               	movlw	195
   605     07E5  00F4               	movwf	??_init+1
   606     07E6  30CD               	movlw	205
   607     07E7  00F3               	movwf	??_init
   608     07E8                     u127:
   609     07E8  0BF3               	decfsz	??_init,f
   610     07E9  2FE8               	goto	u127
   611     07EA  0BF4               	decfsz	??_init+1,f
   612     07EB  2FE8               	goto	u127
   613     07EC                     l37:
   614     07EC  0008               	return
   615     07ED                     __end_of_init:
   616                           
   617                           	psect	text2
   618     070A                     __ptext2:	
   619 ;; *************** function _Lcd_Command *****************
   620 ;; Defined at:
   621 ;;		line 76 in file "lcd_task_program.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  i               1    wreg     unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  i               1    2[COMMON] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, btemp+1
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         1       0       0       0       0
   637 ;;      Temps:          2       0       0       0       0
   638 ;;      Totals:         3       0       0       0       0
   639 ;;Total ram usage:        3 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; This function calls:
   642 ;;		Nothing
   643 ;; This function is called by:
   644 ;;		_main
   645 ;;		_init
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649     070A                     _Lcd_Command:	
   650                           ;psect for function _Lcd_Command
   651                           
   652                           
   653                           ;incstack = 0
   654                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+btemp+1]
   655                           ;Lcd_Command@i stored from wreg
   656     070A  00F2               	movwf	Lcd_Command@i
   657     070B                     l661:
   658                           
   659                           ;lcd_task_program.c: 77:     PORTC &= ~0x08;
   660     070B  30F7               	movlw	247
   661     070C  00FF               	movwf	btemp+1
   662     070D  087F               	movf	btemp+1,w
   663     070E  1283               	bcf	3,5	;RP0=0, select bank0
   664     070F  1303               	bcf	3,6	;RP1=0, select bank0
   665     0710  0587               	andwf	7,f	;volatile
   666     0711                     l663:
   667                           
   668                           ;lcd_task_program.c: 78:     PORTD = i;
   669     0711  0872               	movf	Lcd_Command@i,w
   670     0712  0088               	movwf	8	;volatile
   671     0713                     l665:
   672                           
   673                           ;lcd_task_program.c: 79:     PORTC |= 0x01;
   674     0713  1407               	bsf	7,0	;volatile
   675     0714                     l667:
   676                           
   677                           ;lcd_task_program.c: 80:     PORTC &= ~0x01;
   678     0714  30FE               	movlw	254
   679     0715  00FF               	movwf	btemp+1
   680     0716  087F               	movf	btemp+1,w
   681     0717  0587               	andwf	7,f	;volatile
   682                           
   683                           ;lcd_task_program.c: 81:     _delay((unsigned long)((10)*(6000000/4000.0)));
   684     0718  3014               	movlw	20
   685     0719  00F1               	movwf	??_Lcd_Command+1
   686     071A  3079               	movlw	121
   687     071B  00F0               	movwf	??_Lcd_Command
   688     071C                     u137:
   689     071C  0BF0               	decfsz	??_Lcd_Command,f
   690     071D  2F1C               	goto	u137
   691     071E  0BF1               	decfsz	??_Lcd_Command+1,f
   692     071F  2F1C               	goto	u137
   693     0720  2F21               	nop2
   694     0721                     l43:
   695     0721  0008               	return
   696     0722                     __end_of_Lcd_Command:
   697                           
   698                           	psect	text3
   699     06F5                     __ptext3:	
   700 ;; *************** function _Lcd_Data *****************
   701 ;; Defined at:
   702 ;;		line 68 in file "lcd_task_program.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  data            1    wreg     unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  data            1    2[COMMON] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, btemp+1
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0
   718 ;;      Temps:          2       0       0       0       0
   719 ;;      Totals:         3       0       0       0       0
   720 ;;Total ram usage:        3 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; This function calls:
   723 ;;		Nothing
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729     06F5                     _Lcd_Data:	
   730                           ;psect for function _Lcd_Data
   731                           
   732                           
   733                           ;incstack = 0
   734                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
   735                           ;Lcd_Data@data stored from wreg
   736     06F5  00F2               	movwf	Lcd_Data@data
   737     06F6                     l695:
   738                           
   739                           ;lcd_task_program.c: 69:     PORTC |= 0x08;
   740     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   741     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   742     06F8  1587               	bsf	7,3	;volatile
   743     06F9                     l697:
   744                           
   745                           ;lcd_task_program.c: 70:     PORTD = data;
   746     06F9  0872               	movf	Lcd_Data@data,w
   747     06FA  0088               	movwf	8	;volatile
   748     06FB                     l699:
   749                           
   750                           ;lcd_task_program.c: 71:     PORTC |= 0x01;
   751     06FB  1407               	bsf	7,0	;volatile
   752     06FC                     l701:
   753                           
   754                           ;lcd_task_program.c: 72:     PORTC &= ~0x01;
   755     06FC  30FE               	movlw	254
   756     06FD  00FF               	movwf	btemp+1
   757     06FE  087F               	movf	btemp+1,w
   758     06FF  0587               	andwf	7,f	;volatile
   759     0700                     l703:
   760                           
   761                           ;lcd_task_program.c: 73:     _delay((unsigned long)((10)*(6000000/4000.0)));
   762     0700  3014               	movlw	20
   763     0701  00F1               	movwf	??_Lcd_Data+1
   764     0702  3079               	movlw	121
   765     0703  00F0               	movwf	??_Lcd_Data
   766     0704                     u147:
   767     0704  0BF0               	decfsz	??_Lcd_Data,f
   768     0705  2F04               	goto	u147
   769     0706  0BF1               	decfsz	??_Lcd_Data+1,f
   770     0707  2F04               	goto	u147
   771     0708  2F09               	nop2
   772     0709                     l40:
   773     0709  0008               	return
   774     070A                     __end_of_Lcd_Data:
   775     007E                     btemp	set	126	;btemp
   776     007E                     wtemp0	set	126
   777                           
   778                           	psect	config
   779                           
   780                           ;Config register CONFIG @ 0x2007
   781                           ;	Oscillator Selection bits
   782                           ;	FOSC = EXTRC, RC oscillator
   783                           ;	Watchdog Timer Enable bit
   784                           ;	WDTE = OFF, WDT disabled
   785                           ;	Power-up Timer Enable bit
   786                           ;	PWRTE = OFF, PWRT disabled
   787                           ;	Brown-out Reset Enable bit
   788                           ;	BOREN = OFF, BOR disabled
   789                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   790                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   791                           ;	Data EEPROM Memory Code Protection bit
   792                           ;	CPD = OFF, Data EEPROM code protection off
   793                           ;	Flash Program Memory Write Enable bits
   794                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   795                           ;	In-Circuit Debugger Mode bit
   796                           ;	DEBUG = 0x1, unprogrammed default
   797                           ;	Flash Program Memory Code Protection bit
   798                           ;	CP = OFF, Code protection off
   799     2007                     	org	8199
   800     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_Lcd_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      66
                                              5 COMMON     2     2      0
                        _Lcd_Command
                           _Lcd_Data
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (2) _Lcd_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Command
   _Lcd_Data
   _init
     _Lcd_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Aug 11 14:21:38 2024

                      _X 0077                        pc 0002                       l31 0790  
                     l40 0709                       l43 0721                       l37 07EC  
                     u30 0769                       u31 0768                       u40 0790  
                     u41 078F                       u57 075B                       u67 0782  
                     u77 07A2                       u87 07B0                       u97 07BE  
                     fsr 0004                      l701 06FC                      l703 0700  
                    l721 0769                      l713 0743                      l705 073D  
                    l731 0786                      l715 0757                      l707 0742  
                    l661 070B                      l733 078A                      l717 075F  
                    l663 0711                      l671 0798                      l727 076A  
                    l719 0763                      l665 0713                      l681 07BA  
                    l673 079E                      l729 077E                      l667 0714  
                    l691 07DE                      l683 07C2                      l675 07A6  
                    l693 07E4                      l685 07C8                      l677 07AC  
                    l669 0794                      l695 06F6                      l687 07D0  
                    l679 07B4                      l697 06F9                      l689 07D6  
                    l699 06FB                      u107 07CC                      u117 07DA  
                    u127 07E8                      u137 071C                      u147 0704  
                    fsr0 0004                      indf 0000      __end_of_Lcd_Command 0722  
                   _main 073D                     _init 0794                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_init 0070  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _array 0032                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Data 070A  
        __initialization 07ED             __end_of_main 0794             __end_of_init 07ED  
            _Lcd_Command 070A                   ??_main 0075                   ??_init 0073  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0722  
              ?_Lcd_Data 0070               __pmaintext 073D               ??_Lcd_Data 0070  
           ?_Lcd_Command 0070                  __ptext1 0794                  __ptext2 070A  
                __ptext3 06F5     end_of_initialization 07FC      start_initialization 07ED  
             init_fetch0 06E2              __pdataBANK0 0020              __pbssCOMMON 0077  
              ___latbits 0002             Lcd_Data@data 0072              _lcd_address 0020  
           Lcd_Command@i 0072                 _Lcd_Data 06F5                 init_ram0 06E6  
          ??_Lcd_Command 0070  
