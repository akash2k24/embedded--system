

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 01 19:55:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165                           
   166                           	psect	nvCOMMON
   167     0070                     __pnvCOMMON:
   168     0070                     _value:
   169     0070                     	ds	1
   170     0006                     _PORTB	set	6
   171     0007                     _PORTC	set	7
   172     0086                     _TRISB	set	134
   173     0087                     _TRISC	set	135
   174                           
   175                           	psect	cinit
   176     07FC                     start_initialization:	
   177                           ; #config settings
   178                           
   179     07FC                     __initialization:
   180     07FC                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183     07FC                     __end_of__initialization:
   184     07FC  0183               	clrf	3
   185     07FD  120A  118A  2FCA   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188     0000                     __pcstackCOMMON:
   189     0000                     ?_main:
   190     0000                     ??_main:	
   191                           ; 1 bytes @ 0x0
   192                           
   193                           
   194                           	psect	maintext
   195     07CA                     __pmaintext:	
   196                           ; 1 bytes @ 0x0
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 22 in file "class_pullup.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;                  1    wreg      void 
   209 ;; Registers used:
   210 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   211 ;; Tracked objects:
   212 ;;		On entry : B00/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   216 ;;      Params:         0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0
   218 ;;      Temps:          0       0       0       0       0
   219 ;;      Totals:         0       0       0       0       0
   220 ;;Total ram usage:        0 bytes
   221 ;; This function calls:
   222 ;;		Nothing
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228     07CA                     _main:	
   229                           ;psect for function _main
   230                           
   231     07CA                     l569:	
   232                           ;incstack = 0
   233                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   234                           
   235                           
   236                           ;class_pullup.c: 24:     TRISC=0x00;
   237     07CA  1683               	bsf	3,5	;RP0=1, select bank1
   238     07CB  1303               	bcf	3,6	;RP1=0, select bank1
   239     07CC  0187               	clrf	7	;volatile
   240                           
   241                           ;class_pullup.c: 25:     PORTC = 0x00;
   242     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   243     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   244     07CF  0187               	clrf	7	;volatile
   245     07D0                     l571:
   246                           
   247                           ;class_pullup.c: 26:     TRISB=0xF0;
   248     07D0  30F0               	movlw	240
   249     07D1  1683               	bsf	3,5	;RP0=1, select bank1
   250     07D2  1303               	bcf	3,6	;RP1=0, select bank1
   251     07D3  0086               	movwf	6	;volatile
   252     07D4                     l573:
   253                           
   254                           ;class_pullup.c: 27:     PORTB = 0x00;
   255     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   256     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   257     07D6  0186               	clrf	6	;volatile
   258     07D7                     l15:	
   259                           ;class_pullup.c: 29:     while(1)
   260                           
   261                           
   262                           ;class_pullup.c: 30:     {;class_pullup.c: 31:         value = PORTB;
   263     07D7  0806               	movf	6,w	;volatile
   264     07D8  00F0               	movwf	_value
   265                           
   266                           ;class_pullup.c: 32:         switch(value)
   267     07D9  2FE8               	goto	l587
   268     07DA                     l575:
   269     07DA  3080               	movlw	128
   270     07DB  0087               	movwf	7	;volatile
   271                           
   272                           ;class_pullup.c: 35:             break ;
   273     07DC  2FD7               	goto	l15
   274     07DD                     l577:
   275     07DD  3004               	movlw	4
   276     07DE  0087               	movwf	7	;volatile
   277                           
   278                           ;class_pullup.c: 37:             break ;
   279     07DF  2FD7               	goto	l15
   280     07E0                     l579:
   281     07E0  3070               	movlw	112
   282     07E1  0087               	movwf	7	;volatile
   283                           
   284                           ;class_pullup.c: 39:             break ;
   285     07E2  2FD7               	goto	l15
   286     07E3                     l581:
   287     07E3  3084               	movlw	132
   288     07E4  0087               	movwf	7	;volatile
   289                           
   290                           ;class_pullup.c: 41:             break ;
   291     07E5  2FD7               	goto	l15
   292     07E6                     l583:
   293     07E6  0187               	clrf	7	;volatile
   294                           
   295                           ;class_pullup.c: 43:             break ;
   296     07E7  2FD7               	goto	l15
   297     07E8                     l587:
   298     07E8  0870               	movf	_value,w
   299                           
   300                           ; Switch size 1, requested type "simple"
   301                           ; Number of cases is 5, Range of values is 112 to 240
   302                           ; switch strategies available:
   303                           ; Name         Instructions Cycles
   304                           ; simple_byte           16     9 (average)
   305                           ; jumptable            263     9 (fixed)
   306                           ;	Chosen strategy is simple_byte
   307     07E9  3A70               	xorlw	112	; case 112
   308     07EA  1903               	skipnz
   309     07EB  2FE3               	goto	l581
   310     07EC  3AC0               	xorlw	192	; case 176
   311     07ED  1903               	skipnz
   312     07EE  2FE0               	goto	l579
   313     07EF  3A60               	xorlw	96	; case 208
   314     07F0  1903               	skipnz
   315     07F1  2FDD               	goto	l577
   316     07F2  3A30               	xorlw	48	; case 224
   317     07F3  1903               	skipnz
   318     07F4  2FDA               	goto	l575
   319     07F5  3A10               	xorlw	16	; case 240
   320     07F6  1903               	skipnz
   321     07F7  2FE6               	goto	l583
   322     07F8  2FD7               	goto	l15
   323     07F9  120A  118A  2800   	ljmp	start
   324     07FC                     __end_of_main:
   325     007E                     btemp	set	126	;btemp
   326     007E                     wtemp0	set	126
   327                           
   328                           	psect	config
   329                           
   330                           ;Config register CONFIG @ 0x2007
   331                           ;	Oscillator Selection bits
   332                           ;	FOSC = EXTRC, RC oscillator
   333                           ;	Watchdog Timer Enable bit
   334                           ;	WDTE = OFF, WDT disabled
   335                           ;	Power-up Timer Enable bit
   336                           ;	PWRTE = OFF, PWRT disabled
   337                           ;	Brown-out Reset Enable bit
   338                           ;	BOREN = OFF, BOR disabled
   339                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   340                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   341                           ;	Data EEPROM Memory Code Protection bit
   342                           ;	CPD = OFF, Data EEPROM code protection off
   343                           ;	Flash Program Memory Write Enable bits
   344                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   345                           ;	In-Circuit Debugger Mode bit
   346                           ;	DEBUG = 0x1, unprogrammed default
   347                           ;	Flash Program Memory Code Protection bit
   348                           ;	CP = OFF, Code protection off
   349     2007                     	org	8199
   350     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       1
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       1      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 01 19:55:33 2024

                     l15 07D7                      l571 07D0                      l581 07E3  
                    l573 07D4                      l583 07E6                      l575 07DA  
                    l577 07DD                      l569 07CA                      l579 07E0  
                    l587 07E8                     _main 07CA                     btemp 007E  
                   start 0000                    ?_main 0000                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _value 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0000               __pnvCOMMON 0070  
             __pmaintext 07CA     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002  
