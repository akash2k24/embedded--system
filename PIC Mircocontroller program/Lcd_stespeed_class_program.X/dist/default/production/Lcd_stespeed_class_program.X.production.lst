

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Jul 17 18:10:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180     054B                     __pidataBANK0:
   181                           
   182                           ;initializer for _k
   183     054B  3453               	retlw	83
   184     054C  3445               	retlw	69
   185     054D  3454               	retlw	84
   186     054E  3420               	retlw	32
   187     054F  3453               	retlw	83
   188     0550  3450               	retlw	80
   189     0551  3444               	retlw	68
   190     0552  343A               	retlw	58
   191     0553  3420               	retlw	32
   192     0554  3420               	retlw	32
   193     0555  3420               	retlw	32
   194     0556  3420               	retlw	32
   195     0557  3472               	retlw	114
   196     0558  3470               	retlw	112
   197     0559  346D               	retlw	109
   198     055A  3400               	retlw	0
   199     055B  3400               	retlw	0
   200     055C  3400               	retlw	0
   201     055D  3400               	retlw	0
   202     055E  3400               	retlw	0
   203     055F  3400               	retlw	0
   204     0560  3400               	retlw	0
   205     0561  3400               	retlw	0
   206     0562  3400               	retlw	0
   207     0563  3400               	retlw	0
   208     0564  3400               	retlw	0
   209     0565  3400               	retlw	0
   210     0566  3400               	retlw	0
   211     0567  3400               	retlw	0
   212     0568  3400               	retlw	0
   213     0008                     _PORTD	set	8
   214     0007                     _PORTC	set	7
   215     0006                     _PORTB	set	6
   216     0081                     _OPTION_REG	set	129
   217     0088                     _TRISD	set	136
   218     0086                     _TRISB	set	134
   219     0087                     _TRISC	set	135
   220                           
   221                           	psect	cinit
   222     07DE                     start_initialization:	
   223                           ; #config settings
   224                           
   225     07DE                     __initialization:
   226                           
   227                           ; Initialize objects allocated to BANK0
   228     07DE  1383               	bcf	3,7	;select IRP bank0
   229     07DF  303E               	movlw	low (__pdataBANK0+30)
   230     07E0  00FD               	movwf	btemp+-1
   231     07E1  3005               	movlw	high __pidataBANK0
   232     07E2  00FE               	movwf	btemp
   233     07E3  304B               	movlw	low __pidataBANK0
   234     07E4  00FF               	movwf	btemp+1
   235     07E5  3020               	movlw	low __pdataBANK0
   236     07E6  0084               	movwf	4
   237     07E7  120A  118A  24FC  120A  118A  	fcall	init_ram0
   238                           
   239                           ; Clear objects allocated to BANK0
   240     07EC  01BE               	clrf	__pbssBANK0& (0+127)
   241     07ED  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   242     07EE  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   243     07EF  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   244     07F0  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   245     07F1  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   246     07F2  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   247     07F3  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   248     07F4  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   249     07F5  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   250     07F6  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   251     07F7  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   252     07F8  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   253     07F9  01CB               	clrf	(__pbssBANK0+13)& (0+127)
   254     07FA  01CC               	clrf	(__pbssBANK0+14)& (0+127)
   255                           
   256                           ; Clear objects allocated to COMMON
   257     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   258     07FC                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261     07FC                     __end_of__initialization:
   262     07FC  0183               	clrf	3
   263     07FD  120A  118A  2CEA   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMMON
   266     007D                     __pbssCOMMON:
   267     007D                     _m:
   268     007D                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271     003E                     __pbssBANK0:
   272     003E                     _i:
   273     003E                     	ds	2
   274     0040                     _j:
   275     0040                     	ds	2
   276     0042                     _d1:
   277     0042                     	ds	2
   278     0044                     _d2:
   279     0044                     	ds	2
   280     0046                     _d3:
   281     0046                     	ds	2
   282     0048                     _d4:
   283     0048                     	ds	2
   284     004A                     _value:
   285     004A                     	ds	1
   286     004B                     _n:
   287     004B                     	ds	1
   288     004C                     _x:
   289     004C                     	ds	1
   290                           
   291                           	psect	dataBANK0
   292     0020                     __pdataBANK0:
   293     0020                     _k:
   294     0020                     	ds	30
   295                           
   296                           	psect	inittext
   297     04F8                     init_fetch0:	
   298                           ;	Called with low address in FSR and high address in W
   299                           
   300     04F8  087E               	movf	btemp,w
   301     04F9  008A               	movwf	10
   302     04FA  087F               	movf	btemp+1,w
   303     04FB  0082               	movwf	2
   304     04FC                     init_ram0:	
   305                           ;Called with:
   306                           ;	high address of idata address in btemp 
   307                           ;	low address of idata address in btemp+1 
   308                           ;	low address of data in FSR
   309                           ;	high address + 1 of data in btemp-1
   310                           
   311     04FC  120A  118A  24F8  120A  118A  	fcall	init_fetch0
   312     0501  0080               	movwf	0
   313     0502  0A84               	incf	4,f
   314     0503  0804               	movf	4,w
   315     0504  067D               	xorwf	btemp+-1,w
   316     0505  1903               	btfsc	3,2
   317     0506  3400               	retlw	0
   318     0507  0AFF               	incf	btemp+1,f
   319     0508  1903               	btfsc	3,2
   320     0509  0AFE               	incf	btemp,f
   321     050A  2CFC               	goto	init_ram0
   322                           
   323                           	psect	cstackCOMMON
   324     0070                     __pcstackCOMMON:
   325     0070                     ?_init:
   326     0070                     ?_keyscane:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_Lcd_Command:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ??_Lcd_Command:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_Lcd_Data:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ??_Lcd_Data:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ?___bmul:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?___wmul:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ___bmul@multiplicand:	
   351                           ; 2 bytes @ 0x0
   352                           
   353     0070                     ___wmul@multiplier:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358     0070                     	ds	1
   359     0071                     ??___bmul:
   360     0071                     ___bmul@product:	
   361                           ; 1 bytes @ 0x1
   362                           
   363                           
   364                           ; 1 bytes @ 0x1
   365     0071                     	ds	1
   366     0072                     Lcd_Data@i:
   367     0072                     Lcd_Command@i:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     0072                     ___bmul@multiplier:	
   371                           ; 1 bytes @ 0x2
   372                           
   373     0072                     ___wmul@multiplicand:	
   374                           ; 1 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378     0072                     	ds	1
   379     0073                     ??_init:
   380                           
   381                           ; 1 bytes @ 0x3
   382     0073                     	ds	1
   383     0074                     ??___wmul:
   384     0074                     ___wmul@product:	
   385                           ; 1 bytes @ 0x4
   386                           
   387                           
   388                           ; 2 bytes @ 0x4
   389     0074                     	ds	2
   390     0076                     ?___lwdiv:
   391     0076                     ___lwdiv@divisor:	
   392                           ; 2 bytes @ 0x6
   393                           
   394                           
   395                           ; 2 bytes @ 0x6
   396     0076                     	ds	2
   397     0078                     ___lwdiv@dividend:
   398                           
   399                           ; 2 bytes @ 0x8
   400     0078                     	ds	2
   401     007A                     ??___lwdiv:
   402     007A                     ___lwdiv@quotient:	
   403                           ; 1 bytes @ 0xA
   404                           
   405                           
   406                           ; 2 bytes @ 0xA
   407     007A                     	ds	2
   408     007C                     ___lwdiv@counter:
   409                           
   410                           ; 1 bytes @ 0xC
   411     007C                     	ds	1
   412     007D                     ??_keyscane:
   413     007D                     ??_main:	
   414                           ; 1 bytes @ 0xD
   415                           
   416                           
   417                           	psect	cstackBANK0
   418     004D                     __pcstackBANK0:	
   419                           ; 1 bytes @ 0xD
   420                           
   421     004D                     ?_Lcdoutput:
   422     004D                     Lcdoutput@i:	
   423                           ; 1 bytes @ 0x0
   424                           
   425                           
   426                           ; 2 bytes @ 0x0
   427     004D                     	ds	2
   428     004F                     ??_Lcdoutput:
   429                           
   430                           ; 1 bytes @ 0x2
   431     004F                     	ds	6
   432                           
   433                           	psect	maintext
   434     04EA                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 31 in file "Lcd_stespeed_class_program.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels required when called: 3
   460 ;; This function calls:
   461 ;;		_init
   462 ;;		_keyscane
   463 ;; This function is called by:
   464 ;;		Startup code after reset
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     04EA                     _main:	
   469                           ;psect for function _main
   470                           
   471     04EA                     l983:	
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   474                           
   475                           
   476                           ;Lcd_stespeed_class_program.c: 33:     init();
   477     04EA  120A  118A  25D2  120A  118A  	fcall	_init
   478     04EF                     l985:
   479                           
   480                           ;Lcd_stespeed_class_program.c: 35:     {;Lcd_stespeed_class_program.c: 36:         keysc
      +                          ane();
   481     04EF  120A  118A  2648  120A  118A  	fcall	_keyscane
   482     04F4  2CEF               	goto	l985
   483     04F5  120A  118A  2800   	ljmp	start
   484     04F8                     __end_of_main:
   485                           
   486                           	psect	text1
   487     0648                     __ptext1:	
   488 ;; *************** function _keyscane *****************
   489 ;; Defined at:
   490 ;;		line 62 in file "Lcd_stespeed_class_program.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 2
   511 ;; This function calls:
   512 ;;		_Lcd_Command
   513 ;;		_Lcd_Data
   514 ;;		_Lcdoutput
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520     0648                     _keyscane:	
   521                           ;psect for function _keyscane
   522                           
   523     0648                     l923:	
   524                           ;incstack = 0
   525                           ; Regs used in _keyscane: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   526                           
   527                           
   528                           ;Lcd_stespeed_class_program.c: 64:     value=PORTB&0xF0;
   529     0648  1283               	bcf	3,5	;RP0=0, select bank0
   530     0649  1303               	bcf	3,6	;RP1=0, select bank0
   531     064A  0806               	movf	6,w	;volatile
   532     064B  39F0               	andlw	240
   533     064C  00CA               	movwf	_value
   534                           
   535                           ;Lcd_stespeed_class_program.c: 65:     switch(value)
   536     064D  2EE4               	goto	l981
   537     064E                     l925:
   538                           
   539                           ;Lcd_stespeed_class_program.c: 68:             Lcd_Command(0x80);
   540     064E  3080               	movlw	128
   541     064F  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   542     0654                     l927:
   543                           
   544                           ;Lcd_stespeed_class_program.c: 69:             for(x=0;x<8;x++)
   545     0654  1283               	bcf	3,5	;RP0=0, select bank0
   546     0655  1303               	bcf	3,6	;RP1=0, select bank0
   547     0656  01CC               	clrf	_x
   548     0657                     l933:
   549                           
   550                           ;Lcd_stespeed_class_program.c: 70:             {;Lcd_stespeed_class_program.c: 71:      
      +                                     Lcd_Data(k[x]);
   551     0657  084C               	movf	_x,w
   552     0658  3E20               	addlw	(low (_k| 0))& (0+255)
   553     0659  0084               	movwf	4
   554     065A  1383               	bcf	3,7	;select IRP bank0
   555     065B  0800               	movf	0,w
   556     065C  120A  118A  250B  120A  118A  	fcall	_Lcd_Data
   557     0661                     l935:
   558                           
   559                           ;Lcd_stespeed_class_program.c: 72:             }
   560     0661  3001               	movlw	1
   561     0662  00FF               	movwf	btemp+1
   562     0663  087F               	movf	btemp+1,w
   563     0664  1283               	bcf	3,5	;RP0=0, select bank0
   564     0665  1303               	bcf	3,6	;RP1=0, select bank0
   565     0666  07CC               	addwf	_x,f
   566     0667                     l937:
   567     0667  3008               	movlw	8
   568     0668  024C               	subwf	_x,w
   569     0669  1C03               	skipc
   570     066A  2E6C               	goto	u311
   571     066B  2E6D               	goto	u310
   572     066C                     u311:
   573     066C  2E57               	goto	l933
   574     066D                     u310:
   575     066D                     l939:
   576                           
   577                           ;Lcd_stespeed_class_program.c: 73:             Lcd_Command(0x8c);
   578     066D  308C               	movlw	140
   579     066E  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   580     0673                     l941:
   581                           
   582                           ;Lcd_stespeed_class_program.c: 74:             for(x=12;x<15;x++)
   583     0673  300C               	movlw	12
   584     0674  1283               	bcf	3,5	;RP0=0, select bank0
   585     0675  1303               	bcf	3,6	;RP1=0, select bank0
   586     0676  00CC               	movwf	_x
   587     0677                     l947:
   588                           
   589                           ;Lcd_stespeed_class_program.c: 75:             {;Lcd_stespeed_class_program.c: 76:      
      +                                     Lcd_Data(k[x]);
   590     0677  084C               	movf	_x,w
   591     0678  3E20               	addlw	(low (_k| 0))& (0+255)
   592     0679  0084               	movwf	4
   593     067A  1383               	bcf	3,7	;select IRP bank0
   594     067B  0800               	movf	0,w
   595     067C  120A  118A  250B  120A  118A  	fcall	_Lcd_Data
   596     0681                     l949:
   597                           
   598                           ;Lcd_stespeed_class_program.c: 77:             }
   599     0681  3001               	movlw	1
   600     0682  00FF               	movwf	btemp+1
   601     0683  087F               	movf	btemp+1,w
   602     0684  1283               	bcf	3,5	;RP0=0, select bank0
   603     0685  1303               	bcf	3,6	;RP1=0, select bank0
   604     0686  07CC               	addwf	_x,f
   605     0687                     l951:
   606     0687  300F               	movlw	15
   607     0688  024C               	subwf	_x,w
   608     0689  1C03               	skipc
   609     068A  2E8C               	goto	u321
   610     068B  2E8D               	goto	u320
   611     068C                     u321:
   612     068C  2E77               	goto	l947
   613     068D                     u320:
   614     068D                     l953:
   615                           
   616                           ;Lcd_stespeed_class_program.c: 78:             Lcd_Command(0x88);
   617     068D  3088               	movlw	136
   618     068E  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   619                           
   620                           ;Lcd_stespeed_class_program.c: 79:             Lcdoutput(j);
   621     0693  1283               	bcf	3,5	;RP0=0, select bank0
   622     0694  1303               	bcf	3,6	;RP1=0, select bank0
   623     0695  0841               	movf	_j+1,w
   624     0696  00CE               	movwf	Lcdoutput@i+1
   625     0697  0840               	movf	_j,w
   626     0698  00CD               	movwf	Lcdoutput@i
   627     0699  120A  118A  26F3  120A  118A  	fcall	_Lcdoutput
   628                           
   629                           ;Lcd_stespeed_class_program.c: 80:             break;
   630     069E  2EF2               	goto	l74
   631     069F                     l955:
   632                           
   633                           ;Lcd_stespeed_class_program.c: 82:             j++;
   634     069F  3001               	movlw	1
   635     06A0  07C0               	addwf	_j,f
   636     06A1  1803               	skipnc
   637     06A2  0AC1               	incf	_j+1,f
   638     06A3  3000               	movlw	0
   639     06A4  07C1               	addwf	_j+1,f
   640                           
   641                           ;Lcd_stespeed_class_program.c: 83:             if(j>5000)
   642     06A5  3013               	movlw	19
   643     06A6  0241               	subwf	_j+1,w
   644     06A7  3089               	movlw	137
   645     06A8  1903               	skipnz
   646     06A9  0240               	subwf	_j,w
   647     06AA  1C03               	skipc
   648     06AB  2EAD               	goto	u331
   649     06AC  2EAE               	goto	u330
   650     06AD                     u331:
   651     06AD  2EB2               	goto	l959
   652     06AE                     u330:
   653     06AE                     l957:
   654                           
   655                           ;Lcd_stespeed_class_program.c: 84:             {;Lcd_stespeed_class_program.c: 85:      
      +                                     j=5000;
   656     06AE  3088               	movlw	136
   657     06AF  00C0               	movwf	_j
   658     06B0  3013               	movlw	19
   659     06B1  00C1               	movwf	_j+1
   660     06B2                     l959:
   661                           
   662                           ;Lcd_stespeed_class_program.c: 87:             Lcd_Command(0x88);
   663     06B2  3088               	movlw	136
   664     06B3  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   665     06B8                     l961:
   666                           
   667                           ;Lcd_stespeed_class_program.c: 88:             Lcdoutput(j);
   668     06B8  1283               	bcf	3,5	;RP0=0, select bank0
   669     06B9  1303               	bcf	3,6	;RP1=0, select bank0
   670     06BA  0841               	movf	_j+1,w
   671     06BB  00CE               	movwf	Lcdoutput@i+1
   672     06BC  0840               	movf	_j,w
   673     06BD  00CD               	movwf	Lcdoutput@i
   674     06BE  120A  118A  26F3  120A  118A  	fcall	_Lcdoutput
   675                           
   676                           ;Lcd_stespeed_class_program.c: 89:             break;
   677     06C3  2EF2               	goto	l74
   678     06C4                     l963:
   679                           
   680                           ;Lcd_stespeed_class_program.c: 91:             j--;
   681     06C4  3001               	movlw	1
   682     06C5  02C0               	subwf	_j,f
   683     06C6  3000               	movlw	0
   684     06C7  1C03               	skipc
   685     06C8  03C1               	decf	_j+1,f
   686     06C9  02C1               	subwf	_j+1,f
   687     06CA                     l965:
   688                           
   689                           ;Lcd_stespeed_class_program.c: 92:             if(j<1)
   690     06CA  0840               	movf	_j,w
   691     06CB  0441               	iorwf	_j+1,w
   692     06CC  1D03               	btfss	3,2
   693     06CD  2ECF               	goto	u341
   694     06CE  2ED0               	goto	u340
   695     06CF                     u341:
   696     06CF  2ED4               	goto	l969
   697     06D0                     u340:
   698     06D0                     l967:
   699                           
   700                           ;Lcd_stespeed_class_program.c: 93:             {;Lcd_stespeed_class_program.c: 94:      
      +                                     j=1;
   701     06D0  3001               	movlw	1
   702     06D1  00C0               	movwf	_j
   703     06D2  3000               	movlw	0
   704     06D3  00C1               	movwf	_j+1
   705     06D4                     l969:
   706                           
   707                           ;Lcd_stespeed_class_program.c: 96:             Lcd_Command(0x88);
   708     06D4  3088               	movlw	136
   709     06D5  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   710     06DA  2EB8               	goto	l961
   711     06DB                     l973:
   712                           
   713                           ;Lcd_stespeed_class_program.c: 101:             j=0;
   714     06DB  01C0               	clrf	_j
   715     06DC  01C1               	clrf	_j+1
   716     06DD                     l975:
   717                           
   718                           ;Lcd_stespeed_class_program.c: 102:             Lcd_Command(0x88);
   719     06DD  3088               	movlw	136
   720     06DE  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   721     06E3  2EB8               	goto	l961
   722     06E4                     l981:
   723     06E4  084A               	movf	_value,w
   724                           
   725                           ; Switch size 1, requested type "simple"
   726                           ; Number of cases is 4, Range of values is 112 to 224
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; simple_byte           13     7 (average)
   730                           ; jumptable            263     9 (fixed)
   731                           ;	Chosen strategy is simple_byte
   732     06E5  3A70               	xorlw	112	; case 112
   733     06E6  1903               	skipnz
   734     06E7  2EDB               	goto	l973
   735     06E8  3AC0               	xorlw	192	; case 176
   736     06E9  1903               	skipnz
   737     06EA  2EC4               	goto	l963
   738     06EB  3A60               	xorlw	96	; case 208
   739     06EC  1903               	skipnz
   740     06ED  2E9F               	goto	l955
   741     06EE  3A30               	xorlw	48	; case 224
   742     06EF  1903               	skipnz
   743     06F0  2E4E               	goto	l925
   744     06F1  2EF2               	goto	l74
   745     06F2                     l74:
   746     06F2  0008               	return
   747     06F3                     __end_of_keyscane:
   748                           
   749                           	psect	text2
   750     06F3                     __ptext2:	
   751 ;; *************** function _Lcdoutput *****************
   752 ;; Defined at:
   753 ;;		line 124 in file "Lcd_stespeed_class_program.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  i               2    0[BANK0 ] unsigned int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       2       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       6       0       0       0
   770 ;;      Totals:         0       8       0       0       0
   771 ;;Total ram usage:        8 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 1
   774 ;; This function calls:
   775 ;;		_Lcd_Command
   776 ;;		_Lcd_Data
   777 ;;		___bmul
   778 ;;		___lwdiv
   779 ;;		___wmul
   780 ;; This function is called by:
   781 ;;		_keyscane
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     06F3                     _Lcdoutput:	
   786                           ;psect for function _Lcdoutput
   787                           
   788     06F3                     l881:	
   789                           ;incstack = 0
   790                           ; Regs used in _Lcdoutput: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   791                           
   792                           
   793                           ;Lcd_stespeed_class_program.c: 124: void Lcdoutput(unsigned int i);Lcd_stespeed_class_pr
      +                          ogram.c: 125: {;Lcd_stespeed_class_program.c: 126:     d4=(unsigned char)(i/1000);
   794     06F3  30E8               	movlw	232
   795     06F4  00F6               	movwf	___lwdiv@divisor
   796     06F5  3003               	movlw	3
   797     06F6  00F7               	movwf	___lwdiv@divisor+1
   798     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   799     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   800     06F9  084E               	movf	Lcdoutput@i+1,w
   801     06FA  00F9               	movwf	___lwdiv@dividend+1
   802     06FB  084D               	movf	Lcdoutput@i,w
   803     06FC  00F8               	movwf	___lwdiv@dividend
   804     06FD  120A  118A  258E  120A  118A  	fcall	___lwdiv
   805     0702  0876               	movf	?___lwdiv,w
   806     0703  1283               	bcf	3,5	;RP0=0, select bank0
   807     0704  1303               	bcf	3,6	;RP1=0, select bank0
   808     0705  00CF               	movwf	??_Lcdoutput
   809     0706  01D0               	clrf	??_Lcdoutput+1
   810     0707  084F               	movf	??_Lcdoutput,w
   811     0708  00C8               	movwf	_d4
   812     0709  0850               	movf	??_Lcdoutput+1,w
   813     070A  00C9               	movwf	_d4+1
   814                           
   815                           ;Lcd_stespeed_class_program.c: 127:     d3=(unsigned char)((i-(d4*1000))/100);
   816     070B  3064               	movlw	100
   817     070C  00F6               	movwf	___lwdiv@divisor
   818     070D  3000               	movlw	0
   819     070E  00F7               	movwf	___lwdiv@divisor+1
   820     070F  0849               	movf	_d4+1,w
   821     0710  00F1               	movwf	___wmul@multiplier+1
   822     0711  0848               	movf	_d4,w
   823     0712  00F0               	movwf	___wmul@multiplier
   824     0713  3018               	movlw	24
   825     0714  00F2               	movwf	___wmul@multiplicand
   826     0715  30FC               	movlw	252
   827     0716  00F3               	movwf	___wmul@multiplicand+1
   828     0717  120A  118A  2569  120A  118A  	fcall	___wmul
   829     071C  1283               	bcf	3,5	;RP0=0, select bank0
   830     071D  1303               	bcf	3,6	;RP1=0, select bank0
   831     071E  084D               	movf	Lcdoutput@i,w
   832     071F  0770               	addwf	?___wmul,w
   833     0720  00F8               	movwf	___lwdiv@dividend
   834     0721  084E               	movf	Lcdoutput@i+1,w
   835     0722  1803               	skipnc
   836     0723  0A4E               	incf	Lcdoutput@i+1,w
   837     0724  0771               	addwf	?___wmul+1,w
   838     0725  00F9               	movwf	___lwdiv@dividend+1
   839     0726  120A  118A  258E  120A  118A  	fcall	___lwdiv
   840     072B  0876               	movf	?___lwdiv,w
   841     072C  1283               	bcf	3,5	;RP0=0, select bank0
   842     072D  1303               	bcf	3,6	;RP1=0, select bank0
   843     072E  00CF               	movwf	??_Lcdoutput
   844     072F  01D0               	clrf	??_Lcdoutput+1
   845     0730  084F               	movf	??_Lcdoutput,w
   846     0731  00C6               	movwf	_d3
   847     0732  0850               	movf	??_Lcdoutput+1,w
   848     0733  00C7               	movwf	_d3+1
   849                           
   850                           ;Lcd_stespeed_class_program.c: 128:     d2=(unsigned char)((i-(d4*1000)-(d3*100))/10);
   851     0734  300A               	movlw	10
   852     0735  00F6               	movwf	___lwdiv@divisor
   853     0736  3000               	movlw	0
   854     0737  00F7               	movwf	___lwdiv@divisor+1
   855     0738  0849               	movf	_d4+1,w
   856     0739  00F1               	movwf	___wmul@multiplier+1
   857     073A  0848               	movf	_d4,w
   858     073B  00F0               	movwf	___wmul@multiplier
   859     073C  3018               	movlw	24
   860     073D  00F2               	movwf	___wmul@multiplicand
   861     073E  30FC               	movlw	252
   862     073F  00F3               	movwf	___wmul@multiplicand+1
   863     0740  120A  118A  2569  120A  118A  	fcall	___wmul
   864     0745  0870               	movf	?___wmul,w
   865     0746  1283               	bcf	3,5	;RP0=0, select bank0
   866     0747  1303               	bcf	3,6	;RP1=0, select bank0
   867     0748  00CF               	movwf	??_Lcdoutput
   868     0749  0871               	movf	?___wmul+1,w
   869     074A  00D0               	movwf	??_Lcdoutput+1
   870     074B  0847               	movf	_d3+1,w
   871     074C  00F1               	movwf	___wmul@multiplier+1
   872     074D  0846               	movf	_d3,w
   873     074E  00F0               	movwf	___wmul@multiplier
   874     074F  309C               	movlw	156
   875     0750  00F2               	movwf	___wmul@multiplicand
   876     0751  30FF               	movlw	255
   877     0752  00F3               	movwf	___wmul@multiplicand+1
   878     0753  120A  118A  2569  120A  118A  	fcall	___wmul
   879     0758  0870               	movf	?___wmul,w
   880     0759  1283               	bcf	3,5	;RP0=0, select bank0
   881     075A  1303               	bcf	3,6	;RP1=0, select bank0
   882     075B  074F               	addwf	??_Lcdoutput,w
   883     075C  00D1               	movwf	??_Lcdoutput+2
   884     075D  0871               	movf	?___wmul+1,w
   885     075E  1803               	skipnc
   886     075F  0A71               	incf	?___wmul+1,w
   887     0760  0750               	addwf	??_Lcdoutput+1,w
   888     0761  00D2               	movwf	??_Lcdoutput+3
   889     0762  084D               	movf	Lcdoutput@i,w
   890     0763  0751               	addwf	??_Lcdoutput+2,w
   891     0764  00F8               	movwf	___lwdiv@dividend
   892     0765  084E               	movf	Lcdoutput@i+1,w
   893     0766  1803               	skipnc
   894     0767  0A4E               	incf	Lcdoutput@i+1,w
   895     0768  0752               	addwf	??_Lcdoutput+3,w
   896     0769  00F9               	movwf	___lwdiv@dividend+1
   897     076A  120A  118A  258E  120A  118A  	fcall	___lwdiv
   898     076F  0876               	movf	?___lwdiv,w
   899     0770  1283               	bcf	3,5	;RP0=0, select bank0
   900     0771  1303               	bcf	3,6	;RP1=0, select bank0
   901     0772  00D3               	movwf	??_Lcdoutput+4
   902     0773  01D4               	clrf	??_Lcdoutput+5
   903     0774  0853               	movf	??_Lcdoutput+4,w
   904     0775  00C4               	movwf	_d2
   905     0776  0854               	movf	??_Lcdoutput+5,w
   906     0777  00C5               	movwf	_d2+1
   907                           
   908                           ;Lcd_stespeed_class_program.c: 129:     d1=(unsigned char)(i-(d4*1000)-(d3*1000)-(d2*10)
      +                          );
   909     0778  3018               	movlw	24
   910     0779  00F0               	movwf	___bmul@multiplicand
   911     077A  0848               	movf	_d4,w
   912     077B  120A  118A  251F  120A  118A  	fcall	___bmul
   913     0780  1283               	bcf	3,5	;RP0=0, select bank0
   914     0781  1303               	bcf	3,6	;RP1=0, select bank0
   915     0782  00CF               	movwf	??_Lcdoutput
   916     0783  3018               	movlw	24
   917     0784  00F0               	movwf	___bmul@multiplicand
   918     0785  0846               	movf	_d3,w
   919     0786  120A  118A  251F  120A  118A  	fcall	___bmul
   920     078B  1283               	bcf	3,5	;RP0=0, select bank0
   921     078C  1303               	bcf	3,6	;RP1=0, select bank0
   922     078D  00D0               	movwf	??_Lcdoutput+1
   923     078E  30F6               	movlw	246
   924     078F  00F0               	movwf	___bmul@multiplicand
   925     0790  0844               	movf	_d2,w
   926     0791  120A  118A  251F  120A  118A  	fcall	___bmul
   927     0796  1283               	bcf	3,5	;RP0=0, select bank0
   928     0797  1303               	bcf	3,6	;RP1=0, select bank0
   929     0798  0750               	addwf	??_Lcdoutput+1,w
   930     0799  074F               	addwf	??_Lcdoutput,w
   931     079A  074D               	addwf	Lcdoutput@i,w
   932     079B  00D1               	movwf	??_Lcdoutput+2
   933     079C  01D2               	clrf	??_Lcdoutput+3
   934     079D  0851               	movf	??_Lcdoutput+2,w
   935     079E  00C2               	movwf	_d1
   936     079F  0852               	movf	??_Lcdoutput+3,w
   937     07A0  00C3               	movwf	_d1+1
   938                           
   939                           ;Lcd_stespeed_class_program.c: 130:     Lcd_Command(0x88);
   940     07A1  3088               	movlw	136
   941     07A2  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   942                           
   943                           ;Lcd_stespeed_class_program.c: 131:     Lcd_Data(0x30+d4);
   944     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   945     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   946     07A9  0848               	movf	_d4,w
   947     07AA  3E30               	addlw	48
   948     07AB  120A  118A  250B  120A  118A  	fcall	_Lcd_Data
   949                           
   950                           ;Lcd_stespeed_class_program.c: 132:     Lcd_Command(0x89);
   951     07B0  3089               	movlw	137
   952     07B1  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   953                           
   954                           ;Lcd_stespeed_class_program.c: 133:     Lcd_Data(0x30+d3);
   955     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   956     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   957     07B8  0846               	movf	_d3,w
   958     07B9  3E30               	addlw	48
   959     07BA  120A  118A  250B  120A  118A  	fcall	_Lcd_Data
   960                           
   961                           ;Lcd_stespeed_class_program.c: 134:     Lcd_Command(0x8A);
   962     07BF  308A               	movlw	138
   963     07C0  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   964                           
   965                           ;Lcd_stespeed_class_program.c: 135:     Lcd_Data(0x30+d2);
   966     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   967     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   968     07C7  0844               	movf	_d2,w
   969     07C8  3E30               	addlw	48
   970     07C9  120A  118A  250B  120A  118A  	fcall	_Lcd_Data
   971                           
   972                           ;Lcd_stespeed_class_program.c: 136:     Lcd_Command(0x8B);
   973     07CE  308B               	movlw	139
   974     07CF  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
   975                           
   976                           ;Lcd_stespeed_class_program.c: 137:     Lcd_Data(0x30+d1);
   977     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   978     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   979     07D6  0842               	movf	_d1,w
   980     07D7  3E30               	addlw	48
   981     07D8  120A  118A  250B  120A  118A  	fcall	_Lcd_Data
   982     07DD                     l83:
   983     07DD  0008               	return
   984     07DE                     __end_of_Lcdoutput:
   985                           
   986                           	psect	text3
   987     0569                     __ptext3:	
   988 ;; *************** function ___wmul *****************
   989 ;; Defined at:
   990 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  multiplier      2    0[COMMON] unsigned int 
   993 ;;  multiplicand    2    2[COMMON] unsigned int 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  product         2    4[COMMON] unsigned int 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2    0[COMMON] unsigned int 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         4       0       0       0       0
  1006 ;;      Locals:         2       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0
  1008 ;;      Totals:         6       0       0       0       0
  1009 ;;Total ram usage:        6 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_Lcdoutput
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018     0569                     ___wmul:	
  1019                           ;psect for function ___wmul
  1020                           
  1021     0569                     l825:	
  1022                           ;incstack = 0
  1023                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1024                           
  1025     0569  01F4               	clrf	___wmul@product
  1026     056A  01F5               	clrf	___wmul@product+1
  1027     056B                     l827:
  1028     056B  1C70               	btfss	___wmul@multiplier,0
  1029     056C  2D6E               	goto	u181
  1030     056D  2D6F               	goto	u180
  1031     056E                     u181:
  1032     056E  2D75               	goto	l169
  1033     056F                     u180:
  1034     056F                     l829:
  1035     056F  0872               	movf	___wmul@multiplicand,w
  1036     0570  07F4               	addwf	___wmul@product,f
  1037     0571  1803               	skipnc
  1038     0572  0AF5               	incf	___wmul@product+1,f
  1039     0573  0873               	movf	___wmul@multiplicand+1,w
  1040     0574  07F5               	addwf	___wmul@product+1,f
  1041     0575                     l169:
  1042     0575  3001               	movlw	1
  1043     0576                     u195:
  1044     0576  1003               	clrc
  1045     0577  0DF2               	rlf	___wmul@multiplicand,f
  1046     0578  0DF3               	rlf	___wmul@multiplicand+1,f
  1047     0579  3EFF               	addlw	-1
  1048     057A  1D03               	skipz
  1049     057B  2D76               	goto	u195
  1050     057C                     l831:
  1051     057C  3001               	movlw	1
  1052     057D                     u205:
  1053     057D  1003               	clrc
  1054     057E  0CF1               	rrf	___wmul@multiplier+1,f
  1055     057F  0CF0               	rrf	___wmul@multiplier,f
  1056     0580  3EFF               	addlw	-1
  1057     0581  1D03               	skipz
  1058     0582  2D7D               	goto	u205
  1059     0583                     l833:
  1060     0583  0870               	movf	___wmul@multiplier,w
  1061     0584  0471               	iorwf	___wmul@multiplier+1,w
  1062     0585  1D03               	btfss	3,2
  1063     0586  2D88               	goto	u211
  1064     0587  2D89               	goto	u210
  1065     0588                     u211:
  1066     0588  2D6B               	goto	l827
  1067     0589                     u210:
  1068     0589                     l835:
  1069     0589  0875               	movf	___wmul@product+1,w
  1070     058A  00F1               	movwf	?___wmul+1
  1071     058B  0874               	movf	___wmul@product,w
  1072     058C  00F0               	movwf	?___wmul
  1073     058D                     l171:
  1074     058D  0008               	return
  1075     058E                     __end_of___wmul:
  1076                           
  1077                           	psect	text4
  1078     058E                     __ptext4:	
  1079 ;; *************** function ___lwdiv *****************
  1080 ;; Defined at:
  1081 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  divisor         2    6[COMMON] unsigned int 
  1084 ;;  dividend        2    8[COMMON] unsigned int 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  quotient        2   10[COMMON] unsigned int 
  1087 ;;  counter         1   12[COMMON] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2    6[COMMON] unsigned int 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, btemp+1
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         4       0       0       0       0
  1098 ;;      Locals:         3       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         7       0       0       0       0
  1101 ;;Total ram usage:        7 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_Lcdoutput
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     058E                     ___lwdiv:	
  1111                           ;psect for function ___lwdiv
  1112                           
  1113     058E                     l855:	
  1114                           ;incstack = 0
  1115                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1116                           
  1117     058E  01FA               	clrf	___lwdiv@quotient
  1118     058F  01FB               	clrf	___lwdiv@quotient+1
  1119     0590                     l857:
  1120     0590  0876               	movf	___lwdiv@divisor,w
  1121     0591  0477               	iorwf	___lwdiv@divisor+1,w
  1122     0592  1903               	btfsc	3,2
  1123     0593  2D95               	goto	u241
  1124     0594  2D96               	goto	u240
  1125     0595                     u241:
  1126     0595  2DCD               	goto	l877
  1127     0596                     u240:
  1128     0596                     l859:
  1129     0596  01FC               	clrf	___lwdiv@counter
  1130     0597  0AFC               	incf	___lwdiv@counter,f
  1131     0598  2DA4               	goto	l865
  1132     0599                     l861:
  1133     0599  3001               	movlw	1
  1134     059A                     u255:
  1135     059A  1003               	clrc
  1136     059B  0DF6               	rlf	___lwdiv@divisor,f
  1137     059C  0DF7               	rlf	___lwdiv@divisor+1,f
  1138     059D  3EFF               	addlw	-1
  1139     059E  1D03               	skipz
  1140     059F  2D9A               	goto	u255
  1141     05A0                     l863:
  1142     05A0  3001               	movlw	1
  1143     05A1  00FF               	movwf	btemp+1
  1144     05A2  087F               	movf	btemp+1,w
  1145     05A3  07FC               	addwf	___lwdiv@counter,f
  1146     05A4                     l865:
  1147     05A4  1FF7               	btfss	___lwdiv@divisor+1,7
  1148     05A5  2DA7               	goto	u261
  1149     05A6  2DA8               	goto	u260
  1150     05A7                     u261:
  1151     05A7  2D99               	goto	l861
  1152     05A8                     u260:
  1153     05A8                     l867:
  1154     05A8  3001               	movlw	1
  1155     05A9                     u275:
  1156     05A9  1003               	clrc
  1157     05AA  0DFA               	rlf	___lwdiv@quotient,f
  1158     05AB  0DFB               	rlf	___lwdiv@quotient+1,f
  1159     05AC  3EFF               	addlw	-1
  1160     05AD  1D03               	skipz
  1161     05AE  2DA9               	goto	u275
  1162     05AF  0877               	movf	___lwdiv@divisor+1,w
  1163     05B0  0279               	subwf	___lwdiv@dividend+1,w
  1164     05B1  1D03               	skipz
  1165     05B2  2DB5               	goto	u285
  1166     05B3  0876               	movf	___lwdiv@divisor,w
  1167     05B4  0278               	subwf	___lwdiv@dividend,w
  1168     05B5                     u285:
  1169     05B5  1C03               	skipc
  1170     05B6  2DB8               	goto	u281
  1171     05B7  2DB9               	goto	u280
  1172     05B8                     u281:
  1173     05B8  2DC0               	goto	l873
  1174     05B9                     u280:
  1175     05B9                     l869:
  1176     05B9  0876               	movf	___lwdiv@divisor,w
  1177     05BA  02F8               	subwf	___lwdiv@dividend,f
  1178     05BB  0877               	movf	___lwdiv@divisor+1,w
  1179     05BC  1C03               	skipc
  1180     05BD  03F9               	decf	___lwdiv@dividend+1,f
  1181     05BE  02F9               	subwf	___lwdiv@dividend+1,f
  1182     05BF                     l871:
  1183     05BF  147A               	bsf	___lwdiv@quotient,0
  1184     05C0                     l873:
  1185     05C0  3001               	movlw	1
  1186     05C1                     u295:
  1187     05C1  1003               	clrc
  1188     05C2  0CF7               	rrf	___lwdiv@divisor+1,f
  1189     05C3  0CF6               	rrf	___lwdiv@divisor,f
  1190     05C4  3EFF               	addlw	-1
  1191     05C5  1D03               	skipz
  1192     05C6  2DC1               	goto	u295
  1193     05C7                     l875:
  1194     05C7  3001               	movlw	1
  1195     05C8  02FC               	subwf	___lwdiv@counter,f
  1196     05C9  1D03               	btfss	3,2
  1197     05CA  2DCC               	goto	u301
  1198     05CB  2DCD               	goto	u300
  1199     05CC                     u301:
  1200     05CC  2DA8               	goto	l867
  1201     05CD                     u300:
  1202     05CD                     l877:
  1203     05CD  087B               	movf	___lwdiv@quotient+1,w
  1204     05CE  00F7               	movwf	?___lwdiv+1
  1205     05CF  087A               	movf	___lwdiv@quotient,w
  1206     05D0  00F6               	movwf	?___lwdiv
  1207     05D1                     l449:
  1208     05D1  0008               	return
  1209     05D2                     __end_of___lwdiv:
  1210                           
  1211                           	psect	text5
  1212     051F                     __ptext5:	
  1213 ;; *************** function ___bmul *****************
  1214 ;; Defined at:
  1215 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  multiplier      1    wreg     unsigned char 
  1218 ;;  multiplicand    1    0[COMMON] unsigned char 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  multiplier      1    2[COMMON] unsigned char 
  1221 ;;  product         1    1[COMMON] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      unsigned char 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, btemp+1
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         1       0       0       0       0
  1232 ;;      Locals:         2       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0
  1234 ;;      Totals:         3       0       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_Lcdoutput
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244     051F                     ___bmul:	
  1245                           ;psect for function ___bmul
  1246                           
  1247                           
  1248                           ;incstack = 0
  1249                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1250                           ;___bmul@multiplier stored from wreg
  1251     051F  00F2               	movwf	___bmul@multiplier
  1252     0520                     l839:
  1253     0520  01F1               	clrf	___bmul@product
  1254     0521                     l841:
  1255     0521  1C72               	btfss	___bmul@multiplier,0
  1256     0522  2D24               	goto	u221
  1257     0523  2D25               	goto	u220
  1258     0524                     u221:
  1259     0524  2D29               	goto	l845
  1260     0525                     u220:
  1261     0525                     l843:
  1262     0525  0870               	movf	___bmul@multiplicand,w
  1263     0526  00FF               	movwf	btemp+1
  1264     0527  087F               	movf	btemp+1,w
  1265     0528  07F1               	addwf	___bmul@product,f
  1266     0529                     l845:
  1267     0529  1003               	clrc
  1268     052A  0DF0               	rlf	___bmul@multiplicand,f
  1269     052B                     l847:
  1270     052B  1003               	clrc
  1271     052C  0CF2               	rrf	___bmul@multiplier,f
  1272     052D                     l849:
  1273     052D  0872               	movf	___bmul@multiplier,w
  1274     052E  1D03               	btfss	3,2
  1275     052F  2D31               	goto	u231
  1276     0530  2D32               	goto	u230
  1277     0531                     u231:
  1278     0531  2D21               	goto	l841
  1279     0532                     u230:
  1280     0532                     l851:
  1281     0532  0871               	movf	___bmul@product,w
  1282     0533                     l195:
  1283     0533  0008               	return
  1284     0534                     __end_of___bmul:
  1285                           
  1286                           	psect	text6
  1287     050B                     __ptext6:	
  1288 ;; *************** function _Lcd_Data *****************
  1289 ;; Defined at:
  1290 ;;		line 108 in file "Lcd_stespeed_class_program.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  i               1    wreg     unsigned char 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  i               1    2[COMMON] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, btemp+1
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       0       0       0       0
  1305 ;;      Locals:         1       0       0       0       0
  1306 ;;      Temps:          2       0       0       0       0
  1307 ;;      Totals:         3       0       0       0       0
  1308 ;;Total ram usage:        3 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_keyscane
  1314 ;;		_Lcdoutput
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318     050B                     _Lcd_Data:	
  1319                           ;psect for function _Lcd_Data
  1320                           
  1321                           
  1322                           ;incstack = 0
  1323                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
  1324                           ;Lcd_Data@i stored from wreg
  1325     050B  00F2               	movwf	Lcd_Data@i
  1326     050C                     l815:
  1327                           
  1328                           ;Lcd_stespeed_class_program.c: 108: void Lcd_Data(unsigned char i);Lcd_stespeed_class_pr
      +                          ogram.c: 109: {;Lcd_stespeed_class_program.c: 110:     PORTC|=0x08;
  1329     050C  1283               	bcf	3,5	;RP0=0, select bank0
  1330     050D  1303               	bcf	3,6	;RP1=0, select bank0
  1331     050E  1587               	bsf	7,3	;volatile
  1332     050F                     l817:
  1333                           
  1334                           ;Lcd_stespeed_class_program.c: 111:     PORTD=i;
  1335     050F  0872               	movf	Lcd_Data@i,w
  1336     0510  0088               	movwf	8	;volatile
  1337     0511                     l819:
  1338                           
  1339                           ;Lcd_stespeed_class_program.c: 112:     PORTC|=0x01;
  1340     0511  1407               	bsf	7,0	;volatile
  1341     0512                     l821:
  1342                           
  1343                           ;Lcd_stespeed_class_program.c: 113:     PORTC&=~0x01;
  1344     0512  30FE               	movlw	254
  1345     0513  00FF               	movwf	btemp+1
  1346     0514  087F               	movf	btemp+1,w
  1347     0515  0587               	andwf	7,f	;volatile
  1348     0516                     l823:
  1349                           
  1350                           ;Lcd_stespeed_class_program.c: 114:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1351     0516  30C3               	movlw	195
  1352     0517  00F1               	movwf	??_Lcd_Data+1
  1353     0518  30CD               	movlw	205
  1354     0519  00F0               	movwf	??_Lcd_Data
  1355     051A                     u357:
  1356     051A  0BF0               	decfsz	??_Lcd_Data,f
  1357     051B  2D1A               	goto	u357
  1358     051C  0BF1               	decfsz	??_Lcd_Data+1,f
  1359     051D  2D1A               	goto	u357
  1360     051E                     l77:
  1361     051E  0008               	return
  1362     051F                     __end_of_Lcd_Data:
  1363                           
  1364                           	psect	text7
  1365     05D2                     __ptext7:	
  1366 ;; *************** function _init *****************
  1367 ;; Defined at:
  1368 ;;		line 39 in file "Lcd_stespeed_class_program.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0
  1385 ;;      Totals:         2       0       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		_Lcd_Command
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396     05D2                     _init:	
  1397                           ;psect for function _init
  1398                           
  1399     05D2                     l883:	
  1400                           ;incstack = 0
  1401                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1402                           
  1403                           
  1404                           ;Lcd_stespeed_class_program.c: 41:     TRISC =0x00;
  1405     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  1406     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  1407     05D4  0187               	clrf	7	;volatile
  1408     05D5                     l885:
  1409                           
  1410                           ;Lcd_stespeed_class_program.c: 42:     TRISB =0xF0;
  1411     05D5  30F0               	movlw	240
  1412     05D6  0086               	movwf	6	;volatile
  1413     05D7                     l887:
  1414                           
  1415                           ;Lcd_stespeed_class_program.c: 43:     TRISD =0x00;
  1416     05D7  0188               	clrf	8	;volatile
  1417     05D8                     l889:
  1418                           
  1419                           ;Lcd_stespeed_class_program.c: 44:     PORTB =0x00;
  1420     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1421     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1422     05DA  0186               	clrf	6	;volatile
  1423     05DB                     l891:
  1424                           
  1425                           ;Lcd_stespeed_class_program.c: 45:     OPTION_REG&=0x7F;
  1426     05DB  307F               	movlw	127
  1427     05DC  00FF               	movwf	btemp+1
  1428     05DD  087F               	movf	btemp+1,w
  1429     05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1430     05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1431     05E0  0581               	andwf	1,f	;volatile
  1432     05E1                     l893:
  1433                           
  1434                           ;Lcd_stespeed_class_program.c: 46:     Lcd_Command(0x30);
  1435     05E1  3030               	movlw	48
  1436     05E2  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1437     05E7                     l895:
  1438                           
  1439                           ;Lcd_stespeed_class_program.c: 47:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1440     05E7  30C3               	movlw	195
  1441     05E8  00F4               	movwf	??_init+1
  1442     05E9  30CD               	movlw	205
  1443     05EA  00F3               	movwf	??_init
  1444     05EB                     u367:
  1445     05EB  0BF3               	decfsz	??_init,f
  1446     05EC  2DEB               	goto	u367
  1447     05ED  0BF4               	decfsz	??_init+1,f
  1448     05EE  2DEB               	goto	u367
  1449     05EF                     l897:
  1450                           
  1451                           ;Lcd_stespeed_class_program.c: 48:     Lcd_Command(0x30);
  1452     05EF  3030               	movlw	48
  1453     05F0  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1454     05F5                     l899:
  1455                           
  1456                           ;Lcd_stespeed_class_program.c: 49:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1457     05F5  30C3               	movlw	195
  1458     05F6  00F4               	movwf	??_init+1
  1459     05F7  30CD               	movlw	205
  1460     05F8  00F3               	movwf	??_init
  1461     05F9                     u377:
  1462     05F9  0BF3               	decfsz	??_init,f
  1463     05FA  2DF9               	goto	u377
  1464     05FB  0BF4               	decfsz	??_init+1,f
  1465     05FC  2DF9               	goto	u377
  1466     05FD                     l901:
  1467                           
  1468                           ;Lcd_stespeed_class_program.c: 50:     Lcd_Command(0x30);
  1469     05FD  3030               	movlw	48
  1470     05FE  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1471     0603                     l903:
  1472                           
  1473                           ;Lcd_stespeed_class_program.c: 51:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1474     0603  30C3               	movlw	195
  1475     0604  00F4               	movwf	??_init+1
  1476     0605  30CD               	movlw	205
  1477     0606  00F3               	movwf	??_init
  1478     0607                     u387:
  1479     0607  0BF3               	decfsz	??_init,f
  1480     0608  2E07               	goto	u387
  1481     0609  0BF4               	decfsz	??_init+1,f
  1482     060A  2E07               	goto	u387
  1483     060B                     l905:
  1484                           
  1485                           ;Lcd_stespeed_class_program.c: 52:     Lcd_Command(0x38);
  1486     060B  3038               	movlw	56
  1487     060C  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1488     0611                     l907:
  1489                           
  1490                           ;Lcd_stespeed_class_program.c: 53:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1491     0611  30C3               	movlw	195
  1492     0612  00F4               	movwf	??_init+1
  1493     0613  30CD               	movlw	205
  1494     0614  00F3               	movwf	??_init
  1495     0615                     u397:
  1496     0615  0BF3               	decfsz	??_init,f
  1497     0616  2E15               	goto	u397
  1498     0617  0BF4               	decfsz	??_init+1,f
  1499     0618  2E15               	goto	u397
  1500     0619                     l909:
  1501                           
  1502                           ;Lcd_stespeed_class_program.c: 54:     Lcd_Command(0x06);
  1503     0619  3006               	movlw	6
  1504     061A  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1505     061F                     l911:
  1506                           
  1507                           ;Lcd_stespeed_class_program.c: 55:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1508     061F  30C3               	movlw	195
  1509     0620  00F4               	movwf	??_init+1
  1510     0621  30CD               	movlw	205
  1511     0622  00F3               	movwf	??_init
  1512     0623                     u407:
  1513     0623  0BF3               	decfsz	??_init,f
  1514     0624  2E23               	goto	u407
  1515     0625  0BF4               	decfsz	??_init+1,f
  1516     0626  2E23               	goto	u407
  1517     0627                     l913:
  1518                           
  1519                           ;Lcd_stespeed_class_program.c: 56:     Lcd_Command(0x0c);
  1520     0627  300C               	movlw	12
  1521     0628  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1522     062D                     l915:
  1523                           
  1524                           ;Lcd_stespeed_class_program.c: 57:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1525     062D  30C3               	movlw	195
  1526     062E  00F4               	movwf	??_init+1
  1527     062F  30CD               	movlw	205
  1528     0630  00F3               	movwf	??_init
  1529     0631                     u417:
  1530     0631  0BF3               	decfsz	??_init,f
  1531     0632  2E31               	goto	u417
  1532     0633  0BF4               	decfsz	??_init+1,f
  1533     0634  2E31               	goto	u417
  1534     0635                     l917:
  1535                           
  1536                           ;Lcd_stespeed_class_program.c: 58:     Lcd_Command(0x01);
  1537     0635  3001               	movlw	1
  1538     0636  120A  118A  2534  120A  118A  	fcall	_Lcd_Command
  1539     063B                     l919:
  1540                           
  1541                           ;Lcd_stespeed_class_program.c: 59:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1542     063B  30C3               	movlw	195
  1543     063C  00F4               	movwf	??_init+1
  1544     063D  30CD               	movlw	205
  1545     063E  00F3               	movwf	??_init
  1546     063F                     u427:
  1547     063F  0BF3               	decfsz	??_init,f
  1548     0640  2E3F               	goto	u427
  1549     0641  0BF4               	decfsz	??_init+1,f
  1550     0642  2E3F               	goto	u427
  1551     0643                     l921:
  1552                           
  1553                           ;Lcd_stespeed_class_program.c: 60:     j=0;
  1554     0643  1283               	bcf	3,5	;RP0=0, select bank0
  1555     0644  1303               	bcf	3,6	;RP1=0, select bank0
  1556     0645  01C0               	clrf	_j
  1557     0646  01C1               	clrf	_j+1
  1558     0647                     l59:
  1559     0647  0008               	return
  1560     0648                     __end_of_init:
  1561                           
  1562                           	psect	text8
  1563     0534                     __ptext8:	
  1564 ;; *************** function _Lcd_Command *****************
  1565 ;; Defined at:
  1566 ;;		line 116 in file "Lcd_stespeed_class_program.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  i               1    wreg     unsigned char 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  i               1    2[COMMON] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, btemp+1
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         1       0       0       0       0
  1582 ;;      Temps:          2       0       0       0       0
  1583 ;;      Totals:         3       0       0       0       0
  1584 ;;Total ram usage:        3 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_init
  1590 ;;		_keyscane
  1591 ;;		_Lcdoutput
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595     0534                     _Lcd_Command:	
  1596                           ;psect for function _Lcd_Command
  1597                           
  1598                           
  1599                           ;incstack = 0
  1600                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0+btemp+1]
  1601                           ;Lcd_Command@i stored from wreg
  1602     0534  00F2               	movwf	Lcd_Command@i
  1603     0535                     l807:
  1604                           
  1605                           ;Lcd_stespeed_class_program.c: 116: void Lcd_Command(unsigned char i);Lcd_stespeed_class
      +                          _program.c: 117: {;Lcd_stespeed_class_program.c: 118:     PORTC&=~0x08;
  1606     0535  30F7               	movlw	247
  1607     0536  00FF               	movwf	btemp+1
  1608     0537  087F               	movf	btemp+1,w
  1609     0538  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0539  1303               	bcf	3,6	;RP1=0, select bank0
  1611     053A  0587               	andwf	7,f	;volatile
  1612     053B                     l809:
  1613                           
  1614                           ;Lcd_stespeed_class_program.c: 119:     PORTD =i;
  1615     053B  0872               	movf	Lcd_Command@i,w
  1616     053C  0088               	movwf	8	;volatile
  1617     053D                     l811:
  1618                           
  1619                           ;Lcd_stespeed_class_program.c: 120:     PORTC|=0x01;
  1620     053D  1407               	bsf	7,0	;volatile
  1621     053E                     l813:
  1622                           
  1623                           ;Lcd_stespeed_class_program.c: 121:     PORTC&=~0x01;
  1624     053E  30FE               	movlw	254
  1625     053F  00FF               	movwf	btemp+1
  1626     0540  087F               	movf	btemp+1,w
  1627     0541  0587               	andwf	7,f	;volatile
  1628                           
  1629                           ;Lcd_stespeed_class_program.c: 122:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1630     0542  30C3               	movlw	195
  1631     0543  00F1               	movwf	??_Lcd_Command+1
  1632     0544  30CD               	movlw	205
  1633     0545  00F0               	movwf	??_Lcd_Command
  1634     0546                     u437:
  1635     0546  0BF0               	decfsz	??_Lcd_Command,f
  1636     0547  2D46               	goto	u437
  1637     0548  0BF1               	decfsz	??_Lcd_Command+1,f
  1638     0549  2D46               	goto	u437
  1639     054A                     l80:
  1640     054A  0008               	return
  1641     054B                     __end_of_Lcd_Command:
  1642     007E                     btemp	set	126	;btemp
  1643     007E                     wtemp0	set	126
  1644                           
  1645                           	psect	config
  1646                           
  1647                           ;Config register CONFIG @ 0x2007
  1648                           ;	Oscillator Selection bits
  1649                           ;	FOSC = EXTRC, RC oscillator
  1650                           ;	Watchdog Timer Enable bit
  1651                           ;	WDTE = OFF, WDT disabled
  1652                           ;	Power-up Timer Enable bit
  1653                           ;	PWRTE = OFF, PWRT disabled
  1654                           ;	Brown-out Reset Enable bit
  1655                           ;	BOREN = OFF, BOR disabled
  1656                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1657                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1658                           ;	Data EEPROM Memory Code Protection bit
  1659                           ;	CPD = OFF, Data EEPROM code protection off
  1660                           ;	Flash Program Memory Write Enable bits
  1661                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1662                           ;	In-Circuit Debugger Mode bit
  1663                           ;	DEBUG = 0x1, unprogrammed default
  1664                           ;	Flash Program Memory Code Protection bit
  1665                           ;	CP = OFF, Code protection off
  1666     2007                     	org	8199
  1667     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Lcdoutput->___lwdiv
    ___lwdiv->___wmul
    _init->_Lcd_Command

Critical Paths under _main in BANK0

    _keyscane->_Lcdoutput

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1988
                               _init
                           _keyscane
 ---------------------------------------------------------------------------------
 (1) _keyscane                                             0     0      0    1966
                        _Lcd_Command
                           _Lcd_Data
                          _Lcdoutput
 ---------------------------------------------------------------------------------
 (2) _Lcdoutput                                            8     6      2    1922
                                              0 BANK0      8     6      2
                        _Lcd_Command
                           _Lcd_Data
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _Lcd_Command
 ---------------------------------------------------------------------------------
 (3) _Lcd_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _Lcd_Command
   _keyscane
     _Lcd_Command
     _Lcd_Data
     _Lcdoutput
       _Lcd_Command
       _Lcd_Data
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Jul 17 18:10:02 2024

                      _i 003E                        _j 0040                        _k 0020  
                      _m 007D                        _n 004B                        _x 004C  
                      pc 0002           ___bmul@product 0071                       l80 054A  
                     l74 06F2                       l59 0647                       l83 07DD  
                     l77 051E                       _d1 0042                       _d2 0044  
                     _d3 0046                       _d4 0048                       fsr 0004  
    ___wmul@multiplicand 0072                      l171 058D                      l169 0575  
                    l195 0533                      l449 05D1                      l811 053D  
                    l813 053E                      l901 05FD                      l821 0512  
                    l807 0535                      l911 061F                      l903 0603  
                    l823 0516                      l815 050C                      l831 057C  
                    l809 053B                      l921 0643                      l913 0627  
                    l905 060B                      l817 050F                      l841 0521  
                    l833 0583                      l825 0569                      l915 062D  
                    l907 0611                      l819 0511                      l851 0532  
                    l843 0525                      l835 0589                      l827 056B  
                    l923 0648                      l917 0635                      l909 0619  
                    l845 0529                      l861 0599                      l829 056F  
                    l941 0673                      l933 0657                      l925 064E  
                    l919 063B                      l847 052B                      l839 0520  
                    l871 05BF                      l863 05A0                      l855 058E  
                    l951 0687                      l935 0661                      l927 0654  
                    l849 052D                      l873 05C0                      l865 05A4  
                    l857 0590                      l881 06F3                      l961 06B8  
                    l953 068D                      l937 0667                      l891 05DB  
                    l883 05D2                      l875 05C7                      l867 05A8  
                    l859 0596                      l963 06C4                      l955 069F  
                    l947 0677                      l939 066D                      l893 05E1  
                    l885 05D5                      l869 05B9                      l877 05CD  
                    l973 06DB                      l965 06CA                      l957 06AE  
                    l949 0681                      l981 06E4                      l895 05E7  
                    l887 05D7                      l975 06DD                      l967 06D0  
                    l959 06B2                      l983 04EA                      l897 05EF  
                    l889 05D8                      l969 06D4                      l985 04EF  
                    l899 05F5                      u210 0589                      u211 0588  
                    u220 0525                      u300 05CD                      u221 0524  
                    u301 05CC                      u205 057D                      u230 0532  
                    u310 066D                      u231 0531                      u311 066C  
                    u240 0596                      u320 068D                      u241 0595  
                    u321 068C                      u330 06AE                      u331 06AD  
                    u260 05A8                      u180 056F                      u340 06D0  
                    u261 05A7                      u181 056E                      u341 06CF  
                    u407 0623                      u255 059A                      u280 05B9  
                    u417 0631                      u281 05B8                      u427 063F  
                    u275 05A9                      u195 0576                      u437 0546  
                    u357 051A                      u285 05B5                      u367 05EB  
                    u295 05C1                      u377 05F9                      u387 0607  
                    u397 0615               Lcdoutput@i 004D                      fsr0 0004  
                    indf 0000      __end_of_Lcd_Command 054B                     _main 04EA  
                   _init 05D2                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072                    ?_main 0070                    ?_init 0070  
        __end_of___lwdiv 05D2                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _value 004A                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_Lcd_Data 051F  
        __initialization 07DE             __end_of_main 04F8             __end_of_init 0648  
            _Lcd_Command 0534                   ??_main 007D                   ??_init 0073  
                 ___bmul 051F                   ___wmul 0569                ??___lwdiv 007A  
       __end_of_keyscane 06F3  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 054B        __end_of_Lcdoutput 07DE  
              ?_Lcd_Data 0070               __pbssBANK0 003E               __pmaintext 04EA  
                ?___bmul 0070                  ?___wmul 0070               ??_Lcd_Data 0070  
              ?_keyscane 0070                  ___lwdiv 058E             ?_Lcd_Command 0070  
                __ptext1 0648                  __ptext2 06F3                  __ptext3 0569  
                __ptext4 058E                  __ptext5 051F                  __ptext6 050B  
                __ptext7 05D2                  __ptext8 0534     end_of_initialization 07FC  
             ??_keyscane 007D                Lcd_Data@i 0072           __end_of___bmul 0534  
         __end_of___wmul 058E                _Lcdoutput 06F3      start_initialization 07DE  
               ??___bmul 0071                 ??___wmul 0074               init_fetch0 04F8  
            __pdataBANK0 0020               ?_Lcdoutput 004D              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 004D         ___lwdiv@dividend 0078  
               ?___lwdiv 0076         ___lwdiv@quotient 007A           ___wmul@product 0074  
           Lcd_Command@i 0072        ___wmul@multiplier 0070              ??_Lcdoutput 004F  
               _Lcd_Data 050B          ___lwdiv@divisor 0076          ___lwdiv@counter 007C  
               _keyscane 0648                 init_ram0 04FC            ??_Lcd_Command 0070  
             _OPTION_REG 0081  
